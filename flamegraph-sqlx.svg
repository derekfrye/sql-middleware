<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="58374"><g><title>call_init (9 samples, 0.02%)</title><rect x="0.0051%" y="405" width="0.0154%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="9"/><text x="0.2551%" y="415.50"></text></g><g><title>call_init (9 samples, 0.02%)</title><rect x="0.0051%" y="389" width="0.0154%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="9"/><text x="0.2551%" y="399.50"></text></g><g><title>_dl_start_user (11 samples, 0.02%)</title><rect x="0.0034%" y="437" width="0.0188%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="11"/><text x="0.2534%" y="447.50"></text></g><g><title>_dl_init (11 samples, 0.02%)</title><rect x="0.0034%" y="421" width="0.0188%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="11"/><text x="0.2534%" y="431.50"></text></g><g><title>exit (10 samples, 0.02%)</title><rect x="0.0223%" y="389" width="0.0171%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="10"/><text x="0.2723%" y="399.50"></text></g><g><title>__run_exit_handlers (10 samples, 0.02%)</title><rect x="0.0223%" y="373" width="0.0171%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="10"/><text x="0.2723%" y="383.50"></text></g><g><title>SVG_filled_polygon.lto_priv.0 (10 samples, 0.02%)</title><rect x="0.0531%" y="261" width="0.0171%" height="15" fill="rgb(207,160,47)" fg:x="31" fg:w="10"/><text x="0.3031%" y="271.50"></text></g><g><title>__fprintf_chk (8 samples, 0.01%)</title><rect x="0.0565%" y="245" width="0.0137%" height="15" fill="rgb(228,23,34)" fg:x="33" fg:w="8"/><text x="0.3065%" y="255.50"></text></g><g><title>__vfprintf_internal (8 samples, 0.01%)</title><rect x="0.0565%" y="229" width="0.0137%" height="15" fill="rgb(218,30,26)" fg:x="33" fg:w="8"/><text x="0.3065%" y="239.50"></text></g><g><title>__printf_buffer (8 samples, 0.01%)</title><rect x="0.0565%" y="213" width="0.0137%" height="15" fill="rgb(220,122,19)" fg:x="33" fg:w="8"/><text x="0.3065%" y="223.50"></text></g><g><title>__printf_fp_l_buffer (7 samples, 0.01%)</title><rect x="0.0582%" y="197" width="0.0120%" height="15" fill="rgb(250,228,42)" fg:x="34" fg:w="7"/><text x="0.3082%" y="207.50"></text></g><g><title>__printf_fp_buffer_1.isra.0 (7 samples, 0.01%)</title><rect x="0.0582%" y="181" width="0.0120%" height="15" fill="rgb(240,193,28)" fg:x="34" fg:w="7"/><text x="0.3082%" y="191.50"></text></g><g><title>finish_filled_curve (12 samples, 0.02%)</title><rect x="0.0531%" y="277" width="0.0206%" height="15" fill="rgb(216,20,37)" fg:x="31" fg:w="12"/><text x="0.3031%" y="287.50"></text></g><g><title>plot_betweencurves (13 samples, 0.02%)</title><rect x="0.0531%" y="293" width="0.0223%" height="15" fill="rgb(206,188,39)" fg:x="31" fg:w="13"/><text x="0.3031%" y="303.50"></text></g><g><title>do_plot (18 samples, 0.03%)</title><rect x="0.0497%" y="309" width="0.0308%" height="15" fill="rgb(217,207,13)" fg:x="29" fg:w="18"/><text x="0.2997%" y="319.50"></text></g><g><title>get_data.lto_priv.0 (14 samples, 0.02%)</title><rect x="0.0805%" y="309" width="0.0240%" height="15" fill="rgb(231,73,38)" fg:x="47" fg:w="14"/><text x="0.3305%" y="319.50"></text></g><g><title>df_readline (13 samples, 0.02%)</title><rect x="0.0822%" y="293" width="0.0223%" height="15" fill="rgb(225,20,46)" fg:x="48" fg:w="13"/><text x="0.3322%" y="303.50"></text></g><g><title>__fread_chk (12 samples, 0.02%)</title><rect x="0.0839%" y="277" width="0.0206%" height="15" fill="rgb(210,31,41)" fg:x="49" fg:w="12"/><text x="0.3339%" y="287.50"></text></g><g><title>_IO_file_xsgetn (11 samples, 0.02%)</title><rect x="0.0857%" y="261" width="0.0188%" height="15" fill="rgb(221,200,47)" fg:x="50" fg:w="11"/><text x="0.3357%" y="271.50"></text></g><g><title>read (11 samples, 0.02%)</title><rect x="0.0857%" y="245" width="0.0188%" height="15" fill="rgb(226,26,5)" fg:x="50" fg:w="11"/><text x="0.3357%" y="255.50"></text></g><g><title>__syscall_cancel (11 samples, 0.02%)</title><rect x="0.0857%" y="229" width="0.0188%" height="15" fill="rgb(249,33,26)" fg:x="50" fg:w="11"/><text x="0.3357%" y="239.50"></text></g><g><title>__internal_syscall_cancel (11 samples, 0.02%)</title><rect x="0.0857%" y="213" width="0.0188%" height="15" fill="rgb(235,183,28)" fg:x="50" fg:w="11"/><text x="0.3357%" y="223.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.01%)</title><rect x="0.0908%" y="197" width="0.0137%" height="15" fill="rgb(221,5,38)" fg:x="53" fg:w="8"/><text x="0.3408%" y="207.50"></text></g><g><title>do_syscall_64 (8 samples, 0.01%)</title><rect x="0.0908%" y="181" width="0.0137%" height="15" fill="rgb(247,18,42)" fg:x="53" fg:w="8"/><text x="0.3408%" y="191.50"></text></g><g><title>eval_plots.lto_priv.0 (36 samples, 0.06%)</title><rect x="0.0445%" y="325" width="0.0617%" height="15" fill="rgb(241,131,45)" fg:x="26" fg:w="36"/><text x="0.2945%" y="335.50"></text></g><g><title>plot_command (37 samples, 0.06%)</title><rect x="0.0445%" y="341" width="0.0634%" height="15" fill="rgb(249,31,29)" fg:x="26" fg:w="37"/><text x="0.2945%" y="351.50"></text></g><g><title>do_line (41 samples, 0.07%)</title><rect x="0.0445%" y="357" width="0.0702%" height="15" fill="rgb(225,111,53)" fg:x="26" fg:w="41"/><text x="0.2945%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="0.1182%" y="229" width="0.0103%" height="15" fill="rgb(238,160,17)" fg:x="69" fg:w="6"/><text x="0.3682%" y="239.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="0.1182%" y="213" width="0.0103%" height="15" fill="rgb(214,148,48)" fg:x="69" fg:w="6"/><text x="0.3682%" y="223.50"></text></g><g><title>com_line (50 samples, 0.09%)</title><rect x="0.0445%" y="373" width="0.0857%" height="15" fill="rgb(232,36,49)" fg:x="26" fg:w="50"/><text x="0.2945%" y="383.50"></text></g><g><title>read_line (9 samples, 0.02%)</title><rect x="0.1148%" y="357" width="0.0154%" height="15" fill="rgb(209,103,24)" fg:x="67" fg:w="9"/><text x="0.3648%" y="367.50"></text></g><g><title>_IO_fgets (9 samples, 0.02%)</title><rect x="0.1148%" y="341" width="0.0154%" height="15" fill="rgb(229,88,8)" fg:x="67" fg:w="9"/><text x="0.3648%" y="351.50"></text></g><g><title>_IO_getline_info (9 samples, 0.02%)</title><rect x="0.1148%" y="325" width="0.0154%" height="15" fill="rgb(213,181,19)" fg:x="67" fg:w="9"/><text x="0.3648%" y="335.50"></text></g><g><title>_IO_default_uflow (9 samples, 0.02%)</title><rect x="0.1148%" y="309" width="0.0154%" height="15" fill="rgb(254,191,54)" fg:x="67" fg:w="9"/><text x="0.3648%" y="319.50"></text></g><g><title>_IO_file_underflow@@GLIBC_2.2.5 (9 samples, 0.02%)</title><rect x="0.1148%" y="293" width="0.0154%" height="15" fill="rgb(241,83,37)" fg:x="67" fg:w="9"/><text x="0.3648%" y="303.50"></text></g><g><title>read (9 samples, 0.02%)</title><rect x="0.1148%" y="277" width="0.0154%" height="15" fill="rgb(233,36,39)" fg:x="67" fg:w="9"/><text x="0.3648%" y="287.50"></text></g><g><title>__syscall_cancel (9 samples, 0.02%)</title><rect x="0.1148%" y="261" width="0.0154%" height="15" fill="rgb(226,3,54)" fg:x="67" fg:w="9"/><text x="0.3648%" y="271.50"></text></g><g><title>__internal_syscall_cancel (9 samples, 0.02%)</title><rect x="0.1148%" y="245" width="0.0154%" height="15" fill="rgb(245,192,40)" fg:x="67" fg:w="9"/><text x="0.3648%" y="255.50"></text></g><g><title>locale_handler (6 samples, 0.01%)</title><rect x="0.1370%" y="373" width="0.0103%" height="15" fill="rgb(238,167,29)" fg:x="80" fg:w="6"/><text x="0.3870%" y="383.50"></text></g><g><title>setlocale (6 samples, 0.01%)</title><rect x="0.1370%" y="357" width="0.0103%" height="15" fill="rgb(232,182,51)" fg:x="80" fg:w="6"/><text x="0.3870%" y="367.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (74 samples, 0.13%)</title><rect x="0.0223%" y="421" width="0.1268%" height="15" fill="rgb(231,60,39)" fg:x="13" fg:w="74"/><text x="0.2723%" y="431.50"></text></g><g><title>__libc_start_call_main (74 samples, 0.13%)</title><rect x="0.0223%" y="405" width="0.1268%" height="15" fill="rgb(208,69,12)" fg:x="13" fg:w="74"/><text x="0.2723%" y="415.50"></text></g><g><title>main (64 samples, 0.11%)</title><rect x="0.0394%" y="389" width="0.1096%" height="15" fill="rgb(235,93,37)" fg:x="23" fg:w="64"/><text x="0.2894%" y="399.50"></text></g><g><title>do_mmap (8 samples, 0.01%)</title><rect x="0.1696%" y="149" width="0.0137%" height="15" fill="rgb(213,116,39)" fg:x="99" fg:w="8"/><text x="0.4196%" y="159.50"></text></g><g><title>__mmap_region (8 samples, 0.01%)</title><rect x="0.1696%" y="133" width="0.0137%" height="15" fill="rgb(222,207,29)" fg:x="99" fg:w="8"/><text x="0.4196%" y="143.50"></text></g><g><title>_dl_map_segment (10 samples, 0.02%)</title><rect x="0.1679%" y="261" width="0.0171%" height="15" fill="rgb(206,96,30)" fg:x="98" fg:w="10"/><text x="0.4179%" y="271.50"></text></g><g><title>mmap64 (10 samples, 0.02%)</title><rect x="0.1679%" y="245" width="0.0171%" height="15" fill="rgb(218,138,4)" fg:x="98" fg:w="10"/><text x="0.4179%" y="255.50"></text></g><g><title>__mmap64 (10 samples, 0.02%)</title><rect x="0.1679%" y="229" width="0.0171%" height="15" fill="rgb(250,191,14)" fg:x="98" fg:w="10"/><text x="0.4179%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.02%)</title><rect x="0.1679%" y="213" width="0.0171%" height="15" fill="rgb(239,60,40)" fg:x="98" fg:w="10"/><text x="0.4179%" y="223.50"></text></g><g><title>do_syscall_64 (10 samples, 0.02%)</title><rect x="0.1679%" y="197" width="0.0171%" height="15" fill="rgb(206,27,48)" fg:x="98" fg:w="10"/><text x="0.4179%" y="207.50"></text></g><g><title>ksys_mmap_pgoff (10 samples, 0.02%)</title><rect x="0.1679%" y="181" width="0.0171%" height="15" fill="rgb(225,35,8)" fg:x="98" fg:w="10"/><text x="0.4179%" y="191.50"></text></g><g><title>vm_mmap_pgoff (9 samples, 0.02%)</title><rect x="0.1696%" y="165" width="0.0154%" height="15" fill="rgb(250,213,24)" fg:x="99" fg:w="9"/><text x="0.4196%" y="175.50"></text></g><g><title>memset (6 samples, 0.01%)</title><rect x="0.1850%" y="261" width="0.0103%" height="15" fill="rgb(247,123,22)" fg:x="108" fg:w="6"/><text x="0.4350%" y="271.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.01%)</title><rect x="0.1850%" y="245" width="0.0103%" height="15" fill="rgb(231,138,38)" fg:x="108" fg:w="6"/><text x="0.4350%" y="255.50"></text></g><g><title>exc_page_fault (6 samples, 0.01%)</title><rect x="0.1850%" y="229" width="0.0103%" height="15" fill="rgb(231,145,46)" fg:x="108" fg:w="6"/><text x="0.4350%" y="239.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.01%)</title><rect x="0.1850%" y="213" width="0.0103%" height="15" fill="rgb(251,118,11)" fg:x="108" fg:w="6"/><text x="0.4350%" y="223.50"></text></g><g><title>handle_mm_fault (6 samples, 0.01%)</title><rect x="0.1850%" y="197" width="0.0103%" height="15" fill="rgb(217,147,25)" fg:x="108" fg:w="6"/><text x="0.4350%" y="207.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.01%)</title><rect x="0.1850%" y="181" width="0.0103%" height="15" fill="rgb(247,81,37)" fg:x="108" fg:w="6"/><text x="0.4350%" y="191.50"></text></g><g><title>do_fault (6 samples, 0.01%)</title><rect x="0.1850%" y="165" width="0.0103%" height="15" fill="rgb(209,12,38)" fg:x="108" fg:w="6"/><text x="0.4350%" y="175.50"></text></g><g><title>do_mmap (18 samples, 0.03%)</title><rect x="0.1970%" y="165" width="0.0308%" height="15" fill="rgb(227,1,9)" fg:x="115" fg:w="18"/><text x="0.4470%" y="175.50"></text></g><g><title>__mmap_region (18 samples, 0.03%)</title><rect x="0.1970%" y="149" width="0.0308%" height="15" fill="rgb(248,47,43)" fg:x="115" fg:w="18"/><text x="0.4470%" y="159.50"></text></g><g><title>vms_gather_munmap_vmas (8 samples, 0.01%)</title><rect x="0.2141%" y="133" width="0.0137%" height="15" fill="rgb(221,10,30)" fg:x="125" fg:w="8"/><text x="0.4641%" y="143.50"></text></g><g><title>__split_vma (8 samples, 0.01%)</title><rect x="0.2141%" y="117" width="0.0137%" height="15" fill="rgb(210,229,1)" fg:x="125" fg:w="8"/><text x="0.4641%" y="127.50"></text></g><g><title>_dl_map_segments (37 samples, 0.06%)</title><rect x="0.1679%" y="277" width="0.0634%" height="15" fill="rgb(222,148,37)" fg:x="98" fg:w="37"/><text x="0.4179%" y="287.50"></text></g><g><title>mmap64 (21 samples, 0.04%)</title><rect x="0.1953%" y="261" width="0.0360%" height="15" fill="rgb(234,67,33)" fg:x="114" fg:w="21"/><text x="0.4453%" y="271.50"></text></g><g><title>__mmap64 (21 samples, 0.04%)</title><rect x="0.1953%" y="245" width="0.0360%" height="15" fill="rgb(247,98,35)" fg:x="114" fg:w="21"/><text x="0.4453%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.03%)</title><rect x="0.1970%" y="229" width="0.0343%" height="15" fill="rgb(247,138,52)" fg:x="115" fg:w="20"/><text x="0.4470%" y="239.50"></text></g><g><title>do_syscall_64 (20 samples, 0.03%)</title><rect x="0.1970%" y="213" width="0.0343%" height="15" fill="rgb(213,79,30)" fg:x="115" fg:w="20"/><text x="0.4470%" y="223.50"></text></g><g><title>ksys_mmap_pgoff (20 samples, 0.03%)</title><rect x="0.1970%" y="197" width="0.0343%" height="15" fill="rgb(246,177,23)" fg:x="115" fg:w="20"/><text x="0.4470%" y="207.50"></text></g><g><title>vm_mmap_pgoff (20 samples, 0.03%)</title><rect x="0.1970%" y="181" width="0.0343%" height="15" fill="rgb(230,62,27)" fg:x="115" fg:w="20"/><text x="0.4470%" y="191.50"></text></g><g><title>_dl_setup_hash (6 samples, 0.01%)</title><rect x="0.2415%" y="277" width="0.0103%" height="15" fill="rgb(216,154,8)" fg:x="141" fg:w="6"/><text x="0.4915%" y="287.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.01%)</title><rect x="0.2415%" y="261" width="0.0103%" height="15" fill="rgb(244,35,45)" fg:x="141" fg:w="6"/><text x="0.4915%" y="271.50"></text></g><g><title>exc_page_fault (6 samples, 0.01%)</title><rect x="0.2415%" y="245" width="0.0103%" height="15" fill="rgb(251,115,12)" fg:x="141" fg:w="6"/><text x="0.4915%" y="255.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.01%)</title><rect x="0.2518%" y="277" width="0.0103%" height="15" fill="rgb(240,54,50)" fg:x="147" fg:w="6"/><text x="0.5018%" y="287.50"></text></g><g><title>exc_page_fault (6 samples, 0.01%)</title><rect x="0.2518%" y="261" width="0.0103%" height="15" fill="rgb(233,84,52)" fg:x="147" fg:w="6"/><text x="0.5018%" y="271.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.01%)</title><rect x="0.2518%" y="245" width="0.0103%" height="15" fill="rgb(207,117,47)" fg:x="147" fg:w="6"/><text x="0.5018%" y="255.50"></text></g><g><title>handle_mm_fault (6 samples, 0.01%)</title><rect x="0.2518%" y="229" width="0.0103%" height="15" fill="rgb(249,43,39)" fg:x="147" fg:w="6"/><text x="0.5018%" y="239.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.01%)</title><rect x="0.2518%" y="213" width="0.0103%" height="15" fill="rgb(209,38,44)" fg:x="147" fg:w="6"/><text x="0.5018%" y="223.50"></text></g><g><title>do_fault (6 samples, 0.01%)</title><rect x="0.2518%" y="197" width="0.0103%" height="15" fill="rgb(236,212,23)" fg:x="147" fg:w="6"/><text x="0.5018%" y="207.50"></text></g><g><title>do_read_fault (6 samples, 0.01%)</title><rect x="0.2518%" y="181" width="0.0103%" height="15" fill="rgb(242,79,21)" fg:x="147" fg:w="6"/><text x="0.5018%" y="191.50"></text></g><g><title>elf_get_dynamic_info (7 samples, 0.01%)</title><rect x="0.2621%" y="277" width="0.0120%" height="15" fill="rgb(211,96,35)" fg:x="153" fg:w="7"/><text x="0.5121%" y="287.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.01%)</title><rect x="0.2638%" y="261" width="0.0103%" height="15" fill="rgb(253,215,40)" fg:x="154" fg:w="6"/><text x="0.5138%" y="271.50"></text></g><g><title>exc_page_fault (6 samples, 0.01%)</title><rect x="0.2638%" y="245" width="0.0103%" height="15" fill="rgb(211,81,21)" fg:x="154" fg:w="6"/><text x="0.5138%" y="255.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.01%)</title><rect x="0.2638%" y="229" width="0.0103%" height="15" fill="rgb(208,190,38)" fg:x="154" fg:w="6"/><text x="0.5138%" y="239.50"></text></g><g><title>_dl_map_object_from_fd (68 samples, 0.12%)</title><rect x="0.1593%" y="293" width="0.1165%" height="15" fill="rgb(235,213,38)" fg:x="93" fg:w="68"/><text x="0.4093%" y="303.50"></text></g><g><title>do_open (6 samples, 0.01%)</title><rect x="0.2861%" y="165" width="0.0103%" height="15" fill="rgb(237,122,38)" fg:x="167" fg:w="6"/><text x="0.5361%" y="175.50"></text></g><g><title>vfs_open (6 samples, 0.01%)</title><rect x="0.2861%" y="149" width="0.0103%" height="15" fill="rgb(244,218,35)" fg:x="167" fg:w="6"/><text x="0.5361%" y="159.50"></text></g><g><title>do_dentry_open (6 samples, 0.01%)</title><rect x="0.2861%" y="133" width="0.0103%" height="15" fill="rgb(240,68,47)" fg:x="167" fg:w="6"/><text x="0.5361%" y="143.50"></text></g><g><title>link_path_walk (7 samples, 0.01%)</title><rect x="0.2964%" y="165" width="0.0120%" height="15" fill="rgb(210,16,53)" fg:x="173" fg:w="7"/><text x="0.5464%" y="175.50"></text></g><g><title>do_filp_open (17 samples, 0.03%)</title><rect x="0.2827%" y="197" width="0.0291%" height="15" fill="rgb(235,124,12)" fg:x="165" fg:w="17"/><text x="0.5327%" y="207.50"></text></g><g><title>path_openat (15 samples, 0.03%)</title><rect x="0.2861%" y="181" width="0.0257%" height="15" fill="rgb(224,169,11)" fg:x="167" fg:w="15"/><text x="0.5361%" y="191.50"></text></g><g><title>open_verify.constprop.0 (19 samples, 0.03%)</title><rect x="0.2809%" y="293" width="0.0325%" height="15" fill="rgb(250,166,2)" fg:x="164" fg:w="19"/><text x="0.5309%" y="303.50"></text></g><g><title>__open64_nocancel (18 samples, 0.03%)</title><rect x="0.2827%" y="277" width="0.0308%" height="15" fill="rgb(242,216,29)" fg:x="165" fg:w="18"/><text x="0.5327%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.03%)</title><rect x="0.2827%" y="261" width="0.0308%" height="15" fill="rgb(230,116,27)" fg:x="165" fg:w="18"/><text x="0.5327%" y="271.50"></text></g><g><title>do_syscall_64 (18 samples, 0.03%)</title><rect x="0.2827%" y="245" width="0.0308%" height="15" fill="rgb(228,99,48)" fg:x="165" fg:w="18"/><text x="0.5327%" y="255.50"></text></g><g><title>__x64_sys_openat (18 samples, 0.03%)</title><rect x="0.2827%" y="229" width="0.0308%" height="15" fill="rgb(253,11,6)" fg:x="165" fg:w="18"/><text x="0.5327%" y="239.50"></text></g><g><title>do_sys_openat2 (18 samples, 0.03%)</title><rect x="0.2827%" y="213" width="0.0308%" height="15" fill="rgb(247,143,39)" fg:x="165" fg:w="18"/><text x="0.5327%" y="223.50"></text></g><g><title>_dl_map_object_deps (104 samples, 0.18%)</title><rect x="0.1508%" y="357" width="0.1782%" height="15" fill="rgb(236,97,10)" fg:x="88" fg:w="104"/><text x="0.4008%" y="367.50"></text></g><g><title>_dl_catch_exception (104 samples, 0.18%)</title><rect x="0.1508%" y="341" width="0.1782%" height="15" fill="rgb(233,208,19)" fg:x="88" fg:w="104"/><text x="0.4008%" y="351.50"></text></g><g><title>openaux (104 samples, 0.18%)</title><rect x="0.1508%" y="325" width="0.1782%" height="15" fill="rgb(216,164,2)" fg:x="88" fg:w="104"/><text x="0.4008%" y="335.50"></text></g><g><title>_dl_map_object (104 samples, 0.18%)</title><rect x="0.1508%" y="309" width="0.1782%" height="15" fill="rgb(220,129,5)" fg:x="88" fg:w="104"/><text x="0.4008%" y="319.50"></text></g><g><title>strcmp (9 samples, 0.02%)</title><rect x="0.3135%" y="293" width="0.0154%" height="15" fill="rgb(242,17,10)" fg:x="183" fg:w="9"/><text x="0.5635%" y="303.50"></text></g><g><title>__split_vma (6 samples, 0.01%)</title><rect x="0.3323%" y="213" width="0.0103%" height="15" fill="rgb(242,107,0)" fg:x="194" fg:w="6"/><text x="0.5823%" y="223.50"></text></g><g><title>mprotect_fixup (8 samples, 0.01%)</title><rect x="0.3306%" y="261" width="0.0137%" height="15" fill="rgb(251,28,31)" fg:x="193" fg:w="8"/><text x="0.5806%" y="271.50"></text></g><g><title>vma_modify_flags (7 samples, 0.01%)</title><rect x="0.3323%" y="245" width="0.0120%" height="15" fill="rgb(233,223,10)" fg:x="194" fg:w="7"/><text x="0.5823%" y="255.50"></text></g><g><title>vma_modify (7 samples, 0.01%)</title><rect x="0.3323%" y="229" width="0.0120%" height="15" fill="rgb(215,21,27)" fg:x="194" fg:w="7"/><text x="0.5823%" y="239.50"></text></g><g><title>_dl_protect_relro (11 samples, 0.02%)</title><rect x="0.3289%" y="357" width="0.0188%" height="15" fill="rgb(232,23,21)" fg:x="192" fg:w="11"/><text x="0.5789%" y="367.50"></text></g><g><title>mprotect (11 samples, 0.02%)</title><rect x="0.3289%" y="341" width="0.0188%" height="15" fill="rgb(244,5,23)" fg:x="192" fg:w="11"/><text x="0.5789%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.02%)</title><rect x="0.3289%" y="325" width="0.0188%" height="15" fill="rgb(226,81,46)" fg:x="192" fg:w="11"/><text x="0.5789%" y="335.50"></text></g><g><title>do_syscall_64 (11 samples, 0.02%)</title><rect x="0.3289%" y="309" width="0.0188%" height="15" fill="rgb(247,70,30)" fg:x="192" fg:w="11"/><text x="0.5789%" y="319.50"></text></g><g><title>__x64_sys_mprotect (11 samples, 0.02%)</title><rect x="0.3289%" y="293" width="0.0188%" height="15" fill="rgb(212,68,19)" fg:x="192" fg:w="11"/><text x="0.5789%" y="303.50"></text></g><g><title>do_mprotect_pkey (11 samples, 0.02%)</title><rect x="0.3289%" y="277" width="0.0188%" height="15" fill="rgb(240,187,13)" fg:x="192" fg:w="11"/><text x="0.5789%" y="287.50"></text></g><g><title>_dl_receive_error (6 samples, 0.01%)</title><rect x="0.3478%" y="357" width="0.0103%" height="15" fill="rgb(223,113,26)" fg:x="203" fg:w="6"/><text x="0.5978%" y="367.50"></text></g><g><title>version_check_doit (6 samples, 0.01%)</title><rect x="0.3478%" y="341" width="0.0103%" height="15" fill="rgb(206,192,2)" fg:x="203" fg:w="6"/><text x="0.5978%" y="351.50"></text></g><g><title>_dl_check_all_versions (6 samples, 0.01%)</title><rect x="0.3478%" y="325" width="0.0103%" height="15" fill="rgb(241,108,4)" fg:x="203" fg:w="6"/><text x="0.5978%" y="335.50"></text></g><g><title>_dl_check_map_versions (6 samples, 0.01%)</title><rect x="0.3478%" y="309" width="0.0103%" height="15" fill="rgb(247,173,49)" fg:x="203" fg:w="6"/><text x="0.5978%" y="319.50"></text></g><g><title>do_fault (6 samples, 0.01%)</title><rect x="0.3769%" y="245" width="0.0103%" height="15" fill="rgb(224,114,35)" fg:x="220" fg:w="6"/><text x="0.6269%" y="255.50"></text></g><g><title>asm_exc_page_fault (15 samples, 0.03%)</title><rect x="0.3752%" y="325" width="0.0257%" height="15" fill="rgb(245,159,27)" fg:x="219" fg:w="15"/><text x="0.6252%" y="335.50"></text></g><g><title>exc_page_fault (15 samples, 0.03%)</title><rect x="0.3752%" y="309" width="0.0257%" height="15" fill="rgb(245,172,44)" fg:x="219" fg:w="15"/><text x="0.6252%" y="319.50"></text></g><g><title>do_user_addr_fault (15 samples, 0.03%)</title><rect x="0.3752%" y="293" width="0.0257%" height="15" fill="rgb(236,23,11)" fg:x="219" fg:w="15"/><text x="0.6252%" y="303.50"></text></g><g><title>handle_mm_fault (15 samples, 0.03%)</title><rect x="0.3752%" y="277" width="0.0257%" height="15" fill="rgb(205,117,38)" fg:x="219" fg:w="15"/><text x="0.6252%" y="287.50"></text></g><g><title>__handle_mm_fault (14 samples, 0.02%)</title><rect x="0.3769%" y="261" width="0.0240%" height="15" fill="rgb(237,72,25)" fg:x="220" fg:w="14"/><text x="0.6269%" y="271.50"></text></g><g><title>wp_page_copy (8 samples, 0.01%)</title><rect x="0.3872%" y="245" width="0.0137%" height="15" fill="rgb(244,70,9)" fg:x="226" fg:w="8"/><text x="0.6372%" y="255.50"></text></g><g><title>_dl_new_hash (14 samples, 0.02%)</title><rect x="0.4231%" y="261" width="0.0240%" height="15" fill="rgb(217,125,39)" fg:x="247" fg:w="14"/><text x="0.6731%" y="271.50"></text></g><g><title>_dl_lookup_symbol_x (188 samples, 0.32%)</title><rect x="0.4197%" y="277" width="0.3221%" height="15" fill="rgb(235,36,10)" fg:x="245" fg:w="188"/><text x="0.6697%" y="287.50"></text></g><g><title>do_lookup_x (172 samples, 0.29%)</title><rect x="0.4471%" y="261" width="0.2947%" height="15" fill="rgb(251,123,47)" fg:x="261" fg:w="172"/><text x="0.6971%" y="271.50"></text></g><g><title>check_match (15 samples, 0.03%)</title><rect x="0.7161%" y="245" width="0.0257%" height="15" fill="rgb(221,13,13)" fg:x="418" fg:w="15"/><text x="0.9661%" y="255.50"></text></g><g><title>strcmp (8 samples, 0.01%)</title><rect x="0.7281%" y="229" width="0.0137%" height="15" fill="rgb(238,131,9)" fg:x="425" fg:w="8"/><text x="0.9781%" y="239.50"></text></g><g><title>elf_machine_rela (196 samples, 0.34%)</title><rect x="0.4077%" y="309" width="0.3358%" height="15" fill="rgb(211,50,8)" fg:x="238" fg:w="196"/><text x="0.6577%" y="319.50"></text></g><g><title>resolve_map (193 samples, 0.33%)</title><rect x="0.4129%" y="293" width="0.3306%" height="15" fill="rgb(245,182,24)" fg:x="241" fg:w="193"/><text x="0.6629%" y="303.50"></text></g><g><title>exc_page_fault (6 samples, 0.01%)</title><rect x="0.7435%" y="277" width="0.0103%" height="15" fill="rgb(242,14,37)" fg:x="434" fg:w="6"/><text x="0.9935%" y="287.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.01%)</title><rect x="0.7435%" y="261" width="0.0103%" height="15" fill="rgb(246,228,12)" fg:x="434" fg:w="6"/><text x="0.9935%" y="271.50"></text></g><g><title>handle_mm_fault (6 samples, 0.01%)</title><rect x="0.7435%" y="245" width="0.0103%" height="15" fill="rgb(213,55,15)" fg:x="434" fg:w="6"/><text x="0.9935%" y="255.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.01%)</title><rect x="0.7435%" y="229" width="0.0103%" height="15" fill="rgb(209,9,3)" fg:x="434" fg:w="6"/><text x="0.9935%" y="239.50"></text></g><g><title>_start (428 samples, 0.73%)</title><rect x="0.0223%" y="437" width="0.7332%" height="15" fill="rgb(230,59,30)" fg:x="13" fg:w="428"/><text x="0.2723%" y="447.50"></text></g><g><title>_dl_start (354 samples, 0.61%)</title><rect x="0.1490%" y="421" width="0.6064%" height="15" fill="rgb(209,121,21)" fg:x="87" fg:w="354"/><text x="0.3990%" y="431.50"></text></g><g><title>_dl_start_final (354 samples, 0.61%)</title><rect x="0.1490%" y="405" width="0.6064%" height="15" fill="rgb(220,109,13)" fg:x="87" fg:w="354"/><text x="0.3990%" y="415.50"></text></g><g><title>_dl_sysdep_start (354 samples, 0.61%)</title><rect x="0.1490%" y="389" width="0.6064%" height="15" fill="rgb(232,18,1)" fg:x="87" fg:w="354"/><text x="0.3990%" y="399.50"></text></g><g><title>dl_main (354 samples, 0.61%)</title><rect x="0.1490%" y="373" width="0.6064%" height="15" fill="rgb(215,41,42)" fg:x="87" fg:w="354"/><text x="0.3990%" y="383.50"></text></g><g><title>_dl_relocate_object (232 samples, 0.40%)</title><rect x="0.3580%" y="357" width="0.3974%" height="15" fill="rgb(224,123,36)" fg:x="209" fg:w="232"/><text x="0.6080%" y="367.50"></text></g><g><title>_dl_relocate_object_no_relro (232 samples, 0.40%)</title><rect x="0.3580%" y="341" width="0.3974%" height="15" fill="rgb(240,125,3)" fg:x="209" fg:w="232"/><text x="0.6080%" y="351.50"></text></g><g><title>elf_dynamic_do_Rela (207 samples, 0.35%)</title><rect x="0.4009%" y="325" width="0.3546%" height="15" fill="rgb(205,98,50)" fg:x="234" fg:w="207"/><text x="0.6509%" y="335.50"></text></g><g><title>elf_machine_rela_relative (7 samples, 0.01%)</title><rect x="0.7435%" y="309" width="0.0120%" height="15" fill="rgb(205,185,37)" fg:x="434" fg:w="7"/><text x="0.9935%" y="319.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.01%)</title><rect x="0.7435%" y="293" width="0.0120%" height="15" fill="rgb(238,207,15)" fg:x="434" fg:w="7"/><text x="0.9935%" y="303.50"></text></g><g><title>asm_exc_page_fault (13 samples, 0.02%)</title><rect x="0.7555%" y="437" width="0.0223%" height="15" fill="rgb(213,199,42)" fg:x="441" fg:w="13"/><text x="1.0055%" y="447.50"></text></g><g><title>gnuplot (457 samples, 0.78%)</title><rect x="0.0000%" y="453" width="0.7829%" height="15" fill="rgb(235,201,11)" fg:x="0" fg:w="457"/><text x="0.2500%" y="463.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (8 samples, 0.01%)</title><rect x="0.7880%" y="437" width="0.0137%" height="15" fill="rgb(207,46,11)" fg:x="460" fg:w="8"/><text x="1.0380%" y="447.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="0.8017%" y="437" width="0.0120%" height="15" fill="rgb(241,35,35)" fg:x="468" fg:w="7"/><text x="1.0517%" y="447.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (17 samples, 0.03%)</title><rect x="0.8189%" y="437" width="0.0291%" height="15" fill="rgb(243,32,47)" fg:x="478" fg:w="17"/><text x="1.0689%" y="447.50"></text></g><g><title>&lt;(alloc::vec::Vec&lt;A&gt;,alloc::vec::Vec&lt;B&gt;,alloc::vec::Vec&lt;C&gt;,alloc::vec::Vec&lt;D&gt;) as criterion::stats::tuple::TupledDistributionsBuilder&gt;::extend (6 samples, 0.01%)</title><rect x="0.8497%" y="437" width="0.0103%" height="15" fill="rgb(247,202,23)" fg:x="496" fg:w="6"/><text x="1.0997%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.01%)</title><rect x="0.8497%" y="421" width="0.0103%" height="15" fill="rgb(219,102,11)" fg:x="496" fg:w="6"/><text x="1.0997%" y="431.50"></text></g><g><title>core::ptr::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="0.8497%" y="405" width="0.0103%" height="15" fill="rgb(243,110,44)" fg:x="496" fg:w="6"/><text x="1.0997%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="0.8497%" y="389" width="0.0103%" height="15" fill="rgb(222,74,54)" fg:x="496" fg:w="6"/><text x="1.0997%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (74 samples, 0.13%)</title><rect x="0.9045%" y="421" width="0.1268%" height="15" fill="rgb(216,99,12)" fg:x="528" fg:w="74"/><text x="1.1545%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.01%)</title><rect x="1.0450%" y="421" width="0.0103%" height="15" fill="rgb(226,22,26)" fg:x="610" fg:w="6"/><text x="1.2950%" y="431.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (115 samples, 0.20%)</title><rect x="0.8685%" y="437" width="0.1970%" height="15" fill="rgb(217,163,10)" fg:x="507" fg:w="115"/><text x="1.1185%" y="447.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (7 samples, 0.01%)</title><rect x="1.0655%" y="437" width="0.0120%" height="15" fill="rgb(213,25,53)" fg:x="622" fg:w="7"/><text x="1.3155%" y="447.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.02%)</title><rect x="1.0861%" y="437" width="0.0240%" height="15" fill="rgb(252,105,26)" fg:x="634" fg:w="14"/><text x="1.3361%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (23 samples, 0.04%)</title><rect x="1.1186%" y="437" width="0.0394%" height="15" fill="rgb(220,39,43)" fg:x="653" fg:w="23"/><text x="1.3686%" y="447.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (8 samples, 0.01%)</title><rect x="1.1580%" y="437" width="0.0137%" height="15" fill="rgb(229,68,48)" fg:x="676" fg:w="8"/><text x="1.4080%" y="447.50"></text></g><g><title>cfree@GLIBC_2.2.5 (54 samples, 0.09%)</title><rect x="1.2077%" y="405" width="0.0925%" height="15" fill="rgb(252,8,32)" fg:x="705" fg:w="54"/><text x="1.4577%" y="415.50"></text></g><g><title>_int_free_chunk (18 samples, 0.03%)</title><rect x="1.2694%" y="389" width="0.0308%" height="15" fill="rgb(223,20,43)" fg:x="741" fg:w="18"/><text x="1.5194%" y="399.50"></text></g><g><title>event_listener::Event&lt;T&gt;::inner (10 samples, 0.02%)</title><rect x="1.3002%" y="405" width="0.0171%" height="15" fill="rgb(229,81,49)" fg:x="759" fg:w="10"/><text x="1.5502%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (75 samples, 0.13%)</title><rect x="1.1957%" y="421" width="0.1285%" height="15" fill="rgb(236,28,36)" fg:x="698" fg:w="75"/><text x="1.4457%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (91 samples, 0.16%)</title><rect x="1.1752%" y="437" width="0.1559%" height="15" fill="rgb(249,185,26)" fg:x="686" fg:w="91"/><text x="1.4252%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.01%)</title><rect x="1.3362%" y="437" width="0.0120%" height="15" fill="rgb(249,174,33)" fg:x="780" fg:w="7"/><text x="1.5862%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="1.3585%" y="421" width="0.0137%" height="15" fill="rgb(233,201,37)" fg:x="793" fg:w="8"/><text x="1.6085%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::for_value_raw (18 samples, 0.03%)</title><rect x="1.3722%" y="421" width="0.0308%" height="15" fill="rgb(221,78,26)" fg:x="801" fg:w="18"/><text x="1.6222%" y="431.50"></text></g><g><title>core::mem::size_of_val_raw (9 samples, 0.02%)</title><rect x="1.3876%" y="405" width="0.0154%" height="15" fill="rgb(250,127,30)" fg:x="810" fg:w="9"/><text x="1.6376%" y="415.50"></text></g><g><title>alloc::alloc::alloc (75 samples, 0.13%)</title><rect x="1.4116%" y="373" width="0.1285%" height="15" fill="rgb(230,49,44)" fg:x="824" fg:w="75"/><text x="1.6616%" y="383.50"></text></g><g><title>__rustc::__rdl_alloc (73 samples, 0.13%)</title><rect x="1.4150%" y="357" width="0.1251%" height="15" fill="rgb(229,67,23)" fg:x="826" fg:w="73"/><text x="1.6650%" y="367.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (73 samples, 0.13%)</title><rect x="1.4150%" y="341" width="0.1251%" height="15" fill="rgb(249,83,47)" fg:x="826" fg:w="73"/><text x="1.6650%" y="351.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (73 samples, 0.13%)</title><rect x="1.4150%" y="325" width="0.1251%" height="15" fill="rgb(215,43,3)" fg:x="826" fg:w="73"/><text x="1.6650%" y="335.50"></text></g><g><title>__posix_memalign (73 samples, 0.13%)</title><rect x="1.4150%" y="309" width="0.1251%" height="15" fill="rgb(238,154,13)" fg:x="826" fg:w="73"/><text x="1.6650%" y="319.50"></text></g><g><title>_mid_memalign.isra.0 (73 samples, 0.13%)</title><rect x="1.4150%" y="293" width="0.1251%" height="15" fill="rgb(219,56,2)" fg:x="826" fg:w="73"/><text x="1.6650%" y="303.50"></text></g><g><title>_int_memalign (50 samples, 0.09%)</title><rect x="1.4544%" y="277" width="0.0857%" height="15" fill="rgb(233,0,4)" fg:x="849" fg:w="50"/><text x="1.7044%" y="287.50"></text></g><g><title>_int_malloc (35 samples, 0.06%)</title><rect x="1.4801%" y="261" width="0.0600%" height="15" fill="rgb(235,30,7)" fg:x="864" fg:w="35"/><text x="1.7301%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.13%)</title><rect x="1.4116%" y="389" width="0.1302%" height="15" fill="rgb(250,79,13)" fg:x="824" fg:w="76"/><text x="1.6616%" y="399.50"></text></g><g><title>[unknown] (82 samples, 0.14%)</title><rect x="1.4116%" y="405" width="0.1405%" height="15" fill="rgb(211,146,34)" fg:x="824" fg:w="82"/><text x="1.6616%" y="415.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::new (7 samples, 0.01%)</title><rect x="1.5521%" y="405" width="0.0120%" height="15" fill="rgb(228,22,38)" fg:x="906" fg:w="7"/><text x="1.8021%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="1.5778%" y="389" width="0.0188%" height="15" fill="rgb(235,168,5)" fg:x="921" fg:w="11"/><text x="1.8278%" y="399.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (19 samples, 0.03%)</title><rect x="1.5675%" y="405" width="0.0325%" height="15" fill="rgb(221,155,16)" fg:x="915" fg:w="19"/><text x="1.8175%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (148 samples, 0.25%)</title><rect x="1.3482%" y="437" width="0.2535%" height="15" fill="rgb(215,215,53)" fg:x="787" fg:w="148"/><text x="1.5982%" y="447.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (114 samples, 0.20%)</title><rect x="1.4064%" y="421" width="0.1953%" height="15" fill="rgb(223,4,10)" fg:x="821" fg:w="114"/><text x="1.6564%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="1.6103%" y="437" width="0.0206%" height="15" fill="rgb(234,103,6)" fg:x="940" fg:w="12"/><text x="1.8603%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (7 samples, 0.01%)</title><rect x="1.6309%" y="437" width="0.0120%" height="15" fill="rgb(227,97,0)" fg:x="952" fg:w="7"/><text x="1.8809%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (61 samples, 0.10%)</title><rect x="1.6651%" y="421" width="0.1045%" height="15" fill="rgb(234,150,53)" fg:x="972" fg:w="61"/><text x="1.9151%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (59 samples, 0.10%)</title><rect x="1.6686%" y="405" width="0.1011%" height="15" fill="rgb(228,201,54)" fg:x="974" fg:w="59"/><text x="1.9186%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (76 samples, 0.13%)</title><rect x="1.6429%" y="437" width="0.1302%" height="15" fill="rgb(222,22,37)" fg:x="959" fg:w="76"/><text x="1.8929%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (38 samples, 0.07%)</title><rect x="1.7730%" y="437" width="0.0651%" height="15" fill="rgb(237,53,32)" fg:x="1035" fg:w="38"/><text x="2.0230%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.02%)</title><rect x="1.8467%" y="421" width="0.0206%" height="15" fill="rgb(233,25,53)" fg:x="1078" fg:w="12"/><text x="2.0967%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.02%)</title><rect x="1.8484%" y="405" width="0.0188%" height="15" fill="rgb(210,40,34)" fg:x="1079" fg:w="11"/><text x="2.0984%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="1.8381%" y="437" width="0.0308%" height="15" fill="rgb(241,220,44)" fg:x="1073" fg:w="18"/><text x="2.0881%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.02%)</title><rect x="1.8861%" y="437" width="0.0188%" height="15" fill="rgb(235,28,35)" fg:x="1101" fg:w="11"/><text x="2.1361%" y="447.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (352 samples, 0.60%)</title><rect x="1.9118%" y="437" width="0.6030%" height="15" fill="rgb(210,56,17)" fg:x="1116" fg:w="352"/><text x="2.1618%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="2.5319%" y="437" width="0.0223%" height="15" fill="rgb(224,130,29)" fg:x="1478" fg:w="13"/><text x="2.7819%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (105 samples, 0.18%)</title><rect x="2.8968%" y="421" width="0.1799%" height="15" fill="rgb(235,212,8)" fg:x="1691" fg:w="105"/><text x="3.1468%" y="431.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;usize&gt;::into_slice_range (22 samples, 0.04%)</title><rect x="3.0390%" y="405" width="0.0377%" height="15" fill="rgb(223,33,50)" fg:x="1774" fg:w="22"/><text x="3.2890%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (301 samples, 0.52%)</title><rect x="2.5731%" y="437" width="0.5156%" height="15" fill="rgb(219,149,13)" fg:x="1502" fg:w="301"/><text x="2.8231%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.01%)</title><rect x="3.0784%" y="421" width="0.0103%" height="15" fill="rgb(250,156,29)" fg:x="1797" fg:w="6"/><text x="3.3284%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (24 samples, 0.04%)</title><rect x="3.0887%" y="437" width="0.0411%" height="15" fill="rgb(216,193,19)" fg:x="1803" fg:w="24"/><text x="3.3387%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (27 samples, 0.05%)</title><rect x="3.2395%" y="421" width="0.0463%" height="15" fill="rgb(216,135,14)" fg:x="1891" fg:w="27"/><text x="3.4895%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (92 samples, 0.16%)</title><rect x="3.1298%" y="437" width="0.1576%" height="15" fill="rgb(241,47,5)" fg:x="1827" fg:w="92"/><text x="3.3798%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (8 samples, 0.01%)</title><rect x="3.2874%" y="437" width="0.0137%" height="15" fill="rgb(233,42,35)" fg:x="1919" fg:w="8"/><text x="3.5374%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeToInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (21 samples, 0.04%)</title><rect x="3.3011%" y="437" width="0.0360%" height="15" fill="rgb(231,13,6)" fg:x="1927" fg:w="21"/><text x="3.5511%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (18 samples, 0.03%)</title><rect x="3.3422%" y="437" width="0.0308%" height="15" fill="rgb(207,181,40)" fg:x="1951" fg:w="18"/><text x="3.5922%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="3.3628%" y="421" width="0.0103%" height="15" fill="rgb(254,173,49)" fg:x="1963" fg:w="6"/><text x="3.6128%" y="431.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24 samples, 0.04%)</title><rect x="3.3782%" y="437" width="0.0411%" height="15" fill="rgb(221,1,38)" fg:x="1972" fg:w="24"/><text x="3.6282%" y="447.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.03%)</title><rect x="3.4262%" y="437" width="0.0291%" height="15" fill="rgb(206,124,46)" fg:x="2000" fg:w="17"/><text x="3.6762%" y="447.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_ref (8 samples, 0.01%)</title><rect x="3.4416%" y="421" width="0.0137%" height="15" fill="rgb(249,21,11)" fg:x="2009" fg:w="8"/><text x="3.6916%" y="431.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::ops::deref::DerefMut&gt;::deref_mut (10 samples, 0.02%)</title><rect x="3.4553%" y="437" width="0.0171%" height="15" fill="rgb(222,201,40)" fg:x="2017" fg:w="10"/><text x="3.7053%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;T&gt;&gt;::from (7 samples, 0.01%)</title><rect x="3.4724%" y="437" width="0.0120%" height="15" fill="rgb(235,61,29)" fg:x="2027" fg:w="7"/><text x="3.7224%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="3.5341%" y="421" width="0.0103%" height="15" fill="rgb(219,207,3)" fg:x="2063" fg:w="6"/><text x="3.7841%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (39 samples, 0.07%)</title><rect x="3.4844%" y="437" width="0.0668%" height="15" fill="rgb(222,56,46)" fg:x="2034" fg:w="39"/><text x="3.7344%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (23 samples, 0.04%)</title><rect x="3.5547%" y="437" width="0.0394%" height="15" fill="rgb(239,76,54)" fg:x="2075" fg:w="23"/><text x="3.8047%" y="447.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (51 samples, 0.09%)</title><rect x="8.1389%" y="421" width="0.0874%" height="15" fill="rgb(231,124,27)" fg:x="4751" fg:w="51"/><text x="8.3889%" y="431.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (54 samples, 0.09%)</title><rect x="8.2263%" y="421" width="0.0925%" height="15" fill="rgb(249,195,6)" fg:x="4802" fg:w="54"/><text x="8.4763%" y="431.50"></text></g><g><title>task_tick_fair (6 samples, 0.01%)</title><rect x="8.3342%" y="293" width="0.0103%" height="15" fill="rgb(237,174,47)" fg:x="4865" fg:w="6"/><text x="8.5842%" y="303.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (11 samples, 0.02%)</title><rect x="8.3273%" y="421" width="0.0188%" height="15" fill="rgb(206,201,31)" fg:x="4861" fg:w="11"/><text x="8.5773%" y="431.50"></text></g><g><title>sysvec_apic_timer_interrupt (9 samples, 0.02%)</title><rect x="8.3308%" y="405" width="0.0154%" height="15" fill="rgb(231,57,52)" fg:x="4863" fg:w="9"/><text x="8.5808%" y="415.50"></text></g><g><title>__sysvec_apic_timer_interrupt (9 samples, 0.02%)</title><rect x="8.3308%" y="389" width="0.0154%" height="15" fill="rgb(248,177,22)" fg:x="4863" fg:w="9"/><text x="8.5808%" y="399.50"></text></g><g><title>hrtimer_interrupt (9 samples, 0.02%)</title><rect x="8.3308%" y="373" width="0.0154%" height="15" fill="rgb(215,211,37)" fg:x="4863" fg:w="9"/><text x="8.5808%" y="383.50"></text></g><g><title>__hrtimer_run_queues (9 samples, 0.02%)</title><rect x="8.3308%" y="357" width="0.0154%" height="15" fill="rgb(241,128,51)" fg:x="4863" fg:w="9"/><text x="8.5808%" y="367.50"></text></g><g><title>tick_nohz_handler (9 samples, 0.02%)</title><rect x="8.3308%" y="341" width="0.0154%" height="15" fill="rgb(227,165,31)" fg:x="4863" fg:w="9"/><text x="8.5808%" y="351.50"></text></g><g><title>update_process_times (7 samples, 0.01%)</title><rect x="8.3342%" y="325" width="0.0120%" height="15" fill="rgb(228,167,24)" fg:x="4865" fg:w="7"/><text x="8.5842%" y="335.50"></text></g><g><title>sched_tick (7 samples, 0.01%)</title><rect x="8.3342%" y="309" width="0.0120%" height="15" fill="rgb(228,143,12)" fg:x="4865" fg:w="7"/><text x="8.5842%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (35 samples, 0.06%)</title><rect x="8.3496%" y="421" width="0.0600%" height="15" fill="rgb(249,149,8)" fg:x="4874" fg:w="35"/><text x="8.5996%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::powi (7 samples, 0.01%)</title><rect x="8.3976%" y="405" width="0.0120%" height="15" fill="rgb(243,35,44)" fg:x="4902" fg:w="7"/><text x="8.6476%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,820 samples, 4.83%)</title><rect x="3.5941%" y="437" width="4.8309%" height="15" fill="rgb(246,89,9)" fg:x="2098" fg:w="2820"/><text x="3.8441%" y="447.50">&lt;core:..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (6 samples, 0.01%)</title><rect x="8.4147%" y="421" width="0.0103%" height="15" fill="rgb(233,213,13)" fg:x="4912" fg:w="6"/><text x="8.6647%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="8.4575%" y="421" width="0.0171%" height="15" fill="rgb(233,141,41)" fg:x="4937" fg:w="10"/><text x="8.7075%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.05%)</title><rect x="8.4250%" y="437" width="0.0548%" height="15" fill="rgb(239,167,4)" fg:x="4918" fg:w="32"/><text x="8.6750%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="8.4798%" y="437" width="0.0360%" height="15" fill="rgb(209,217,16)" fg:x="4950" fg:w="21"/><text x="8.7298%" y="447.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (19 samples, 0.03%)</title><rect x="8.5175%" y="437" width="0.0325%" height="15" fill="rgb(219,88,35)" fg:x="4972" fg:w="19"/><text x="8.7675%" y="447.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="8.5500%" y="437" width="0.0240%" height="15" fill="rgb(220,193,23)" fg:x="4991" fg:w="14"/><text x="8.8000%" y="447.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="8.5740%" y="437" width="0.0257%" height="15" fill="rgb(230,90,52)" fg:x="5005" fg:w="15"/><text x="8.8240%" y="447.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (17 samples, 0.03%)</title><rect x="8.5997%" y="437" width="0.0291%" height="15" fill="rgb(252,106,19)" fg:x="5020" fg:w="17"/><text x="8.8497%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::partial_cmp (16 samples, 0.03%)</title><rect x="8.6014%" y="421" width="0.0274%" height="15" fill="rgb(206,74,20)" fg:x="5021" fg:w="16"/><text x="8.8514%" y="431.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (50 samples, 0.09%)</title><rect x="8.6357%" y="437" width="0.0857%" height="15" fill="rgb(230,138,44)" fg:x="5041" fg:w="50"/><text x="8.8857%" y="447.50"></text></g><g><title>&lt;crossbeam_utils::cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="8.7248%" y="437" width="0.0120%" height="15" fill="rgb(235,182,43)" fg:x="5093" fg:w="7"/><text x="8.9748%" y="447.50"></text></g><g><title>&lt;event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner::ListLock&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.01%)</title><rect x="8.7436%" y="437" width="0.0120%" height="15" fill="rgb(242,16,51)" fg:x="5104" fg:w="7"/><text x="8.9936%" y="447.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (37 samples, 0.06%)</title><rect x="8.7573%" y="437" width="0.0634%" height="15" fill="rgb(248,9,4)" fg:x="5112" fg:w="37"/><text x="9.0073%" y="447.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (54 samples, 0.09%)</title><rect x="8.8224%" y="437" width="0.0925%" height="15" fill="rgb(210,31,22)" fg:x="5150" fg:w="54"/><text x="9.0724%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::abs (14 samples, 0.02%)</title><rect x="8.9218%" y="437" width="0.0240%" height="15" fill="rgb(239,54,39)" fg:x="5208" fg:w="14"/><text x="9.1718%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (262 samples, 0.45%)</title><rect x="8.9458%" y="437" width="0.4488%" height="15" fill="rgb(230,99,41)" fg:x="5222" fg:w="262"/><text x="9.1958%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::is_nan (13 samples, 0.02%)</title><rect x="9.3946%" y="437" width="0.0223%" height="15" fill="rgb(253,106,12)" fg:x="5484" fg:w="13"/><text x="9.6446%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::powi (14 samples, 0.02%)</title><rect x="9.4203%" y="437" width="0.0240%" height="15" fill="rgb(213,46,41)" fg:x="5499" fg:w="14"/><text x="9.6703%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (2,038 samples, 3.49%)</title><rect x="9.4443%" y="437" width="3.4913%" height="15" fill="rgb(215,133,35)" fg:x="5513" fg:w="2038"/><text x="9.6943%" y="447.50">&lt;f6..</text></g><g><title>core::f64::&lt;impl f64&gt;::recip (1,938 samples, 3.32%)</title><rect x="9.6156%" y="421" width="3.3200%" height="15" fill="rgb(213,28,5)" fg:x="5613" fg:w="1938"/><text x="9.8656%" y="431.50">cor..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (330 samples, 0.57%)</title><rect x="12.9356%" y="437" width="0.5653%" height="15" fill="rgb(215,77,49)" fg:x="7551" fg:w="330"/><text x="13.1856%" y="447.50"></text></g><g><title>&lt;flume::async::OwnedOrRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.02%)</title><rect x="13.5009%" y="437" width="0.0206%" height="15" fill="rgb(248,100,22)" fg:x="7881" fg:w="12"/><text x="13.7509%" y="447.50"></text></g><g><title>&lt;flume::async::SendFut&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.06%)</title><rect x="13.5266%" y="437" width="0.0600%" height="15" fill="rgb(208,67,9)" fg:x="7896" fg:w="35"/><text x="13.7766%" y="447.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (8 samples, 0.01%)</title><rect x="13.5728%" y="421" width="0.0137%" height="15" fill="rgb(219,133,21)" fg:x="7923" fg:w="8"/><text x="13.8228%" y="431.50"></text></g><g><title>&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="13.5900%" y="437" width="0.0188%" height="15" fill="rgb(246,46,29)" fg:x="7933" fg:w="11"/><text x="13.8400%" y="447.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (19 samples, 0.03%)</title><rect x="13.6208%" y="437" width="0.0325%" height="15" fill="rgb(246,185,52)" fg:x="7951" fg:w="19"/><text x="13.8708%" y="447.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (15 samples, 0.03%)</title><rect x="13.6276%" y="421" width="0.0257%" height="15" fill="rgb(252,136,11)" fg:x="7955" fg:w="15"/><text x="13.8776%" y="431.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="13.6533%" y="437" width="0.0223%" height="15" fill="rgb(219,138,53)" fg:x="7970" fg:w="13"/><text x="13.9033%" y="447.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="13.6842%" y="437" width="0.0137%" height="15" fill="rgb(211,51,23)" fg:x="7988" fg:w="8"/><text x="13.9342%" y="447.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (6 samples, 0.01%)</title><rect x="13.6876%" y="421" width="0.0103%" height="15" fill="rgb(247,221,28)" fg:x="7990" fg:w="6"/><text x="13.9376%" y="431.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (14 samples, 0.02%)</title><rect x="13.7099%" y="437" width="0.0240%" height="15" fill="rgb(251,222,45)" fg:x="8003" fg:w="14"/><text x="13.9599%" y="447.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (7 samples, 0.01%)</title><rect x="13.7219%" y="421" width="0.0120%" height="15" fill="rgb(217,162,53)" fg:x="8010" fg:w="7"/><text x="13.9719%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="13.7715%" y="405" width="0.0154%" height="15" fill="rgb(229,93,14)" fg:x="8039" fg:w="9"/><text x="14.0215%" y="415.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as futures_core::stream::Stream&gt;::poll_next (39 samples, 0.07%)</title><rect x="13.7339%" y="437" width="0.0668%" height="15" fill="rgb(209,67,49)" fg:x="8017" fg:w="39"/><text x="13.9839%" y="447.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (21 samples, 0.04%)</title><rect x="13.7647%" y="421" width="0.0360%" height="15" fill="rgb(213,87,29)" fg:x="8035" fg:w="21"/><text x="14.0147%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::MapOk&lt;sqlx_sqlite::connection::worker::ConnectionWorker::execute::{{closure}},flume::async::&lt;impl flume::Receiver&lt;core::result::Result&lt;either::Either&lt;sqlx_sqlite::query_result::SqliteQueryResult,sqlx_sqlite::row::SqliteRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;::into_stream&gt;&gt; (8 samples, 0.01%)</title><rect x="13.7870%" y="405" width="0.0137%" height="15" fill="rgb(205,151,52)" fg:x="8048" fg:w="8"/><text x="14.0370%" y="415.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="13.8007%" y="437" width="0.0257%" height="15" fill="rgb(253,215,39)" fg:x="8056" fg:w="15"/><text x="14.0507%" y="447.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="13.8264%" y="437" width="0.0137%" height="15" fill="rgb(221,220,41)" fg:x="8071" fg:w="8"/><text x="14.0764%" y="447.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (8 samples, 0.01%)</title><rect x="13.8401%" y="437" width="0.0137%" height="15" fill="rgb(218,133,21)" fg:x="8079" fg:w="8"/><text x="14.0901%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="13.8572%" y="421" width="0.0103%" height="15" fill="rgb(221,193,43)" fg:x="8089" fg:w="6"/><text x="14.1072%" y="431.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.04%)</title><rect x="13.8538%" y="437" width="0.0411%" height="15" fill="rgb(240,128,52)" fg:x="8087" fg:w="24"/><text x="14.1038%" y="447.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.03%)</title><rect x="13.8675%" y="421" width="0.0274%" height="15" fill="rgb(253,114,12)" fg:x="8095" fg:w="16"/><text x="14.1175%" y="431.50"></text></g><g><title>std::panicking::catch_unwind (11 samples, 0.02%)</title><rect x="13.8760%" y="405" width="0.0188%" height="15" fill="rgb(215,223,47)" fg:x="8100" fg:w="11"/><text x="14.1260%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (7 samples, 0.01%)</title><rect x="13.9103%" y="421" width="0.0120%" height="15" fill="rgb(248,225,23)" fg:x="8120" fg:w="7"/><text x="14.1603%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (20 samples, 0.03%)</title><rect x="13.8949%" y="437" width="0.0343%" height="15" fill="rgb(250,108,0)" fg:x="8111" fg:w="20"/><text x="14.1449%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (11 samples, 0.02%)</title><rect x="13.9291%" y="437" width="0.0188%" height="15" fill="rgb(228,208,7)" fg:x="8131" fg:w="11"/><text x="14.1791%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.02%)</title><rect x="13.9737%" y="405" width="0.0154%" height="15" fill="rgb(244,45,10)" fg:x="8157" fg:w="9"/><text x="14.2237%" y="415.50"></text></g><g><title>__futex_hash.constprop.0 (9 samples, 0.02%)</title><rect x="14.0679%" y="325" width="0.0154%" height="15" fill="rgb(207,125,25)" fg:x="8212" fg:w="9"/><text x="14.3179%" y="335.50"></text></g><g><title>futex_wake_mark (47 samples, 0.08%)</title><rect x="14.0885%" y="325" width="0.0805%" height="15" fill="rgb(210,195,18)" fg:x="8224" fg:w="47"/><text x="14.3385%" y="335.50"></text></g><g><title>__task_rq_lock (24 samples, 0.04%)</title><rect x="14.1947%" y="293" width="0.0411%" height="15" fill="rgb(249,80,12)" fg:x="8286" fg:w="24"/><text x="14.4447%" y="303.50"></text></g><g><title>raw_spin_rq_lock_nested (23 samples, 0.04%)</title><rect x="14.1964%" y="277" width="0.0394%" height="15" fill="rgb(221,65,9)" fg:x="8287" fg:w="23"/><text x="14.4464%" y="287.50"></text></g><g><title>_raw_spin_lock (23 samples, 0.04%)</title><rect x="14.1964%" y="261" width="0.0394%" height="15" fill="rgb(235,49,36)" fg:x="8287" fg:w="23"/><text x="14.4464%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (23 samples, 0.04%)</title><rect x="14.1964%" y="245" width="0.0394%" height="15" fill="rgb(225,32,20)" fg:x="8287" fg:w="23"/><text x="14.4464%" y="255.50"></text></g><g><title>select_idle_sibling (26 samples, 0.04%)</title><rect x="14.2563%" y="261" width="0.0445%" height="15" fill="rgb(215,141,46)" fg:x="8322" fg:w="26"/><text x="14.5063%" y="271.50"></text></g><g><title>select_task_rq (48 samples, 0.08%)</title><rect x="14.2392%" y="293" width="0.0822%" height="15" fill="rgb(250,160,47)" fg:x="8312" fg:w="48"/><text x="14.4892%" y="303.50"></text></g><g><title>select_task_rq_fair (44 samples, 0.08%)</title><rect x="14.2461%" y="277" width="0.0754%" height="15" fill="rgb(216,222,40)" fg:x="8316" fg:w="44"/><text x="14.4961%" y="287.50"></text></g><g><title>wake_affine (12 samples, 0.02%)</title><rect x="14.3009%" y="261" width="0.0206%" height="15" fill="rgb(234,217,39)" fg:x="8348" fg:w="12"/><text x="14.5509%" y="271.50"></text></g><g><title>available_idle_cpu (12 samples, 0.02%)</title><rect x="14.3009%" y="245" width="0.0206%" height="15" fill="rgb(207,178,40)" fg:x="8348" fg:w="12"/><text x="14.5509%" y="255.50"></text></g><g><title>__smp_call_single_queue (92 samples, 0.16%)</title><rect x="14.3351%" y="277" width="0.1576%" height="15" fill="rgb(221,136,13)" fg:x="8368" fg:w="92"/><text x="14.5851%" y="287.50"></text></g><g><title>call_function_single_prep_ipi (75 samples, 0.13%)</title><rect x="14.3643%" y="261" width="0.1285%" height="15" fill="rgb(249,199,10)" fg:x="8385" fg:w="75"/><text x="14.6143%" y="271.50"></text></g><g><title>__x64_sys_futex (294 samples, 0.50%)</title><rect x="13.9942%" y="373" width="0.5036%" height="15" fill="rgb(249,222,13)" fg:x="8169" fg:w="294"/><text x="14.2442%" y="383.50"></text></g><g><title>do_futex (294 samples, 0.50%)</title><rect x="13.9942%" y="357" width="0.5036%" height="15" fill="rgb(244,185,38)" fg:x="8169" fg:w="294"/><text x="14.2442%" y="367.50"></text></g><g><title>futex_wake (292 samples, 0.50%)</title><rect x="13.9977%" y="341" width="0.5002%" height="15" fill="rgb(236,202,9)" fg:x="8171" fg:w="292"/><text x="14.2477%" y="351.50"></text></g><g><title>wake_up_q (186 samples, 0.32%)</title><rect x="14.1793%" y="325" width="0.3186%" height="15" fill="rgb(250,229,37)" fg:x="8277" fg:w="186"/><text x="14.4293%" y="335.50"></text></g><g><title>try_to_wake_up (183 samples, 0.31%)</title><rect x="14.1844%" y="309" width="0.3135%" height="15" fill="rgb(206,174,23)" fg:x="8280" fg:w="183"/><text x="14.4344%" y="319.50"></text></g><g><title>ttwu_queue_wakelist (103 samples, 0.18%)</title><rect x="14.3214%" y="293" width="0.1764%" height="15" fill="rgb(211,33,43)" fg:x="8360" fg:w="103"/><text x="14.5714%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (303 samples, 0.52%)</title><rect x="13.9891%" y="405" width="0.5191%" height="15" fill="rgb(245,58,50)" fg:x="8166" fg:w="303"/><text x="14.2391%" y="415.50"></text></g><g><title>do_syscall_64 (303 samples, 0.52%)</title><rect x="13.9891%" y="389" width="0.5191%" height="15" fill="rgb(244,68,36)" fg:x="8166" fg:w="303"/><text x="14.2391%" y="399.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (324 samples, 0.56%)</title><rect x="13.9600%" y="437" width="0.5550%" height="15" fill="rgb(232,229,15)" fg:x="8149" fg:w="324"/><text x="14.2100%" y="447.50"></text></g><g><title>syscall (323 samples, 0.55%)</title><rect x="13.9617%" y="421" width="0.5533%" height="15" fill="rgb(254,30,23)" fg:x="8150" fg:w="323"/><text x="14.2117%" y="431.50"></text></g><g><title>&lt;rayon::iter::fold::FoldConsumer&lt;C,ID,F&gt; as rayon::iter::plumbing::Consumer&lt;T&gt;&gt;::full (64 samples, 0.11%)</title><rect x="14.5202%" y="437" width="0.1096%" height="15" fill="rgb(235,160,14)" fg:x="8476" fg:w="64"/><text x="14.7702%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (64 samples, 0.11%)</title><rect x="14.5202%" y="421" width="0.1096%" height="15" fill="rgb(212,155,44)" fg:x="8476" fg:w="64"/><text x="14.7702%" y="431.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (63 samples, 0.11%)</title><rect x="14.5219%" y="405" width="0.1079%" height="15" fill="rgb(226,2,50)" fg:x="8477" fg:w="63"/><text x="14.7719%" y="415.50"></text></g><g><title>&lt;rayon::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="14.6332%" y="437" width="0.0274%" height="15" fill="rgb(234,177,6)" fg:x="8542" fg:w="16"/><text x="14.8832%" y="447.50"></text></g><g><title>&lt;sqlx_core::pool::CloseEvent as core::future::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="14.6623%" y="437" width="0.0171%" height="15" fill="rgb(217,24,9)" fg:x="8559" fg:w="10"/><text x="14.9123%" y="447.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="14.6846%" y="437" width="0.0206%" height="15" fill="rgb(220,13,46)" fg:x="8572" fg:w="12"/><text x="14.9346%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (12 samples, 0.02%)</title><rect x="14.6846%" y="421" width="0.0206%" height="15" fill="rgb(239,221,27)" fg:x="8572" fg:w="12"/><text x="14.9346%" y="431.50"></text></g><g><title>&lt;sqlx_sqlite::connection::SqliteConnection as sqlx_core::connection::Connection&gt;::ping (7 samples, 0.01%)</title><rect x="14.7206%" y="437" width="0.0120%" height="15" fill="rgb(222,198,25)" fg:x="8593" fg:w="7"/><text x="14.9706%" y="447.50"></text></g><g><title>sqlite3DbFreeNN (9 samples, 0.02%)</title><rect x="14.7531%" y="389" width="0.0154%" height="15" fill="rgb(211,99,13)" fg:x="8612" fg:w="9"/><text x="15.0031%" y="399.50"></text></g><g><title>sqlite3_free (8 samples, 0.01%)</title><rect x="14.7549%" y="373" width="0.0137%" height="15" fill="rgb(232,111,31)" fg:x="8613" fg:w="8"/><text x="15.0049%" y="383.50"></text></g><g><title>&lt;sqlx_sqlite::value::ValueHandle as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="14.7531%" y="437" width="0.0291%" height="15" fill="rgb(245,82,37)" fg:x="8612" fg:w="17"/><text x="15.0031%" y="447.50"></text></g><g><title>sqlite3_value_free (17 samples, 0.03%)</title><rect x="14.7531%" y="421" width="0.0291%" height="15" fill="rgb(227,149,46)" fg:x="8612" fg:w="17"/><text x="15.0031%" y="431.50"></text></g><g><title>sqlite3ValueFree (17 samples, 0.03%)</title><rect x="14.7531%" y="405" width="0.0291%" height="15" fill="rgb(218,36,50)" fg:x="8612" fg:w="17"/><text x="15.0031%" y="415.50"></text></g><g><title>sqlite3VdbeMemRelease (8 samples, 0.01%)</title><rect x="14.7686%" y="389" width="0.0137%" height="15" fill="rgb(226,80,48)" fg:x="8621" fg:w="8"/><text x="15.0186%" y="399.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6 samples, 0.01%)</title><rect x="14.7823%" y="437" width="0.0103%" height="15" fill="rgb(238,224,15)" fg:x="8629" fg:w="6"/><text x="15.0323%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (28 samples, 0.05%)</title><rect x="14.8148%" y="405" width="0.0480%" height="15" fill="rgb(241,136,10)" fg:x="8648" fg:w="28"/><text x="15.0648%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (28 samples, 0.05%)</title><rect x="14.8148%" y="389" width="0.0480%" height="15" fill="rgb(208,32,45)" fg:x="8648" fg:w="28"/><text x="15.0648%" y="399.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.07%)</title><rect x="14.7925%" y="437" width="0.0719%" height="15" fill="rgb(207,135,9)" fg:x="8635" fg:w="42"/><text x="15.0425%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (34 samples, 0.06%)</title><rect x="14.8062%" y="421" width="0.0582%" height="15" fill="rgb(206,86,44)" fg:x="8643" fg:w="34"/><text x="15.0562%" y="431.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (6 samples, 0.01%)</title><rect x="14.8645%" y="437" width="0.0103%" height="15" fill="rgb(245,177,15)" fg:x="8677" fg:w="6"/><text x="15.1145%" y="447.50"></text></g><g><title>std::time::Instant::checked_add (6 samples, 0.01%)</title><rect x="14.8645%" y="421" width="0.0103%" height="15" fill="rgb(206,64,50)" fg:x="8677" fg:w="6"/><text x="15.1145%" y="431.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_add_duration (6 samples, 0.01%)</title><rect x="14.8645%" y="405" width="0.0103%" height="15" fill="rgb(234,36,40)" fg:x="8677" fg:w="6"/><text x="15.1145%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::checked_add_duration (6 samples, 0.01%)</title><rect x="14.8645%" y="389" width="0.0103%" height="15" fill="rgb(213,64,8)" fg:x="8677" fg:w="6"/><text x="15.1145%" y="399.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="14.8748%" y="437" width="0.0154%" height="15" fill="rgb(210,75,36)" fg:x="8683" fg:w="9"/><text x="15.1248%" y="447.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6 samples, 0.01%)</title><rect x="14.8970%" y="421" width="0.0103%" height="15" fill="rgb(229,88,21)" fg:x="8696" fg:w="6"/><text x="15.1470%" y="431.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (9 samples, 0.02%)</title><rect x="14.8953%" y="437" width="0.0154%" height="15" fill="rgb(252,204,47)" fg:x="8695" fg:w="9"/><text x="15.1453%" y="447.50"></text></g><g><title>&lt;tokio::runtime::scheduler::Handle as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="14.9107%" y="437" width="0.0240%" height="15" fill="rgb(208,77,27)" fg:x="8704" fg:w="14"/><text x="15.1607%" y="447.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="14.9382%" y="437" width="0.0154%" height="15" fill="rgb(221,76,26)" fg:x="8720" fg:w="9"/><text x="15.1882%" y="447.50"></text></g><g><title>&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="14.9724%" y="437" width="0.0103%" height="15" fill="rgb(225,139,18)" fg:x="8740" fg:w="6"/><text x="15.2224%" y="447.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="14.9930%" y="437" width="0.0103%" height="15" fill="rgb(230,137,11)" fg:x="8752" fg:w="6"/><text x="15.2430%" y="447.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (6 samples, 0.01%)</title><rect x="14.9930%" y="421" width="0.0103%" height="15" fill="rgb(212,28,1)" fg:x="8752" fg:w="6"/><text x="15.2430%" y="431.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="15.0033%" y="437" width="0.0120%" height="15" fill="rgb(248,164,17)" fg:x="8758" fg:w="7"/><text x="15.2533%" y="447.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (21 samples, 0.04%)</title><rect x="15.0152%" y="437" width="0.0360%" height="15" fill="rgb(222,171,42)" fg:x="8765" fg:w="21"/><text x="15.2652%" y="447.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (20 samples, 0.03%)</title><rect x="15.0170%" y="421" width="0.0343%" height="15" fill="rgb(243,84,45)" fg:x="8766" fg:w="20"/><text x="15.2670%" y="431.50"></text></g><g><title>tokio::runtime::context::budget (7 samples, 0.01%)</title><rect x="15.0392%" y="405" width="0.0120%" height="15" fill="rgb(252,49,23)" fg:x="8779" fg:w="7"/><text x="15.2892%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="15.0564%" y="421" width="0.0103%" height="15" fill="rgb(215,19,7)" fg:x="8789" fg:w="6"/><text x="15.3064%" y="431.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="15.0821%" y="405" width="0.0103%" height="15" fill="rgb(238,81,41)" fg:x="8804" fg:w="6"/><text x="15.3321%" y="415.50"></text></g><g><title>tokio::task::coop::has_budget_remaining (6 samples, 0.01%)</title><rect x="15.0821%" y="389" width="0.0103%" height="15" fill="rgb(210,199,37)" fg:x="8804" fg:w="6"/><text x="15.3321%" y="399.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.04%)</title><rect x="15.0512%" y="437" width="0.0445%" height="15" fill="rgb(244,192,49)" fg:x="8786" fg:w="26"/><text x="15.3012%" y="447.50"></text></g><g><title>tokio::task::coop::has_budget_remaining (11 samples, 0.02%)</title><rect x="15.0769%" y="421" width="0.0188%" height="15" fill="rgb(226,211,11)" fg:x="8801" fg:w="11"/><text x="15.3269%" y="431.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (6 samples, 0.01%)</title><rect x="15.1026%" y="437" width="0.0103%" height="15" fill="rgb(236,162,54)" fg:x="8816" fg:w="6"/><text x="15.3526%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (23 samples, 0.04%)</title><rect x="15.1129%" y="437" width="0.0394%" height="15" fill="rgb(220,229,9)" fg:x="8822" fg:w="23"/><text x="15.3629%" y="447.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (15 samples, 0.03%)</title><rect x="15.1557%" y="421" width="0.0257%" height="15" fill="rgb(250,87,22)" fg:x="8847" fg:w="15"/><text x="15.4057%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (14 samples, 0.02%)</title><rect x="15.1814%" y="421" width="0.0240%" height="15" fill="rgb(239,43,17)" fg:x="8862" fg:w="14"/><text x="15.4314%" y="431.50"></text></g><g><title>__memcmp_avx2_movbe (14 samples, 0.02%)</title><rect x="15.1814%" y="405" width="0.0240%" height="15" fill="rgb(231,177,25)" fg:x="8862" fg:w="14"/><text x="15.4314%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="15.2071%" y="421" width="0.0240%" height="15" fill="rgb(219,179,1)" fg:x="8877" fg:w="14"/><text x="15.4571%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.02%)</title><rect x="15.2105%" y="405" width="0.0206%" height="15" fill="rgb(238,219,53)" fg:x="8879" fg:w="12"/><text x="15.4605%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.02%)</title><rect x="15.2105%" y="389" width="0.0206%" height="15" fill="rgb(232,167,36)" fg:x="8879" fg:w="12"/><text x="15.4605%" y="399.50"></text></g><g><title>&lt;flume::async::SendFut&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="15.2328%" y="421" width="0.0206%" height="15" fill="rgb(244,19,51)" fg:x="8892" fg:w="12"/><text x="15.4828%" y="431.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.01%)</title><rect x="15.2859%" y="421" width="0.0120%" height="15" fill="rgb(224,6,22)" fg:x="8923" fg:w="7"/><text x="15.5359%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::from_raw_in (9 samples, 0.02%)</title><rect x="15.2996%" y="421" width="0.0154%" height="15" fill="rgb(224,145,5)" fg:x="8931" fg:w="9"/><text x="15.5496%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.02%)</title><rect x="15.3921%" y="421" width="0.0188%" height="15" fill="rgb(234,130,49)" fg:x="8985" fg:w="11"/><text x="15.6421%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (8 samples, 0.01%)</title><rect x="15.4195%" y="421" width="0.0137%" height="15" fill="rgb(254,6,2)" fg:x="9001" fg:w="8"/><text x="15.6695%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_or (7 samples, 0.01%)</title><rect x="15.4212%" y="405" width="0.0120%" height="15" fill="rgb(208,96,46)" fg:x="9002" fg:w="7"/><text x="15.6712%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (11 samples, 0.02%)</title><rect x="15.4418%" y="421" width="0.0188%" height="15" fill="rgb(239,3,39)" fg:x="9014" fg:w="11"/><text x="15.6918%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (11 samples, 0.02%)</title><rect x="15.4418%" y="405" width="0.0188%" height="15" fill="rgb(233,210,1)" fg:x="9014" fg:w="11"/><text x="15.6918%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.02%)</title><rect x="15.4641%" y="421" width="0.0240%" height="15" fill="rgb(244,137,37)" fg:x="9027" fg:w="14"/><text x="15.7141%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.03%)</title><rect x="15.4881%" y="421" width="0.0257%" height="15" fill="rgb(240,136,2)" fg:x="9041" fg:w="15"/><text x="15.7381%" y="431.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::insert::{{closure}} (20 samples, 0.03%)</title><rect x="15.5275%" y="421" width="0.0343%" height="15" fill="rgb(239,18,37)" fg:x="9064" fg:w="20"/><text x="15.7775%" y="431.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (8 samples, 0.01%)</title><rect x="15.5480%" y="405" width="0.0137%" height="15" fill="rgb(218,185,22)" fg:x="9076" fg:w="8"/><text x="15.7980%" y="415.50"></text></g><g><title>flume::async::&lt;impl flume::Sender&lt;T&gt;&gt;::send_async (6 samples, 0.01%)</title><rect x="15.5617%" y="421" width="0.0103%" height="15" fill="rgb(225,218,4)" fg:x="9084" fg:w="6"/><text x="15.8117%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="15.5617%" y="405" width="0.0103%" height="15" fill="rgb(230,182,32)" fg:x="9084" fg:w="6"/><text x="15.8117%" y="415.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (11 samples, 0.02%)</title><rect x="15.5789%" y="421" width="0.0188%" height="15" fill="rgb(242,56,43)" fg:x="9094" fg:w="11"/><text x="15.8289%" y="431.50"></text></g><g><title>tokio::runtime::park::Inner::park (11 samples, 0.02%)</title><rect x="15.5789%" y="405" width="0.0188%" height="15" fill="rgb(233,99,24)" fg:x="9094" fg:w="11"/><text x="15.8289%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.01%)</title><rect x="15.8495%" y="405" width="0.0120%" height="15" fill="rgb(234,209,42)" fg:x="9252" fg:w="7"/><text x="16.0995%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (35 samples, 0.06%)</title><rect x="15.8615%" y="405" width="0.0600%" height="15" fill="rgb(227,7,12)" fg:x="9259" fg:w="35"/><text x="16.1115%" y="415.50"></text></g><g><title>rayon::slice::sort::insert_tail (190 samples, 0.33%)</title><rect x="15.5994%" y="421" width="0.3255%" height="15" fill="rgb(245,203,43)" fg:x="9106" fg:w="190"/><text x="15.8494%" y="431.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire_permit::{{closure}} (12 samples, 0.02%)</title><rect x="15.9266%" y="421" width="0.0206%" height="15" fill="rgb(238,205,33)" fg:x="9297" fg:w="12"/><text x="16.1766%" y="431.50"></text></g><g><title>sqlx_core::rt::timeout::{{closure}} (8 samples, 0.01%)</title><rect x="15.9472%" y="421" width="0.0137%" height="15" fill="rgb(231,56,7)" fg:x="9309" fg:w="8"/><text x="16.1972%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="15.9472%" y="405" width="0.0137%" height="15" fill="rgb(244,186,29)" fg:x="9309" fg:w="8"/><text x="16.1972%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.02%)</title><rect x="15.9660%" y="421" width="0.0188%" height="15" fill="rgb(234,111,31)" fg:x="9320" fg:w="11"/><text x="16.2160%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::push (6 samples, 0.01%)</title><rect x="15.9917%" y="421" width="0.0103%" height="15" fill="rgb(241,149,10)" fg:x="9335" fg:w="6"/><text x="16.2417%" y="431.50"></text></g><g><title>[sqlite_single_row_lookup_sqlx-ad447b01e569b511] (507 samples, 0.87%)</title><rect x="15.1540%" y="437" width="0.8685%" height="15" fill="rgb(249,206,44)" fg:x="8846" fg:w="507"/><text x="15.4040%" y="447.50"></text></g><g><title>tracing::span::Span::current::{{closure}} (7 samples, 0.01%)</title><rect x="16.0106%" y="421" width="0.0120%" height="15" fill="rgb(251,153,30)" fg:x="9346" fg:w="7"/><text x="16.2606%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="16.0414%" y="405" width="0.0188%" height="15" fill="rgb(239,152,38)" fg:x="9364" fg:w="11"/><text x="16.2914%" y="415.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (25 samples, 0.04%)</title><rect x="16.0294%" y="421" width="0.0428%" height="15" fill="rgb(249,139,47)" fg:x="9357" fg:w="25"/><text x="16.2794%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="16.0859%" y="421" width="0.0120%" height="15" fill="rgb(244,64,35)" fg:x="9390" fg:w="7"/><text x="16.3359%" y="431.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="16.0979%" y="421" width="0.0103%" height="15" fill="rgb(216,46,15)" fg:x="9397" fg:w="6"/><text x="16.3479%" y="431.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (41 samples, 0.07%)</title><rect x="16.1116%" y="421" width="0.0702%" height="15" fill="rgb(250,74,19)" fg:x="9405" fg:w="41"/><text x="16.3616%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.06%)</title><rect x="16.1836%" y="421" width="0.0600%" height="15" fill="rgb(249,42,33)" fg:x="9447" fg:w="35"/><text x="16.4336%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (22 samples, 0.04%)</title><rect x="16.2058%" y="405" width="0.0377%" height="15" fill="rgb(242,149,17)" fg:x="9460" fg:w="22"/><text x="16.4558%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (25 samples, 0.04%)</title><rect x="16.2470%" y="421" width="0.0428%" height="15" fill="rgb(244,29,21)" fg:x="9484" fg:w="25"/><text x="16.4970%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (31 samples, 0.05%)</title><rect x="16.2949%" y="421" width="0.0531%" height="15" fill="rgb(220,130,37)" fg:x="9512" fg:w="31"/><text x="16.5449%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="16.3772%" y="421" width="0.0137%" height="15" fill="rgb(211,67,2)" fg:x="9560" fg:w="8"/><text x="16.6272%" y="431.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="16.4080%" y="421" width="0.0103%" height="15" fill="rgb(235,68,52)" fg:x="9578" fg:w="6"/><text x="16.6580%" y="431.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (13 samples, 0.02%)</title><rect x="16.4320%" y="421" width="0.0223%" height="15" fill="rgb(246,142,3)" fg:x="9592" fg:w="13"/><text x="16.6820%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (9 samples, 0.02%)</title><rect x="16.4697%" y="421" width="0.0154%" height="15" fill="rgb(241,25,7)" fg:x="9614" fg:w="9"/><text x="16.7197%" y="431.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="16.5073%" y="405" width="0.0103%" height="15" fill="rgb(242,119,39)" fg:x="9636" fg:w="6"/><text x="16.7573%" y="415.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.03%)</title><rect x="16.5073%" y="421" width="0.0257%" height="15" fill="rgb(241,98,45)" fg:x="9636" fg:w="15"/><text x="16.7573%" y="431.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (23 samples, 0.04%)</title><rect x="16.5399%" y="421" width="0.0394%" height="15" fill="rgb(254,28,30)" fg:x="9655" fg:w="23"/><text x="16.7899%" y="431.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.04%)</title><rect x="16.5981%" y="405" width="0.0411%" height="15" fill="rgb(241,142,54)" fg:x="9689" fg:w="24"/><text x="16.8481%" y="415.50"></text></g><g><title>malloc (23 samples, 0.04%)</title><rect x="16.5999%" y="389" width="0.0394%" height="15" fill="rgb(222,85,15)" fg:x="9690" fg:w="23"/><text x="16.8499%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.05%)</title><rect x="16.5913%" y="421" width="0.0514%" height="15" fill="rgb(210,85,47)" fg:x="9685" fg:w="30"/><text x="16.8413%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::increment_strong_count_in (18 samples, 0.03%)</title><rect x="16.6495%" y="421" width="0.0308%" height="15" fill="rgb(224,206,25)" fg:x="9719" fg:w="18"/><text x="16.8995%" y="431.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="16.6512%" y="405" width="0.0291%" height="15" fill="rgb(243,201,19)" fg:x="9720" fg:w="17"/><text x="16.9012%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="16.6530%" y="389" width="0.0274%" height="15" fill="rgb(236,59,4)" fg:x="9721" fg:w="16"/><text x="16.9030%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.02%)</title><rect x="16.6564%" y="373" width="0.0240%" height="15" fill="rgb(254,179,45)" fg:x="9723" fg:w="14"/><text x="16.9064%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.02%)</title><rect x="16.6564%" y="357" width="0.0240%" height="15" fill="rgb(226,14,10)" fg:x="9723" fg:w="14"/><text x="16.9064%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.01%)</title><rect x="16.6889%" y="421" width="0.0103%" height="15" fill="rgb(244,27,41)" fg:x="9742" fg:w="6"/><text x="16.9389%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="16.7146%" y="421" width="0.0154%" height="15" fill="rgb(235,35,32)" fg:x="9757" fg:w="9"/><text x="16.9646%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (9 samples, 0.02%)</title><rect x="16.7301%" y="421" width="0.0154%" height="15" fill="rgb(218,68,31)" fg:x="9766" fg:w="9"/><text x="16.9801%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="16.7352%" y="405" width="0.0103%" height="15" fill="rgb(207,120,37)" fg:x="9769" fg:w="6"/><text x="16.9852%" y="415.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="16.7352%" y="389" width="0.0103%" height="15" fill="rgb(227,98,0)" fg:x="9769" fg:w="6"/><text x="16.9852%" y="399.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.02%)</title><rect x="16.7609%" y="421" width="0.0206%" height="15" fill="rgb(207,7,3)" fg:x="9784" fg:w="12"/><text x="17.0109%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (217 samples, 0.37%)</title><rect x="16.7814%" y="421" width="0.3717%" height="15" fill="rgb(206,98,19)" fg:x="9796" fg:w="217"/><text x="17.0314%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::abs (9 samples, 0.02%)</title><rect x="17.1566%" y="421" width="0.0154%" height="15" fill="rgb(217,5,26)" fg:x="10015" fg:w="9"/><text x="17.4066%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (24 samples, 0.04%)</title><rect x="17.1720%" y="421" width="0.0411%" height="15" fill="rgb(235,190,38)" fg:x="10024" fg:w="24"/><text x="17.4220%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15 samples, 0.03%)</title><rect x="17.2149%" y="421" width="0.0257%" height="15" fill="rgb(247,86,24)" fg:x="10049" fg:w="15"/><text x="17.4649%" y="431.50"></text></g><g><title>core::ops::function::Fn::call (14 samples, 0.02%)</title><rect x="17.2543%" y="421" width="0.0240%" height="15" fill="rgb(205,101,16)" fg:x="10072" fg:w="14"/><text x="17.5043%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="17.2834%" y="421" width="0.0137%" height="15" fill="rgb(246,168,33)" fg:x="10089" fg:w="8"/><text x="17.5334%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="17.2988%" y="421" width="0.0103%" height="15" fill="rgb(231,114,1)" fg:x="10098" fg:w="6"/><text x="17.5488%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (8 samples, 0.01%)</title><rect x="17.3091%" y="421" width="0.0137%" height="15" fill="rgb(207,184,53)" fg:x="10104" fg:w="8"/><text x="17.5591%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (9 samples, 0.02%)</title><rect x="17.3348%" y="421" width="0.0154%" height="15" fill="rgb(224,95,51)" fg:x="10119" fg:w="9"/><text x="17.5848%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 0.01%)</title><rect x="17.3536%" y="421" width="0.0103%" height="15" fill="rgb(212,188,45)" fg:x="10130" fg:w="6"/><text x="17.6036%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (6 samples, 0.01%)</title><rect x="17.4290%" y="421" width="0.0103%" height="15" fill="rgb(223,154,38)" fg:x="10174" fg:w="6"/><text x="17.6790%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (8 samples, 0.01%)</title><rect x="17.4581%" y="421" width="0.0137%" height="15" fill="rgb(251,22,52)" fg:x="10191" fg:w="8"/><text x="17.7081%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (7 samples, 0.01%)</title><rect x="17.4735%" y="421" width="0.0120%" height="15" fill="rgb(229,209,22)" fg:x="10200" fg:w="7"/><text x="17.7235%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.03%)</title><rect x="17.5027%" y="421" width="0.0274%" height="15" fill="rgb(234,138,34)" fg:x="10217" fg:w="16"/><text x="17.7527%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (78 samples, 0.13%)</title><rect x="17.5301%" y="421" width="0.1336%" height="15" fill="rgb(212,95,11)" fg:x="10233" fg:w="78"/><text x="17.7801%" y="431.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (6 samples, 0.01%)</title><rect x="17.6877%" y="389" width="0.0103%" height="15" fill="rgb(240,179,47)" fg:x="10325" fg:w="6"/><text x="17.9377%" y="399.50"></text></g><g><title>criterion::analysis::estimates::stats (18 samples, 0.03%)</title><rect x="17.6705%" y="421" width="0.0308%" height="15" fill="rgb(240,163,11)" fg:x="10315" fg:w="18"/><text x="17.9205%" y="431.50"></text></g><g><title>oorandom::Rand64::rand_u64 (18 samples, 0.03%)</title><rect x="17.6705%" y="405" width="0.0308%" height="15" fill="rgb(236,37,12)" fg:x="10315" fg:w="18"/><text x="17.9205%" y="415.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (60 samples, 0.10%)</title><rect x="17.7202%" y="421" width="0.1028%" height="15" fill="rgb(232,164,16)" fg:x="10344" fg:w="60"/><text x="17.9702%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (16 samples, 0.03%)</title><rect x="17.7956%" y="405" width="0.0274%" height="15" fill="rgb(244,205,15)" fg:x="10388" fg:w="16"/><text x="18.0456%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (6 samples, 0.01%)</title><rect x="17.8504%" y="405" width="0.0103%" height="15" fill="rgb(223,117,47)" fg:x="10420" fg:w="6"/><text x="18.1004%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="17.8504%" y="389" width="0.0103%" height="15" fill="rgb(244,107,35)" fg:x="10420" fg:w="6"/><text x="18.1004%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.01%)</title><rect x="17.8504%" y="373" width="0.0103%" height="15" fill="rgb(205,140,8)" fg:x="10420" fg:w="6"/><text x="18.1004%" y="383.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (18 samples, 0.03%)</title><rect x="17.8367%" y="421" width="0.0308%" height="15" fill="rgb(228,84,46)" fg:x="10412" fg:w="18"/><text x="18.0867%" y="431.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (27 samples, 0.05%)</title><rect x="17.8847%" y="421" width="0.0463%" height="15" fill="rgb(254,188,9)" fg:x="10440" fg:w="27"/><text x="18.1347%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;flume::Hook&lt;(sqlx_sqlite::connection::worker::Command,tracing::span::Span),dyn flume::signal::Signal&gt;&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="17.9121%" y="405" width="0.0188%" height="15" fill="rgb(206,112,54)" fg:x="10456" fg:w="11"/><text x="18.1621%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="17.9121%" y="389" width="0.0188%" height="15" fill="rgb(216,84,49)" fg:x="10456" fg:w="11"/><text x="18.1621%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.02%)</title><rect x="17.9138%" y="373" width="0.0171%" height="15" fill="rgb(214,194,35)" fg:x="10457" fg:w="10"/><text x="18.1638%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.02%)</title><rect x="17.9155%" y="357" width="0.0154%" height="15" fill="rgb(249,28,3)" fg:x="10458" fg:w="9"/><text x="18.1655%" y="367.50"></text></g><g><title>futures_util::future::assert_future (6 samples, 0.01%)</title><rect x="17.9378%" y="421" width="0.0103%" height="15" fill="rgb(222,56,52)" fg:x="10471" fg:w="6"/><text x="18.1878%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="17.9378%" y="405" width="0.0103%" height="15" fill="rgb(245,217,50)" fg:x="10471" fg:w="6"/><text x="18.1878%" y="415.50"></text></g><g><title>oorandom::Rand64::rand_range (10 samples, 0.02%)</title><rect x="17.9515%" y="421" width="0.0171%" height="15" fill="rgb(213,201,24)" fg:x="10479" fg:w="10"/><text x="18.2015%" y="431.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (40 samples, 0.07%)</title><rect x="17.9738%" y="421" width="0.0685%" height="15" fill="rgb(248,116,28)" fg:x="10492" fg:w="40"/><text x="18.2238%" y="431.50"></text></g><g><title>rayon::slice::sort::insert_tail (66 samples, 0.11%)</title><rect x="18.0594%" y="421" width="0.1131%" height="15" fill="rgb(219,72,43)" fg:x="10542" fg:w="66"/><text x="18.3094%" y="431.50"></text></g><g><title>rayon::slice::sort::insertion_sort_shift_left (10 samples, 0.02%)</title><rect x="18.1725%" y="421" width="0.0171%" height="15" fill="rgb(209,138,14)" fg:x="10608" fg:w="10"/><text x="18.4225%" y="431.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks (188 samples, 0.32%)</title><rect x="18.1913%" y="421" width="0.3221%" height="15" fill="rgb(222,18,33)" fg:x="10619" fg:w="188"/><text x="18.4413%" y="431.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (6 samples, 0.01%)</title><rect x="18.5271%" y="405" width="0.0103%" height="15" fill="rgb(213,199,7)" fg:x="10815" fg:w="6"/><text x="18.7771%" y="415.50"></text></g><g><title>core::ptr::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="18.5374%" y="405" width="0.0137%" height="15" fill="rgb(250,110,10)" fg:x="10821" fg:w="8"/><text x="18.7874%" y="415.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks (47 samples, 0.08%)</title><rect x="18.5168%" y="421" width="0.0805%" height="15" fill="rgb(248,123,6)" fg:x="10809" fg:w="47"/><text x="18.7668%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (23 samples, 0.04%)</title><rect x="18.5579%" y="405" width="0.0394%" height="15" fill="rgb(206,91,31)" fg:x="10833" fg:w="23"/><text x="18.8079%" y="415.50"></text></g><g><title>rayon::slice::sort::recurse (12 samples, 0.02%)</title><rect x="18.5973%" y="421" width="0.0206%" height="15" fill="rgb(211,154,13)" fg:x="10856" fg:w="12"/><text x="18.8473%" y="431.50"></text></g><g><title>sqlx_core::pool::CloseEvent::do_until (7 samples, 0.01%)</title><rect x="18.6213%" y="421" width="0.0120%" height="15" fill="rgb(225,148,7)" fg:x="10870" fg:w="7"/><text x="18.8713%" y="431.50"></text></g><g><title>&lt;tokio::sync::semaphore::SemaphorePermit as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="18.6436%" y="405" width="0.0103%" height="15" fill="rgb(220,160,43)" fg:x="10883" fg:w="6"/><text x="18.8936%" y="415.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::from_idle (14 samples, 0.02%)</title><rect x="18.6350%" y="421" width="0.0240%" height="15" fill="rgb(213,52,39)" fg:x="10878" fg:w="14"/><text x="18.8850%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.02%)</title><rect x="18.6778%" y="389" width="0.0154%" height="15" fill="rgb(243,137,7)" fg:x="10903" fg:w="9"/><text x="18.9278%" y="399.50"></text></g><g><title>cfree@GLIBC_2.2.5 (9 samples, 0.02%)</title><rect x="18.6778%" y="373" width="0.0154%" height="15" fill="rgb(230,79,13)" fg:x="10903" fg:w="9"/><text x="18.9278%" y="383.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::{{closure}} (25 samples, 0.04%)</title><rect x="18.6590%" y="421" width="0.0428%" height="15" fill="rgb(247,105,23)" fg:x="10892" fg:w="25"/><text x="18.9090%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.03%)</title><rect x="18.6744%" y="405" width="0.0274%" height="15" fill="rgb(223,179,41)" fg:x="10901" fg:w="16"/><text x="18.9244%" y="415.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::{{closure}} (20 samples, 0.03%)</title><rect x="18.7018%" y="421" width="0.0343%" height="15" fill="rgb(218,9,34)" fg:x="10917" fg:w="20"/><text x="18.9518%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="18.7806%" y="405" width="0.0103%" height="15" fill="rgb(222,106,8)" fg:x="10963" fg:w="6"/><text x="19.0306%" y="415.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::{{closure}}::{{closure}} (35 samples, 0.06%)</title><rect x="18.7361%" y="421" width="0.0600%" height="15" fill="rgb(211,220,0)" fg:x="10937" fg:w="35"/><text x="18.9861%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="18.7960%" y="405" width="0.0120%" height="15" fill="rgb(229,52,16)" fg:x="10972" fg:w="7"/><text x="19.0460%" y="415.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::{{closure}} (28 samples, 0.05%)</title><rect x="18.7960%" y="421" width="0.0480%" height="15" fill="rgb(212,155,18)" fg:x="10972" fg:w="28"/><text x="19.0460%" y="431.50"></text></g><g><title>std::time::Instant::elapsed (18 samples, 0.03%)</title><rect x="18.8132%" y="405" width="0.0308%" height="15" fill="rgb(242,21,14)" fg:x="10982" fg:w="18"/><text x="19.0632%" y="415.50"></text></g><g><title>std::time::Instant::now (16 samples, 0.03%)</title><rect x="18.8166%" y="389" width="0.0274%" height="15" fill="rgb(222,19,48)" fg:x="10984" fg:w="16"/><text x="19.0666%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (16 samples, 0.03%)</title><rect x="18.8166%" y="373" width="0.0274%" height="15" fill="rgb(232,45,27)" fg:x="10984" fg:w="16"/><text x="19.0666%" y="383.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (16 samples, 0.03%)</title><rect x="18.8166%" y="357" width="0.0274%" height="15" fill="rgb(249,103,42)" fg:x="10984" fg:w="16"/><text x="19.0666%" y="367.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (16 samples, 0.03%)</title><rect x="18.8166%" y="341" width="0.0274%" height="15" fill="rgb(246,81,33)" fg:x="10984" fg:w="16"/><text x="19.0666%" y="351.50"></text></g><g><title>[[vdso]] (9 samples, 0.02%)</title><rect x="18.8286%" y="325" width="0.0154%" height="15" fill="rgb(252,33,42)" fg:x="10991" fg:w="9"/><text x="19.0786%" y="335.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire_permit (7 samples, 0.01%)</title><rect x="18.8440%" y="421" width="0.0120%" height="15" fill="rgb(209,212,41)" fg:x="11000" fg:w="7"/><text x="19.0940%" y="431.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire_permit::{{closure}} (17 samples, 0.03%)</title><rect x="18.8560%" y="421" width="0.0291%" height="15" fill="rgb(207,154,6)" fg:x="11007" fg:w="17"/><text x="19.1060%" y="431.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::pop_idle (23 samples, 0.04%)</title><rect x="18.8885%" y="421" width="0.0394%" height="15" fill="rgb(223,64,47)" fg:x="11026" fg:w="23"/><text x="19.1385%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.02%)</title><rect x="18.9108%" y="405" width="0.0171%" height="15" fill="rgb(211,161,38)" fg:x="11039" fg:w="10"/><text x="19.1608%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 0.02%)</title><rect x="18.9108%" y="389" width="0.0171%" height="15" fill="rgb(219,138,40)" fg:x="11039" fg:w="10"/><text x="19.1608%" y="399.50"></text></g><g><title>sqlx_core::rt::timeout::{{closure}} (22 samples, 0.04%)</title><rect x="18.9297%" y="421" width="0.0377%" height="15" fill="rgb(241,228,46)" fg:x="11050" fg:w="22"/><text x="19.1797%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="18.9519%" y="405" width="0.0154%" height="15" fill="rgb(223,209,38)" fg:x="11063" fg:w="9"/><text x="19.2019%" y="415.50"></text></g><g><title>sqlx_core::rt::timeout (7 samples, 0.01%)</title><rect x="18.9673%" y="421" width="0.0120%" height="15" fill="rgb(236,164,45)" fg:x="11072" fg:w="7"/><text x="19.2173%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="18.9673%" y="405" width="0.0120%" height="15" fill="rgb(231,15,5)" fg:x="11072" fg:w="7"/><text x="19.2173%" y="415.50"></text></g><g><title>sqlx_core::sync::AsyncSemaphoreReleaser::disarm (8 samples, 0.01%)</title><rect x="18.9828%" y="421" width="0.0137%" height="15" fill="rgb(252,35,15)" fg:x="11081" fg:w="8"/><text x="19.2328%" y="431.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="19.0102%" y="421" width="0.0103%" height="15" fill="rgb(248,181,18)" fg:x="11097" fg:w="6"/><text x="19.2602%" y="431.50"></text></g><g><title>alloc_thread_stack_node (8 samples, 0.01%)</title><rect x="19.0290%" y="245" width="0.0137%" height="15" fill="rgb(233,39,42)" fg:x="11108" fg:w="8"/><text x="19.2790%" y="255.50"></text></g><g><title>__vmalloc_node_noprof (7 samples, 0.01%)</title><rect x="19.0307%" y="229" width="0.0120%" height="15" fill="rgb(238,110,33)" fg:x="11109" fg:w="7"/><text x="19.2807%" y="239.50"></text></g><g><title>__vmalloc_node_range_noprof (7 samples, 0.01%)</title><rect x="19.0307%" y="213" width="0.0120%" height="15" fill="rgb(233,195,10)" fg:x="11109" fg:w="7"/><text x="19.2807%" y="223.50"></text></g><g><title>perf_event_init_task (29 samples, 0.05%)</title><rect x="19.0667%" y="245" width="0.0497%" height="15" fill="rgb(254,105,3)" fg:x="11130" fg:w="29"/><text x="19.3167%" y="255.50"></text></g><g><title>perf_event_init_context.constprop.0 (29 samples, 0.05%)</title><rect x="19.0667%" y="229" width="0.0497%" height="15" fill="rgb(221,225,9)" fg:x="11130" fg:w="29"/><text x="19.3167%" y="239.50"></text></g><g><title>inherit_task_group.isra.0 (29 samples, 0.05%)</title><rect x="19.0667%" y="213" width="0.0497%" height="15" fill="rgb(224,227,45)" fg:x="11130" fg:w="29"/><text x="19.3167%" y="223.50"></text></g><g><title>inherit_event.isra.0 (28 samples, 0.05%)</title><rect x="19.0684%" y="197" width="0.0480%" height="15" fill="rgb(229,198,43)" fg:x="11131" fg:w="28"/><text x="19.3184%" y="207.50"></text></g><g><title>perf_event_alloc (17 samples, 0.03%)</title><rect x="19.0873%" y="181" width="0.0291%" height="15" fill="rgb(206,209,35)" fg:x="11142" fg:w="17"/><text x="19.3373%" y="191.50"></text></g><g><title>perf_init_event (7 samples, 0.01%)</title><rect x="19.1044%" y="165" width="0.0120%" height="15" fill="rgb(245,195,53)" fg:x="11152" fg:w="7"/><text x="19.3544%" y="175.50"></text></g><g><title>perf_try_init_event (7 samples, 0.01%)</title><rect x="19.1044%" y="149" width="0.0120%" height="15" fill="rgb(240,92,26)" fg:x="11152" fg:w="7"/><text x="19.3544%" y="159.50"></text></g><g><title>x86_pmu_event_init (7 samples, 0.01%)</title><rect x="19.1044%" y="133" width="0.0120%" height="15" fill="rgb(207,40,23)" fg:x="11152" fg:w="7"/><text x="19.3544%" y="143.50"></text></g><g><title>copy_process (56 samples, 0.10%)</title><rect x="19.0222%" y="261" width="0.0959%" height="15" fill="rgb(223,111,35)" fg:x="11104" fg:w="56"/><text x="19.2722%" y="271.50"></text></g><g><title>create_thread (61 samples, 0.10%)</title><rect x="19.0205%" y="373" width="0.1045%" height="15" fill="rgb(229,147,28)" fg:x="11103" fg:w="61"/><text x="19.2705%" y="383.50"></text></g><g><title>__GI___clone_internal (61 samples, 0.10%)</title><rect x="19.0205%" y="357" width="0.1045%" height="15" fill="rgb(211,29,28)" fg:x="11103" fg:w="61"/><text x="19.2705%" y="367.50"></text></g><g><title>__GI___clone3 (61 samples, 0.10%)</title><rect x="19.0205%" y="341" width="0.1045%" height="15" fill="rgb(228,72,33)" fg:x="11103" fg:w="61"/><text x="19.2705%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (61 samples, 0.10%)</title><rect x="19.0205%" y="325" width="0.1045%" height="15" fill="rgb(205,214,31)" fg:x="11103" fg:w="61"/><text x="19.2705%" y="335.50"></text></g><g><title>do_syscall_64 (61 samples, 0.10%)</title><rect x="19.0205%" y="309" width="0.1045%" height="15" fill="rgb(224,111,15)" fg:x="11103" fg:w="61"/><text x="19.2705%" y="319.50"></text></g><g><title>__do_sys_clone3 (61 samples, 0.10%)</title><rect x="19.0205%" y="293" width="0.1045%" height="15" fill="rgb(253,21,26)" fg:x="11103" fg:w="61"/><text x="19.2705%" y="303.50"></text></g><g><title>kernel_clone (60 samples, 0.10%)</title><rect x="19.0222%" y="277" width="0.1028%" height="15" fill="rgb(245,139,43)" fg:x="11104" fg:w="60"/><text x="19.2722%" y="287.50"></text></g><g><title>pthread_create@GLIBC_2.2.5 (62 samples, 0.11%)</title><rect x="19.0205%" y="389" width="0.1062%" height="15" fill="rgb(252,170,7)" fg:x="11103" fg:w="62"/><text x="19.2705%" y="399.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (63 samples, 0.11%)</title><rect x="19.0205%" y="421" width="0.1079%" height="15" fill="rgb(231,118,14)" fg:x="11103" fg:w="63"/><text x="19.2705%" y="431.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (63 samples, 0.11%)</title><rect x="19.0205%" y="405" width="0.1079%" height="15" fill="rgb(238,83,0)" fg:x="11103" fg:w="63"/><text x="19.2705%" y="415.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::new (7 samples, 0.01%)</title><rect x="19.1369%" y="421" width="0.0120%" height="15" fill="rgb(221,39,39)" fg:x="11171" fg:w="7"/><text x="19.3869%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.02%)</title><rect x="19.1661%" y="405" width="0.0188%" height="15" fill="rgb(222,119,46)" fg:x="11188" fg:w="11"/><text x="19.4161%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::Handle::driver (14 samples, 0.02%)</title><rect x="19.1644%" y="421" width="0.0240%" height="15" fill="rgb(222,165,49)" fg:x="11187" fg:w="14"/><text x="19.4144%" y="431.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (7 samples, 0.01%)</title><rect x="19.1883%" y="421" width="0.0120%" height="15" fill="rgb(219,113,52)" fg:x="11201" fg:w="7"/><text x="19.4383%" y="431.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::remove_entry (7 samples, 0.01%)</title><rect x="19.2551%" y="421" width="0.0120%" height="15" fill="rgb(214,7,15)" fg:x="11240" fg:w="7"/><text x="19.5051%" y="431.50"></text></g><g><title>tokio::runtime::time::wheel::level_for (7 samples, 0.01%)</title><rect x="19.2671%" y="421" width="0.0120%" height="15" fill="rgb(235,32,4)" fg:x="11247" fg:w="7"/><text x="19.5171%" y="431.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (32 samples, 0.05%)</title><rect x="19.2911%" y="421" width="0.0548%" height="15" fill="rgb(238,90,54)" fg:x="11261" fg:w="32"/><text x="19.5411%" y="431.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::new (12 samples, 0.02%)</title><rect x="19.3459%" y="421" width="0.0206%" height="15" fill="rgb(213,208,19)" fg:x="11293" fg:w="12"/><text x="19.5959%" y="431.50"></text></g><g><title>tokio::task::coop::poll_proceed::{{closure}} (8 samples, 0.01%)</title><rect x="19.3751%" y="421" width="0.0137%" height="15" fill="rgb(233,156,4)" fg:x="11310" fg:w="8"/><text x="19.6251%" y="431.50"></text></g><g><title>tokio::time::timeout::timeout (6 samples, 0.01%)</title><rect x="19.4128%" y="421" width="0.0103%" height="15" fill="rgb(207,194,5)" fg:x="11332" fg:w="6"/><text x="19.6628%" y="431.50"></text></g><g><title>[unknown] (2,002 samples, 3.43%)</title><rect x="16.0225%" y="437" width="3.4296%" height="15" fill="rgb(206,111,30)" fg:x="9353" fg:w="2002"/><text x="16.2725%" y="447.50">[un..</text></g><g><title>core::option::Option&lt;T&gt;::as_ref (26 samples, 0.04%)</title><rect x="19.4778%" y="421" width="0.0445%" height="15" fill="rgb(243,70,54)" fg:x="11370" fg:w="26"/><text x="19.7278%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;core::option::Option&lt;sqlx_sqlite::row::SqliteRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="19.5241%" y="421" width="0.0137%" height="15" fill="rgb(242,28,8)" fg:x="11397" fg:w="8"/><text x="19.7741%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::Pool&lt;sqlx_sqlite::database::Sqlite&gt;&gt; (7 samples, 0.01%)</title><rect x="19.5464%" y="421" width="0.0120%" height="15" fill="rgb(219,106,18)" fg:x="11410" fg:w="7"/><text x="19.7964%" y="431.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::{{closure}}::{{closure}} (9 samples, 0.02%)</title><rect x="19.5892%" y="421" width="0.0154%" height="15" fill="rgb(244,222,10)" fg:x="11435" fg:w="9"/><text x="19.8392%" y="431.50"></text></g><g><title>__dso_handle (95 samples, 0.16%)</title><rect x="19.4641%" y="437" width="0.1627%" height="15" fill="rgb(236,179,52)" fg:x="11362" fg:w="95"/><text x="19.7141%" y="447.50"></text></g><g><title>__math_check_oflow (17 samples, 0.03%)</title><rect x="19.6337%" y="437" width="0.0291%" height="15" fill="rgb(213,23,39)" fg:x="11461" fg:w="17"/><text x="19.8837%" y="447.50"></text></g><g><title>__powidf2 (8 samples, 0.01%)</title><rect x="19.6697%" y="437" width="0.0137%" height="15" fill="rgb(238,48,10)" fg:x="11482" fg:w="8"/><text x="19.9197%" y="447.50"></text></g><g><title>compiler_builtins::float::pow::__powidf2 (7 samples, 0.01%)</title><rect x="19.6714%" y="421" width="0.0120%" height="15" fill="rgb(251,196,23)" fg:x="11483" fg:w="7"/><text x="19.9214%" y="431.50"></text></g><g><title>compiler_builtins::float::pow::pow (7 samples, 0.01%)</title><rect x="19.6714%" y="405" width="0.0120%" height="15" fill="rgb(250,152,24)" fg:x="11483" fg:w="7"/><text x="19.9214%" y="415.50"></text></g><g><title>__rustc::__rdl_alloc (6 samples, 0.01%)</title><rect x="19.6920%" y="437" width="0.0103%" height="15" fill="rgb(209,150,17)" fg:x="11495" fg:w="6"/><text x="19.9420%" y="447.50"></text></g><g><title>__rustc::__rdl_dealloc (8 samples, 0.01%)</title><rect x="19.7023%" y="437" width="0.0137%" height="15" fill="rgb(234,202,34)" fg:x="11501" fg:w="8"/><text x="19.9523%" y="447.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (8 samples, 0.01%)</title><rect x="19.7023%" y="421" width="0.0137%" height="15" fill="rgb(253,148,53)" fg:x="11501" fg:w="8"/><text x="19.9523%" y="431.50"></text></g><g><title>_fini (13 samples, 0.02%)</title><rect x="19.7177%" y="437" width="0.0223%" height="15" fill="rgb(218,129,16)" fg:x="11510" fg:w="13"/><text x="19.9677%" y="447.50"></text></g><g><title>_mid_memalign.isra.0 (7 samples, 0.01%)</title><rect x="19.7451%" y="437" width="0.0120%" height="15" fill="rgb(216,85,19)" fg:x="11526" fg:w="7"/><text x="19.9951%" y="447.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="19.7622%" y="421" width="0.0103%" height="15" fill="rgb(235,228,7)" fg:x="11536" fg:w="6"/><text x="20.0122%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (7 samples, 0.01%)</title><rect x="19.7948%" y="421" width="0.0120%" height="15" fill="rgb(245,175,0)" fg:x="11555" fg:w="7"/><text x="20.0448%" y="431.50"></text></g><g><title>aCacheMode.27 (36 samples, 0.06%)</title><rect x="19.7622%" y="437" width="0.0617%" height="15" fill="rgb(208,168,36)" fg:x="11536" fg:w="36"/><text x="20.0122%" y="447.50"></text></g><g><title>tokio::sync::semaphore::Semaphore::acquire_many::{{closure}} (10 samples, 0.02%)</title><rect x="19.8068%" y="421" width="0.0171%" height="15" fill="rgb(246,171,24)" fg:x="11562" fg:w="10"/><text x="20.0568%" y="431.50"></text></g><g><title>malloc_consolidate (14 samples, 0.02%)</title><rect x="19.9250%" y="373" width="0.0240%" height="15" fill="rgb(215,142,24)" fg:x="11631" fg:w="14"/><text x="20.1750%" y="383.50"></text></g><g><title>malloc (62 samples, 0.11%)</title><rect x="19.8445%" y="405" width="0.1062%" height="15" fill="rgb(250,187,7)" fg:x="11584" fg:w="62"/><text x="20.0945%" y="415.50"></text></g><g><title>_int_malloc (28 samples, 0.05%)</title><rect x="19.9027%" y="389" width="0.0480%" height="15" fill="rgb(228,66,33)" fg:x="11618" fg:w="28"/><text x="20.1527%" y="399.50"></text></g><g><title>alloc::alloc::alloc (67 samples, 0.11%)</title><rect x="19.8445%" y="421" width="0.1148%" height="15" fill="rgb(234,215,21)" fg:x="11584" fg:w="67"/><text x="20.0945%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (84 samples, 0.14%)</title><rect x="19.8273%" y="437" width="0.1439%" height="15" fill="rgb(222,191,20)" fg:x="11574" fg:w="84"/><text x="20.0773%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.03%)</title><rect x="19.9729%" y="437" width="0.0291%" height="15" fill="rgb(245,79,54)" fg:x="11659" fg:w="17"/><text x="20.2229%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (8 samples, 0.01%)</title><rect x="20.0055%" y="437" width="0.0137%" height="15" fill="rgb(240,10,37)" fg:x="11678" fg:w="8"/><text x="20.2555%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (8 samples, 0.01%)</title><rect x="20.0192%" y="437" width="0.0137%" height="15" fill="rgb(214,192,32)" fg:x="11686" fg:w="8"/><text x="20.2692%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (44 samples, 0.08%)</title><rect x="20.0466%" y="421" width="0.0754%" height="15" fill="rgb(209,36,54)" fg:x="11702" fg:w="44"/><text x="20.2966%" y="431.50"></text></g><g><title>core::ptr::read (44 samples, 0.08%)</title><rect x="20.0466%" y="405" width="0.0754%" height="15" fill="rgb(220,10,11)" fg:x="11702" fg:w="44"/><text x="20.2966%" y="415.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (52 samples, 0.09%)</title><rect x="20.0346%" y="437" width="0.0891%" height="15" fill="rgb(221,106,17)" fg:x="11695" fg:w="52"/><text x="20.2846%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back_mut (7 samples, 0.01%)</title><rect x="20.1237%" y="437" width="0.0120%" height="15" fill="rgb(251,142,44)" fg:x="11747" fg:w="7"/><text x="20.3737%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (14 samples, 0.02%)</title><rect x="20.1562%" y="437" width="0.0240%" height="15" fill="rgb(238,13,15)" fg:x="11766" fg:w="14"/><text x="20.4062%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (13 samples, 0.02%)</title><rect x="20.1802%" y="437" width="0.0223%" height="15" fill="rgb(208,107,27)" fg:x="11780" fg:w="13"/><text x="20.4302%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="20.2470%" y="373" width="0.0137%" height="15" fill="rgb(205,136,37)" fg:x="11819" fg:w="8"/><text x="20.4970%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.05%)</title><rect x="20.2265%" y="421" width="0.0531%" height="15" fill="rgb(250,205,27)" fg:x="11807" fg:w="31"/><text x="20.4765%" y="431.50"></text></g><g><title>realloc (28 samples, 0.05%)</title><rect x="20.2316%" y="405" width="0.0480%" height="15" fill="rgb(210,80,43)" fg:x="11810" fg:w="28"/><text x="20.4816%" y="415.50"></text></g><g><title>_int_realloc (21 samples, 0.04%)</title><rect x="20.2436%" y="389" width="0.0360%" height="15" fill="rgb(247,160,36)" fg:x="11817" fg:w="21"/><text x="20.4936%" y="399.50"></text></g><g><title>_int_malloc (10 samples, 0.02%)</title><rect x="20.2624%" y="373" width="0.0171%" height="15" fill="rgb(234,13,49)" fg:x="11828" fg:w="10"/><text x="20.5124%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (50 samples, 0.09%)</title><rect x="20.2025%" y="437" width="0.0857%" height="15" fill="rgb(234,122,0)" fg:x="11793" fg:w="50"/><text x="20.4525%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7 samples, 0.01%)</title><rect x="20.2881%" y="437" width="0.0120%" height="15" fill="rgb(207,146,38)" fg:x="11843" fg:w="7"/><text x="20.5381%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="20.3001%" y="437" width="0.0103%" height="15" fill="rgb(207,177,25)" fg:x="11850" fg:w="6"/><text x="20.5501%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::from_raw_in (19 samples, 0.03%)</title><rect x="20.3207%" y="437" width="0.0325%" height="15" fill="rgb(211,178,42)" fg:x="11862" fg:w="19"/><text x="20.5707%" y="447.50"></text></g><g><title>alloc::sync::data_offset (14 samples, 0.02%)</title><rect x="20.3293%" y="421" width="0.0240%" height="15" fill="rgb(230,69,54)" fg:x="11867" fg:w="14"/><text x="20.5793%" y="431.50"></text></g><g><title>core::mem::align_of_val_raw (10 samples, 0.02%)</title><rect x="20.3361%" y="405" width="0.0171%" height="15" fill="rgb(214,135,41)" fg:x="11871" fg:w="10"/><text x="20.5861%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::increment_strong_count_in (21 samples, 0.04%)</title><rect x="20.3532%" y="437" width="0.0360%" height="15" fill="rgb(237,67,25)" fg:x="11881" fg:w="21"/><text x="20.6032%" y="447.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="20.3618%" y="421" width="0.0274%" height="15" fill="rgb(222,189,50)" fg:x="11886" fg:w="16"/><text x="20.6118%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="20.3618%" y="405" width="0.0274%" height="15" fill="rgb(245,148,34)" fg:x="11886" fg:w="16"/><text x="20.6118%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.02%)</title><rect x="20.3652%" y="389" width="0.0240%" height="15" fill="rgb(222,29,6)" fg:x="11888" fg:w="14"/><text x="20.6152%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.02%)</title><rect x="20.3652%" y="373" width="0.0240%" height="15" fill="rgb(221,189,43)" fg:x="11888" fg:w="14"/><text x="20.6152%" y="383.50"></text></g><g><title>alloc::sync::data_offset_align (25 samples, 0.04%)</title><rect x="20.4029%" y="437" width="0.0428%" height="15" fill="rgb(207,36,27)" fg:x="11910" fg:w="25"/><text x="20.6529%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::padding_needed_for (17 samples, 0.03%)</title><rect x="20.4166%" y="421" width="0.0291%" height="15" fill="rgb(217,90,24)" fg:x="11918" fg:w="17"/><text x="20.6666%" y="431.50"></text></g><g><title>core::ptr::alignment::Alignment::new (16 samples, 0.03%)</title><rect x="20.4183%" y="405" width="0.0274%" height="15" fill="rgb(224,66,35)" fg:x="11919" fg:w="16"/><text x="20.6683%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (7 samples, 0.01%)</title><rect x="20.4338%" y="389" width="0.0120%" height="15" fill="rgb(221,13,50)" fg:x="11928" fg:w="7"/><text x="20.6838%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (7 samples, 0.01%)</title><rect x="20.4338%" y="373" width="0.0120%" height="15" fill="rgb(236,68,49)" fg:x="11928" fg:w="7"/><text x="20.6838%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (23 samples, 0.04%)</title><rect x="20.4629%" y="437" width="0.0394%" height="15" fill="rgb(229,146,28)" fg:x="11945" fg:w="23"/><text x="20.7129%" y="447.50"></text></g><g><title>core::ptr::read (13 samples, 0.02%)</title><rect x="20.4800%" y="421" width="0.0223%" height="15" fill="rgb(225,31,38)" fg:x="11955" fg:w="13"/><text x="20.7300%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.01%)</title><rect x="20.5023%" y="437" width="0.0120%" height="15" fill="rgb(250,208,3)" fg:x="11968" fg:w="7"/><text x="20.7523%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (14 samples, 0.02%)</title><rect x="20.5143%" y="437" width="0.0240%" height="15" fill="rgb(246,54,23)" fg:x="11975" fg:w="14"/><text x="20.7643%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::repeat (11 samples, 0.02%)</title><rect x="20.5742%" y="437" width="0.0188%" height="15" fill="rgb(243,76,11)" fg:x="12010" fg:w="11"/><text x="20.8242%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (7 samples, 0.01%)</title><rect x="20.5982%" y="437" width="0.0120%" height="15" fill="rgb(245,21,50)" fg:x="12024" fg:w="7"/><text x="20.8482%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="20.6102%" y="437" width="0.0206%" height="15" fill="rgb(228,9,43)" fg:x="12031" fg:w="12"/><text x="20.8602%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="20.6308%" y="437" width="0.0103%" height="15" fill="rgb(208,100,47)" fg:x="12043" fg:w="6"/><text x="20.8808%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (17 samples, 0.03%)</title><rect x="20.6410%" y="437" width="0.0291%" height="15" fill="rgb(232,26,8)" fg:x="12049" fg:w="17"/><text x="20.8910%" y="447.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (6 samples, 0.01%)</title><rect x="20.6702%" y="437" width="0.0103%" height="15" fill="rgb(216,166,38)" fg:x="12066" fg:w="6"/><text x="20.9202%" y="447.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (10 samples, 0.02%)</title><rect x="20.6804%" y="437" width="0.0171%" height="15" fill="rgb(251,202,51)" fg:x="12072" fg:w="10"/><text x="20.9304%" y="447.50"></text></g><g><title>core::cmp::Ord::max (6 samples, 0.01%)</title><rect x="20.6993%" y="437" width="0.0103%" height="15" fill="rgb(254,216,34)" fg:x="12083" fg:w="6"/><text x="20.9493%" y="447.50"></text></g><g><title>core::cmp::Ord::min (19 samples, 0.03%)</title><rect x="20.7096%" y="437" width="0.0325%" height="15" fill="rgb(251,32,27)" fg:x="12089" fg:w="19"/><text x="20.9596%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (243 samples, 0.42%)</title><rect x="20.7558%" y="437" width="0.4163%" height="15" fill="rgb(208,127,28)" fg:x="12116" fg:w="243"/><text x="21.0058%" y="447.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;u128&gt; for u64&gt;::try_from (8 samples, 0.01%)</title><rect x="21.1789%" y="437" width="0.0137%" height="15" fill="rgb(224,137,22)" fg:x="12363" fg:w="8"/><text x="21.4289%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.01%)</title><rect x="21.2132%" y="437" width="0.0103%" height="15" fill="rgb(254,70,32)" fg:x="12383" fg:w="6"/><text x="21.4632%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.01%)</title><rect x="21.2132%" y="421" width="0.0103%" height="15" fill="rgb(229,75,37)" fg:x="12383" fg:w="6"/><text x="21.4632%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::is_nan (9 samples, 0.02%)</title><rect x="21.2235%" y="437" width="0.0154%" height="15" fill="rgb(252,64,23)" fg:x="12389" fg:w="9"/><text x="21.4735%" y="447.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (186 samples, 0.32%)</title><rect x="21.2389%" y="437" width="0.3186%" height="15" fill="rgb(232,162,48)" fg:x="12398" fg:w="186"/><text x="21.4889%" y="447.50"></text></g><g><title>core::hash::Hasher::write_str (10 samples, 0.02%)</title><rect x="21.5627%" y="437" width="0.0171%" height="15" fill="rgb(246,160,12)" fg:x="12587" fg:w="10"/><text x="21.8127%" y="447.50"></text></g><g><title>&lt;foldhash::fast::FoldHasher as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="21.5644%" y="421" width="0.0154%" height="15" fill="rgb(247,166,0)" fg:x="12588" fg:w="9"/><text x="21.8144%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (55 samples, 0.09%)</title><rect x="21.5952%" y="437" width="0.0942%" height="15" fill="rgb(249,219,21)" fg:x="12606" fg:w="55"/><text x="21.8452%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (47 samples, 0.08%)</title><rect x="21.6946%" y="437" width="0.0805%" height="15" fill="rgb(205,209,3)" fg:x="12664" fg:w="47"/><text x="21.9446%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.02%)</title><rect x="21.7751%" y="437" width="0.0223%" height="15" fill="rgb(243,44,1)" fg:x="12711" fg:w="13"/><text x="22.0251%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9 samples, 0.02%)</title><rect x="21.8077%" y="437" width="0.0154%" height="15" fill="rgb(206,159,16)" fg:x="12730" fg:w="9"/><text x="22.0577%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::rev (9 samples, 0.02%)</title><rect x="21.8231%" y="437" width="0.0154%" height="15" fill="rgb(244,77,30)" fg:x="12739" fg:w="9"/><text x="22.0731%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.03%)</title><rect x="21.8385%" y="437" width="0.0343%" height="15" fill="rgb(218,69,12)" fg:x="12748" fg:w="20"/><text x="22.0885%" y="447.50"></text></g><g><title>rayon::slice::sort::insertion_sort_shift_left (10 samples, 0.02%)</title><rect x="21.8556%" y="421" width="0.0171%" height="15" fill="rgb(212,87,7)" fg:x="12758" fg:w="10"/><text x="22.1056%" y="431.50"></text></g><g><title>core::mem::drop (25 samples, 0.04%)</title><rect x="21.8728%" y="437" width="0.0428%" height="15" fill="rgb(245,114,25)" fg:x="12768" fg:w="25"/><text x="22.1228%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (7 samples, 0.01%)</title><rect x="21.9156%" y="437" width="0.0120%" height="15" fill="rgb(210,61,42)" fg:x="12793" fg:w="7"/><text x="22.1656%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (6 samples, 0.01%)</title><rect x="22.2668%" y="421" width="0.0103%" height="15" fill="rgb(211,52,33)" fg:x="12998" fg:w="6"/><text x="22.5168%" y="431.50"></text></g><g><title>core::ops::function::Fn::call (205 samples, 0.35%)</title><rect x="21.9276%" y="437" width="0.3512%" height="15" fill="rgb(234,58,33)" fg:x="12800" fg:w="205"/><text x="22.1776%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (77 samples, 0.13%)</title><rect x="22.2788%" y="437" width="0.1319%" height="15" fill="rgb(220,115,36)" fg:x="13005" fg:w="77"/><text x="22.5288%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (48 samples, 0.08%)</title><rect x="22.4107%" y="437" width="0.0822%" height="15" fill="rgb(243,153,54)" fg:x="13082" fg:w="48"/><text x="22.6607%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (7 samples, 0.01%)</title><rect x="22.5015%" y="437" width="0.0120%" height="15" fill="rgb(251,47,18)" fg:x="13135" fg:w="7"/><text x="22.7515%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_pin_mut (22 samples, 0.04%)</title><rect x="22.5134%" y="437" width="0.0377%" height="15" fill="rgb(242,102,42)" fg:x="13142" fg:w="22"/><text x="22.7634%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (54 samples, 0.09%)</title><rect x="22.5511%" y="437" width="0.0925%" height="15" fill="rgb(234,31,38)" fg:x="13164" fg:w="54"/><text x="22.8011%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (24 samples, 0.04%)</title><rect x="22.6436%" y="437" width="0.0411%" height="15" fill="rgb(221,117,51)" fg:x="13218" fg:w="24"/><text x="22.8936%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (16 samples, 0.03%)</title><rect x="22.6933%" y="437" width="0.0274%" height="15" fill="rgb(212,20,18)" fg:x="13247" fg:w="16"/><text x="22.9433%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (26 samples, 0.04%)</title><rect x="22.7259%" y="437" width="0.0445%" height="15" fill="rgb(245,133,36)" fg:x="13266" fg:w="26"/><text x="22.9759%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="22.7601%" y="421" width="0.0103%" height="15" fill="rgb(212,6,19)" fg:x="13286" fg:w="6"/><text x="23.0101%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (16 samples, 0.03%)</title><rect x="22.7704%" y="437" width="0.0274%" height="15" fill="rgb(218,1,36)" fg:x="13292" fg:w="16"/><text x="23.0204%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="22.8424%" y="405" width="0.0137%" height="15" fill="rgb(246,84,54)" fg:x="13334" fg:w="8"/><text x="23.0924%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (30 samples, 0.05%)</title><rect x="22.8064%" y="437" width="0.0514%" height="15" fill="rgb(242,110,6)" fg:x="13313" fg:w="30"/><text x="23.0564%" y="447.50"></text></g><g><title>core::mem::replace (17 samples, 0.03%)</title><rect x="22.8287%" y="421" width="0.0291%" height="15" fill="rgb(214,47,5)" fg:x="13326" fg:w="17"/><text x="23.0787%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (8 samples, 0.01%)</title><rect x="22.8578%" y="437" width="0.0137%" height="15" fill="rgb(218,159,25)" fg:x="13343" fg:w="8"/><text x="23.1078%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt; (22 samples, 0.04%)</title><rect x="22.9126%" y="437" width="0.0377%" height="15" fill="rgb(215,211,28)" fg:x="13375" fg:w="22"/><text x="23.1626%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="22.9332%" y="421" width="0.0171%" height="15" fill="rgb(238,59,32)" fg:x="13387" fg:w="10"/><text x="23.1832%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.01%)</title><rect x="22.9606%" y="437" width="0.0120%" height="15" fill="rgb(226,82,3)" fg:x="13403" fg:w="7"/><text x="23.2106%" y="447.50"></text></g><g><title>cfree@GLIBC_2.2.5 (6 samples, 0.01%)</title><rect x="22.9623%" y="421" width="0.0103%" height="15" fill="rgb(240,164,32)" fg:x="13404" fg:w="6"/><text x="23.2123%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.01%)</title><rect x="22.9726%" y="437" width="0.0103%" height="15" fill="rgb(232,46,7)" fg:x="13410" fg:w="6"/><text x="23.2226%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;sqlx_sqlite::value::ValueHandle,&amp;alloc::alloc::Global&gt;&gt; (15 samples, 0.03%)</title><rect x="23.0120%" y="437" width="0.0257%" height="15" fill="rgb(229,129,53)" fg:x="13433" fg:w="15"/><text x="23.2620%" y="447.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="23.0154%" y="421" width="0.0223%" height="15" fill="rgb(234,188,29)" fg:x="13435" fg:w="13"/><text x="23.2654%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;core::option::Option&lt;tokio::runtime::scheduler::Handle&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="23.0445%" y="437" width="0.0137%" height="15" fill="rgb(246,141,4)" fg:x="13452" fg:w="8"/><text x="23.2945%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;sqlx_sqlite::arguments::SqliteArgumentValue&gt;,sqlx_sqlite::arguments::SqliteArgumentValue::into_static&gt;&gt; (6 samples, 0.01%)</title><rect x="23.0651%" y="437" width="0.0103%" height="15" fill="rgb(229,23,39)" fg:x="13464" fg:w="6"/><text x="23.3151%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (6 samples, 0.01%)</title><rect x="23.0925%" y="437" width="0.0103%" height="15" fill="rgb(206,12,3)" fg:x="13480" fg:w="6"/><text x="23.3425%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::time::entry::TimerShared&gt;&gt; (9 samples, 0.02%)</title><rect x="23.1267%" y="437" width="0.0154%" height="15" fill="rgb(252,226,20)" fg:x="13500" fg:w="9"/><text x="23.3767%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="23.1610%" y="437" width="0.0171%" height="15" fill="rgb(216,123,35)" fg:x="13520" fg:w="10"/><text x="23.4110%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::handle::Handle,tokio::runtime::handle::TryCurrentError&gt;&gt; (30 samples, 0.05%)</title><rect x="23.1816%" y="437" width="0.0514%" height="15" fill="rgb(212,68,40)" fg:x="13532" fg:w="30"/><text x="23.4316%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (10 samples, 0.02%)</title><rect x="23.2158%" y="421" width="0.0171%" height="15" fill="rgb(254,125,32)" fg:x="13552" fg:w="10"/><text x="23.4658%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="23.2158%" y="405" width="0.0171%" height="15" fill="rgb(253,97,22)" fg:x="13552" fg:w="10"/><text x="23.4658%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="23.2227%" y="389" width="0.0103%" height="15" fill="rgb(241,101,14)" fg:x="13556" fg:w="6"/><text x="23.4727%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="23.2227%" y="373" width="0.0103%" height="15" fill="rgb(238,103,29)" fg:x="13556" fg:w="6"/><text x="23.4727%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (6 samples, 0.01%)</title><rect x="23.2347%" y="437" width="0.0103%" height="15" fill="rgb(233,195,47)" fg:x="13563" fg:w="6"/><text x="23.4847%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::State&lt;()&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="23.2535%" y="421" width="0.0103%" height="15" fill="rgb(246,218,30)" fg:x="13574" fg:w="6"/><text x="23.5035%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="23.2518%" y="437" width="0.0137%" height="15" fill="rgb(219,145,47)" fg:x="13573" fg:w="8"/><text x="23.5018%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner::ListLock&lt;()&gt;&gt; (30 samples, 0.05%)</title><rect x="23.2655%" y="437" width="0.0514%" height="15" fill="rgb(243,12,26)" fg:x="13581" fg:w="30"/><text x="23.5155%" y="447.50"></text></g><g><title>&lt;event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner::ListLock&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="23.2946%" y="421" width="0.0223%" height="15" fill="rgb(214,87,16)" fg:x="13598" fg:w="13"/><text x="23.5446%" y="431.50"></text></g><g><title>std::sync::poison::Flag::done (6 samples, 0.01%)</title><rect x="23.3066%" y="405" width="0.0103%" height="15" fill="rgb(208,99,42)" fg:x="13605" fg:w="6"/><text x="23.5566%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::OwnedOrRef&lt;flume::Receiver&lt;core::result::Result&lt;either::Either&lt;sqlx_sqlite::query_result::SqliteQueryResult,sqlx_sqlite::row::SqliteRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="23.3306%" y="437" width="0.0120%" height="15" fill="rgb(253,99,2)" fg:x="13619" fg:w="7"/><text x="23.5806%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::lock::TryLock&lt;core::option::Option&lt;()&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="23.3529%" y="437" width="0.0120%" height="15" fill="rgb(220,168,23)" fg:x="13632" fg:w="7"/><text x="23.6029%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::lock::TryLock&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="23.3649%" y="437" width="0.0154%" height="15" fill="rgb(242,38,24)" fg:x="13639" fg:w="9"/><text x="23.6149%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::InnerState&gt;&gt; (7 samples, 0.01%)</title><rect x="23.4128%" y="437" width="0.0120%" height="15" fill="rgb(225,182,9)" fg:x="13667" fg:w="7"/><text x="23.6628%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon::slice::sort::InsertionHole&lt;f64&gt;&gt; (9 samples, 0.02%)</title><rect x="23.4300%" y="437" width="0.0154%" height="15" fill="rgb(243,178,37)" fg:x="13677" fg:w="9"/><text x="23.6800%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::CloseEvent&gt; (11 samples, 0.02%)</title><rect x="23.4591%" y="437" width="0.0188%" height="15" fill="rgb(232,139,19)" fg:x="13694" fg:w="11"/><text x="23.7091%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::rt::JoinHandle&lt;()&gt;&gt; (7 samples, 0.01%)</title><rect x="23.4916%" y="437" width="0.0120%" height="15" fill="rgb(225,201,24)" fg:x="13713" fg:w="7"/><text x="23.7416%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_sqlite::connection::worker::ConnectionWorker::oneshot_cmd&lt;sqlx_sqlite::connection::worker::ConnectionWorker::ping::{{closure}}::{{closure}},()&gt;::{{closure}}&gt; (6 samples, 0.01%)</title><rect x="23.5122%" y="437" width="0.0103%" height="15" fill="rgb(221,47,46)" fg:x="13725" fg:w="6"/><text x="23.7622%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_sqlite::connection::worker::ConnectionWorker::ping::{{closure}}&gt; (10 samples, 0.02%)</title><rect x="23.5225%" y="437" width="0.0171%" height="15" fill="rgb(249,23,13)" fg:x="13731" fg:w="10"/><text x="23.7725%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_sqlite::value::SqliteValue&gt; (22 samples, 0.04%)</title><rect x="23.5396%" y="437" width="0.0377%" height="15" fill="rgb(219,9,5)" fg:x="13741" fg:w="22"/><text x="23.7896%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.04%)</title><rect x="23.5396%" y="421" width="0.0377%" height="15" fill="rgb(254,171,16)" fg:x="13741" fg:w="22"/><text x="23.7896%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.03%)</title><rect x="23.5447%" y="405" width="0.0325%" height="15" fill="rgb(230,171,20)" fg:x="13744" fg:w="19"/><text x="23.7947%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.03%)</title><rect x="23.5447%" y="389" width="0.0325%" height="15" fill="rgb(210,71,41)" fg:x="13744" fg:w="19"/><text x="23.7947%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (17 samples, 0.03%)</title><rect x="23.5824%" y="437" width="0.0291%" height="15" fill="rgb(206,173,20)" fg:x="13766" fg:w="17"/><text x="23.8324%" y="447.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner (14 samples, 0.02%)</title><rect x="23.5876%" y="421" width="0.0240%" height="15" fill="rgb(233,88,34)" fg:x="13769" fg:w="14"/><text x="23.8376%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;flume::Chan&lt;core::result::Result&lt;either::Either&lt;sqlx_sqlite::query_result::SqliteQueryResult,sqlx_sqlite::row::SqliteRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="23.6115%" y="437" width="0.0137%" height="15" fill="rgb(223,209,46)" fg:x="13783" fg:w="8"/><text x="23.8615%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::InnerState&gt;&gt; (12 samples, 0.02%)</title><rect x="23.6270%" y="437" width="0.0206%" height="15" fill="rgb(250,43,18)" fg:x="13792" fg:w="12"/><text x="23.8770%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.07%)</title><rect x="23.6544%" y="421" width="0.0668%" height="15" fill="rgb(208,13,10)" fg:x="13808" fg:w="39"/><text x="23.9044%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (38 samples, 0.07%)</title><rect x="23.6561%" y="405" width="0.0651%" height="15" fill="rgb(212,200,36)" fg:x="13809" fg:w="38"/><text x="23.9061%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (38 samples, 0.07%)</title><rect x="23.6561%" y="389" width="0.0651%" height="15" fill="rgb(225,90,30)" fg:x="13809" fg:w="38"/><text x="23.9061%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (43 samples, 0.07%)</title><rect x="23.6492%" y="437" width="0.0737%" height="15" fill="rgb(236,182,39)" fg:x="13805" fg:w="43"/><text x="23.8992%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (28 samples, 0.05%)</title><rect x="23.7246%" y="437" width="0.0480%" height="15" fill="rgb(212,144,35)" fg:x="13849" fg:w="28"/><text x="23.9746%" y="447.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (26 samples, 0.04%)</title><rect x="23.7280%" y="421" width="0.0445%" height="15" fill="rgb(228,63,44)" fg:x="13851" fg:w="26"/><text x="23.9780%" y="431.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (24 samples, 0.04%)</title><rect x="23.7315%" y="405" width="0.0411%" height="15" fill="rgb(228,109,6)" fg:x="13853" fg:w="24"/><text x="23.9815%" y="415.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::remove_entry (12 samples, 0.02%)</title><rect x="23.7520%" y="389" width="0.0206%" height="15" fill="rgb(238,117,24)" fg:x="13865" fg:w="12"/><text x="24.0020%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::timeout::Timeout&lt;sqlx_core::pool::inner::PoolInner&lt;sqlx_sqlite::database::Sqlite&gt;::acquire::{{closure}}::{{closure}}&gt;&gt; (6 samples, 0.01%)</title><rect x="23.7931%" y="437" width="0.0103%" height="15" fill="rgb(242,26,26)" fg:x="13889" fg:w="6"/><text x="24.0431%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.01%)</title><rect x="23.8051%" y="437" width="0.0103%" height="15" fill="rgb(221,92,48)" fg:x="13896" fg:w="6"/><text x="24.0551%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (15 samples, 0.03%)</title><rect x="23.8154%" y="437" width="0.0257%" height="15" fill="rgb(209,209,32)" fg:x="13902" fg:w="15"/><text x="24.0654%" y="447.50"></text></g><g><title>core::ptr::read (14 samples, 0.02%)</title><rect x="23.8462%" y="437" width="0.0240%" height="15" fill="rgb(221,70,22)" fg:x="13920" fg:w="14"/><text x="24.0962%" y="447.50"></text></g><g><title>core::ptr::copy (32 samples, 0.05%)</title><rect x="23.8942%" y="421" width="0.0548%" height="15" fill="rgb(248,145,5)" fg:x="13948" fg:w="32"/><text x="24.1442%" y="431.50"></text></g><g><title>core::ptr::swap (59 samples, 0.10%)</title><rect x="23.8702%" y="437" width="0.1011%" height="15" fill="rgb(226,116,26)" fg:x="13934" fg:w="59"/><text x="24.1202%" y="447.50"></text></g><g><title>core::ptr::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="23.9490%" y="421" width="0.0223%" height="15" fill="rgb(244,5,17)" fg:x="13980" fg:w="13"/><text x="24.1990%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (17 samples, 0.03%)</title><rect x="23.9781%" y="437" width="0.0291%" height="15" fill="rgb(252,159,33)" fg:x="13997" fg:w="17"/><text x="24.2281%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (10 samples, 0.02%)</title><rect x="24.0107%" y="437" width="0.0171%" height="15" fill="rgb(206,71,0)" fg:x="14016" fg:w="10"/><text x="24.2607%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (16 samples, 0.03%)</title><rect x="24.0278%" y="437" width="0.0274%" height="15" fill="rgb(233,118,54)" fg:x="14026" fg:w="16"/><text x="24.2778%" y="447.50"></text></g><g><title>flume::wait_lock (6 samples, 0.01%)</title><rect x="24.0450%" y="421" width="0.0103%" height="15" fill="rgb(234,83,48)" fg:x="14036" fg:w="6"/><text x="24.2950%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (10 samples, 0.02%)</title><rect x="24.0552%" y="437" width="0.0171%" height="15" fill="rgb(228,3,54)" fg:x="14042" fg:w="10"/><text x="24.3052%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (26 samples, 0.04%)</title><rect x="24.0724%" y="437" width="0.0445%" height="15" fill="rgb(226,155,13)" fg:x="14052" fg:w="26"/><text x="24.3224%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (25 samples, 0.04%)</title><rect x="24.1169%" y="437" width="0.0428%" height="15" fill="rgb(241,28,37)" fg:x="14078" fg:w="25"/><text x="24.3669%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (59 samples, 0.10%)</title><rect x="24.1597%" y="437" width="0.1011%" height="15" fill="rgb(233,93,10)" fg:x="14103" fg:w="59"/><text x="24.4097%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (41 samples, 0.07%)</title><rect x="24.2659%" y="437" width="0.0702%" height="15" fill="rgb(225,113,19)" fg:x="14165" fg:w="41"/><text x="24.5159%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_checked (16 samples, 0.03%)</title><rect x="24.3088%" y="421" width="0.0274%" height="15" fill="rgb(241,2,18)" fg:x="14190" fg:w="16"/><text x="24.5588%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (57 samples, 0.10%)</title><rect x="24.3362%" y="437" width="0.0976%" height="15" fill="rgb(228,207,21)" fg:x="14206" fg:w="57"/><text x="24.5862%" y="447.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (34 samples, 0.06%)</title><rect x="24.3756%" y="421" width="0.0582%" height="15" fill="rgb(213,211,35)" fg:x="14229" fg:w="34"/><text x="24.6256%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (14 samples, 0.02%)</title><rect x="24.4098%" y="405" width="0.0240%" height="15" fill="rgb(209,83,10)" fg:x="14249" fg:w="14"/><text x="24.6598%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (14 samples, 0.02%)</title><rect x="24.4098%" y="389" width="0.0240%" height="15" fill="rgb(209,164,1)" fg:x="14249" fg:w="14"/><text x="24.6598%" y="399.50"></text></g><g><title>core::slice::index::range (6 samples, 0.01%)</title><rect x="24.4372%" y="437" width="0.0103%" height="15" fill="rgb(213,184,43)" fg:x="14265" fg:w="6"/><text x="24.6872%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (12 samples, 0.02%)</title><rect x="24.4561%" y="437" width="0.0206%" height="15" fill="rgb(231,61,34)" fg:x="14276" fg:w="12"/><text x="24.7061%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (6 samples, 0.01%)</title><rect x="24.4801%" y="437" width="0.0103%" height="15" fill="rgb(235,75,3)" fg:x="14290" fg:w="6"/><text x="24.7301%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (49 samples, 0.08%)</title><rect x="24.4904%" y="437" width="0.0839%" height="15" fill="rgb(220,106,47)" fg:x="14296" fg:w="49"/><text x="24.7404%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (46 samples, 0.08%)</title><rect x="24.4955%" y="421" width="0.0788%" height="15" fill="rgb(210,196,33)" fg:x="14299" fg:w="46"/><text x="24.7455%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (26 samples, 0.04%)</title><rect x="24.5863%" y="437" width="0.0445%" height="15" fill="rgb(229,154,42)" fg:x="14352" fg:w="26"/><text x="24.8363%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (6 samples, 0.01%)</title><rect x="24.6325%" y="437" width="0.0103%" height="15" fill="rgb(228,114,26)" fg:x="14379" fg:w="6"/><text x="24.8825%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.01%)</title><rect x="24.6325%" y="421" width="0.0103%" height="15" fill="rgb(208,144,1)" fg:x="14379" fg:w="6"/><text x="24.8825%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.05%)</title><rect x="24.6702%" y="421" width="0.0531%" height="15" fill="rgb(239,112,37)" fg:x="14401" fg:w="31"/><text x="24.9202%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (45 samples, 0.08%)</title><rect x="24.6548%" y="437" width="0.0771%" height="15" fill="rgb(210,96,50)" fg:x="14392" fg:w="45"/><text x="24.9048%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (14 samples, 0.02%)</title><rect x="24.7319%" y="437" width="0.0240%" height="15" fill="rgb(222,178,2)" fg:x="14437" fg:w="14"/><text x="24.9819%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (28 samples, 0.05%)</title><rect x="24.7679%" y="437" width="0.0480%" height="15" fill="rgb(226,74,18)" fg:x="14458" fg:w="28"/><text x="25.0179%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (26 samples, 0.04%)</title><rect x="24.7713%" y="421" width="0.0445%" height="15" fill="rgb(225,67,54)" fg:x="14460" fg:w="26"/><text x="25.0213%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (7 samples, 0.01%)</title><rect x="24.8158%" y="437" width="0.0120%" height="15" fill="rgb(251,92,32)" fg:x="14486" fg:w="7"/><text x="25.0658%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_or (7 samples, 0.01%)</title><rect x="24.8158%" y="421" width="0.0120%" height="15" fill="rgb(228,149,22)" fg:x="14486" fg:w="7"/><text x="25.0658%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (26 samples, 0.04%)</title><rect x="24.8278%" y="437" width="0.0445%" height="15" fill="rgb(243,54,13)" fg:x="14493" fg:w="26"/><text x="25.0778%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.04%)</title><rect x="24.8347%" y="421" width="0.0377%" height="15" fill="rgb(243,180,28)" fg:x="14497" fg:w="22"/><text x="25.0847%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (12 samples, 0.02%)</title><rect x="24.8792%" y="437" width="0.0206%" height="15" fill="rgb(208,167,24)" fg:x="14523" fg:w="12"/><text x="25.1292%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (20 samples, 0.03%)</title><rect x="24.8998%" y="437" width="0.0343%" height="15" fill="rgb(245,73,45)" fg:x="14535" fg:w="20"/><text x="25.1498%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (20 samples, 0.03%)</title><rect x="24.8998%" y="421" width="0.0343%" height="15" fill="rgb(237,203,48)" fg:x="14535" fg:w="20"/><text x="25.1498%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (165 samples, 0.28%)</title><rect x="24.9340%" y="437" width="0.2827%" height="15" fill="rgb(211,197,16)" fg:x="14555" fg:w="165"/><text x="25.1840%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (228 samples, 0.39%)</title><rect x="25.2167%" y="437" width="0.3906%" height="15" fill="rgb(243,99,51)" fg:x="14720" fg:w="228"/><text x="25.4667%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (266 samples, 0.46%)</title><rect x="25.6073%" y="437" width="0.4557%" height="15" fill="rgb(215,123,29)" fg:x="14948" fg:w="266"/><text x="25.8573%" y="447.50"></text></g><g><title>core::fmt::rt::&lt;impl core::fmt::Arguments&gt;::new_const (8 samples, 0.01%)</title><rect x="26.0493%" y="421" width="0.0137%" height="15" fill="rgb(239,186,37)" fg:x="15206" fg:w="8"/><text x="26.2993%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_store (65 samples, 0.11%)</title><rect x="26.0630%" y="437" width="0.1114%" height="15" fill="rgb(252,136,39)" fg:x="15214" fg:w="65"/><text x="26.3130%" y="447.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (32 samples, 0.05%)</title><rect x="26.1760%" y="437" width="0.0548%" height="15" fill="rgb(223,213,32)" fg:x="15280" fg:w="32"/><text x="26.4260%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (19 samples, 0.03%)</title><rect x="26.1983%" y="421" width="0.0325%" height="15" fill="rgb(233,115,5)" fg:x="15293" fg:w="19"/><text x="26.4483%" y="431.50"></text></g><g><title>core::time::Duration::from_nanos (7 samples, 0.01%)</title><rect x="26.2463%" y="437" width="0.0120%" height="15" fill="rgb(207,226,44)" fg:x="15321" fg:w="7"/><text x="26.4963%" y="447.50"></text></g><g><title>criterion::bencher::AsyncBencher&lt;A,M&gt;::iter_custom::{{closure}} (8 samples, 0.01%)</title><rect x="26.2634%" y="437" width="0.0137%" height="15" fill="rgb(208,126,0)" fg:x="15331" fg:w="8"/><text x="26.5134%" y="447.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (11 samples, 0.02%)</title><rect x="26.2771%" y="437" width="0.0188%" height="15" fill="rgb(244,66,21)" fg:x="15339" fg:w="11"/><text x="26.5271%" y="447.50"></text></g><g><title>&lt;f64 as core::ops::arith::Sub&gt;::sub (17 samples, 0.03%)</title><rect x="28.7560%" y="421" width="0.0291%" height="15" fill="rgb(222,97,12)" fg:x="16786" fg:w="17"/><text x="29.0060%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::powi (137 samples, 0.23%)</title><rect x="28.7851%" y="421" width="0.2347%" height="15" fill="rgb(219,213,19)" fg:x="16803" fg:w="137"/><text x="29.0351%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (1,594 samples, 2.73%)</title><rect x="26.2994%" y="437" width="2.7307%" height="15" fill="rgb(252,169,30)" fg:x="15352" fg:w="1594"/><text x="26.5494%" y="447.50">cr..</text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.01%)</title><rect x="29.0198%" y="421" width="0.0103%" height="15" fill="rgb(206,32,51)" fg:x="16940" fg:w="6"/><text x="29.2698%" y="431.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (12 samples, 0.02%)</title><rect x="29.0318%" y="437" width="0.0206%" height="15" fill="rgb(250,172,42)" fg:x="16947" fg:w="12"/><text x="29.2818%" y="447.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev::{{closure}} (12 samples, 0.02%)</title><rect x="29.0592%" y="437" width="0.0206%" height="15" fill="rgb(209,34,43)" fg:x="16963" fg:w="12"/><text x="29.3092%" y="447.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::new::{{closure}} (12 samples, 0.02%)</title><rect x="29.0832%" y="437" width="0.0206%" height="15" fill="rgb(223,11,35)" fg:x="16977" fg:w="12"/><text x="29.3332%" y="447.50"></text></g><g><title>__sysvec_apic_timer_interrupt (6 samples, 0.01%)</title><rect x="29.9979%" y="389" width="0.0103%" height="15" fill="rgb(251,219,26)" fg:x="17511" fg:w="6"/><text x="30.2479%" y="399.50"></text></g><g><title>hrtimer_interrupt (6 samples, 0.01%)</title><rect x="29.9979%" y="373" width="0.0103%" height="15" fill="rgb(231,119,3)" fg:x="17511" fg:w="6"/><text x="30.2479%" y="383.50"></text></g><g><title>__hrtimer_run_queues (6 samples, 0.01%)</title><rect x="29.9979%" y="357" width="0.0103%" height="15" fill="rgb(216,97,11)" fg:x="17511" fg:w="6"/><text x="30.2479%" y="367.50"></text></g><g><title>tick_nohz_handler (6 samples, 0.01%)</title><rect x="29.9979%" y="341" width="0.0103%" height="15" fill="rgb(223,59,9)" fg:x="17511" fg:w="6"/><text x="30.2479%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (9 samples, 0.02%)</title><rect x="29.9945%" y="421" width="0.0154%" height="15" fill="rgb(233,93,31)" fg:x="17509" fg:w="9"/><text x="30.2445%" y="431.50"></text></g><g><title>sysvec_apic_timer_interrupt (9 samples, 0.02%)</title><rect x="29.9945%" y="405" width="0.0154%" height="15" fill="rgb(239,81,33)" fg:x="17509" fg:w="9"/><text x="30.2445%" y="415.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (784 samples, 1.34%)</title><rect x="29.1037%" y="437" width="1.3431%" height="15" fill="rgb(213,120,34)" fg:x="16989" fg:w="784"/><text x="29.3537%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (255 samples, 0.44%)</title><rect x="30.0099%" y="421" width="0.4368%" height="15" fill="rgb(243,49,53)" fg:x="17518" fg:w="255"/><text x="30.2599%" y="431.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (8 samples, 0.01%)</title><rect x="30.4468%" y="437" width="0.0137%" height="15" fill="rgb(247,216,33)" fg:x="17773" fg:w="8"/><text x="30.6968%" y="447.50"></text></g><g><title>rayon::slice::sort::recurse (8 samples, 0.01%)</title><rect x="30.4468%" y="421" width="0.0137%" height="15" fill="rgb(226,26,14)" fg:x="17773" fg:w="8"/><text x="30.6968%" y="431.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (8 samples, 0.01%)</title><rect x="30.4639%" y="437" width="0.0137%" height="15" fill="rgb(215,49,53)" fg:x="17783" fg:w="8"/><text x="30.7139%" y="447.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (9 samples, 0.02%)</title><rect x="30.4930%" y="437" width="0.0154%" height="15" fill="rgb(245,162,40)" fg:x="17800" fg:w="9"/><text x="30.7430%" y="447.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (25 samples, 0.04%)</title><rect x="30.5153%" y="437" width="0.0428%" height="15" fill="rgb(229,68,17)" fg:x="17813" fg:w="25"/><text x="30.7653%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (11 samples, 0.02%)</title><rect x="30.5393%" y="421" width="0.0188%" height="15" fill="rgb(213,182,10)" fg:x="17827" fg:w="11"/><text x="30.7893%" y="431.50"></text></g><g><title>core::ptr::read (11 samples, 0.02%)</title><rect x="30.5393%" y="405" width="0.0188%" height="15" fill="rgb(245,125,30)" fg:x="17827" fg:w="11"/><text x="30.7893%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="30.5393%" y="389" width="0.0188%" height="15" fill="rgb(232,202,2)" fg:x="17827" fg:w="11"/><text x="30.7893%" y="399.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (16 samples, 0.03%)</title><rect x="30.5667%" y="437" width="0.0274%" height="15" fill="rgb(237,140,51)" fg:x="17843" fg:w="16"/><text x="30.8167%" y="447.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (7 samples, 0.01%)</title><rect x="30.6010%" y="437" width="0.0120%" height="15" fill="rgb(236,157,25)" fg:x="17863" fg:w="7"/><text x="30.8510%" y="447.50"></text></g><g><title>event_listener::RegisterResult&lt;T&gt;::notified (6 samples, 0.01%)</title><rect x="30.6129%" y="437" width="0.0103%" height="15" fill="rgb(219,209,0)" fg:x="17870" fg:w="6"/><text x="30.8629%" y="447.50"></text></g><g><title>event_listener::TaskRef::into_task (13 samples, 0.02%)</title><rect x="30.6249%" y="437" width="0.0223%" height="15" fill="rgb(240,116,54)" fg:x="17877" fg:w="13"/><text x="30.8749%" y="447.50"></text></g><g><title>event_listener::sync::cell::UnsafeCell&lt;T&gt;::new (7 samples, 0.01%)</title><rect x="30.6643%" y="437" width="0.0120%" height="15" fill="rgb(216,10,36)" fg:x="17900" fg:w="7"/><text x="30.9143%" y="447.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::insert::{{closure}} (14 samples, 0.02%)</title><rect x="30.6763%" y="437" width="0.0240%" height="15" fill="rgb(222,72,44)" fg:x="17907" fg:w="14"/><text x="30.9263%" y="447.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::remove::{{closure}} (12 samples, 0.02%)</title><rect x="30.7089%" y="437" width="0.0206%" height="15" fill="rgb(232,159,9)" fg:x="17926" fg:w="12"/><text x="30.9589%" y="447.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner (17 samples, 0.03%)</title><rect x="30.7294%" y="437" width="0.0291%" height="15" fill="rgb(210,39,32)" fg:x="17938" fg:w="17"/><text x="30.9794%" y="447.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (17 samples, 0.03%)</title><rect x="30.7603%" y="437" width="0.0291%" height="15" fill="rgb(216,194,45)" fg:x="17956" fg:w="17"/><text x="31.0103%" y="447.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (13 samples, 0.02%)</title><rect x="30.7945%" y="437" width="0.0223%" height="15" fill="rgb(218,18,35)" fg:x="17976" fg:w="13"/><text x="31.0445%" y="447.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::fire_send (12 samples, 0.02%)</title><rect x="30.8185%" y="437" width="0.0206%" height="15" fill="rgb(207,83,51)" fg:x="17990" fg:w="12"/><text x="31.0685%" y="447.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (11 samples, 0.02%)</title><rect x="30.8425%" y="437" width="0.0188%" height="15" fill="rgb(225,63,43)" fg:x="18004" fg:w="11"/><text x="31.0925%" y="447.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (20 samples, 0.03%)</title><rect x="30.8682%" y="437" width="0.0343%" height="15" fill="rgb(207,57,36)" fg:x="18019" fg:w="20"/><text x="31.1182%" y="447.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (6 samples, 0.01%)</title><rect x="30.9162%" y="437" width="0.0103%" height="15" fill="rgb(216,99,33)" fg:x="18047" fg:w="6"/><text x="31.1662%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;flume::Hook&lt;(sqlx_sqlite::connection::worker::Command,tracing::span::Span),dyn flume::signal::Signal&gt;&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="30.9162%" y="421" width="0.0103%" height="15" fill="rgb(225,42,16)" fg:x="18047" fg:w="6"/><text x="31.1662%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="30.9162%" y="405" width="0.0103%" height="15" fill="rgb(220,201,45)" fg:x="18047" fg:w="6"/><text x="31.1662%" y="415.50"></text></g><g><title>flume::async::&lt;impl flume::Sender&lt;T&gt;&gt;::send_async (17 samples, 0.03%)</title><rect x="30.9264%" y="437" width="0.0291%" height="15" fill="rgb(225,33,4)" fg:x="18053" fg:w="17"/><text x="31.1764%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="30.9419%" y="421" width="0.0137%" height="15" fill="rgb(224,33,50)" fg:x="18062" fg:w="8"/><text x="31.1919%" y="431.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (7 samples, 0.01%)</title><rect x="30.9556%" y="437" width="0.0120%" height="15" fill="rgb(246,198,51)" fg:x="18070" fg:w="7"/><text x="31.2056%" y="447.50"></text></g><g><title>core::hint::spin_loop (6 samples, 0.01%)</title><rect x="30.9727%" y="357" width="0.0103%" height="15" fill="rgb(205,22,4)" fg:x="18080" fg:w="6"/><text x="31.2227%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (6 samples, 0.01%)</title><rect x="30.9727%" y="341" width="0.0103%" height="15" fill="rgb(206,3,8)" fg:x="18080" fg:w="6"/><text x="31.2227%" y="351.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::{{closure}} (11 samples, 0.02%)</title><rect x="30.9676%" y="437" width="0.0188%" height="15" fill="rgb(251,23,15)" fg:x="18077" fg:w="11"/><text x="31.2176%" y="447.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.02%)</title><rect x="30.9710%" y="421" width="0.0154%" height="15" fill="rgb(252,88,28)" fg:x="18079" fg:w="9"/><text x="31.2210%" y="431.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (9 samples, 0.02%)</title><rect x="30.9710%" y="405" width="0.0154%" height="15" fill="rgb(212,127,14)" fg:x="18079" fg:w="9"/><text x="31.2210%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (8 samples, 0.01%)</title><rect x="30.9727%" y="389" width="0.0137%" height="15" fill="rgb(247,145,37)" fg:x="18080" fg:w="8"/><text x="31.2227%" y="399.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (8 samples, 0.01%)</title><rect x="30.9727%" y="373" width="0.0137%" height="15" fill="rgb(209,117,53)" fg:x="18080" fg:w="8"/><text x="31.2227%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="30.9915%" y="421" width="0.0154%" height="15" fill="rgb(212,90,42)" fg:x="18091" fg:w="9"/><text x="31.2415%" y="431.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (13 samples, 0.02%)</title><rect x="30.9864%" y="437" width="0.0223%" height="15" fill="rgb(218,164,37)" fg:x="18088" fg:w="13"/><text x="31.2364%" y="447.50"></text></g><g><title>flume::wait_lock (7 samples, 0.01%)</title><rect x="31.0087%" y="437" width="0.0120%" height="15" fill="rgb(246,65,34)" fg:x="18101" fg:w="7"/><text x="31.2587%" y="447.50"></text></g><g><title>futures_channel::lock::Lock&lt;T&gt;::new (15 samples, 0.03%)</title><rect x="31.0224%" y="437" width="0.0257%" height="15" fill="rgb(231,100,33)" fg:x="18109" fg:w="15"/><text x="31.2724%" y="447.50"></text></g><g><title>futures_channel::lock::Lock&lt;T&gt;::try_lock (11 samples, 0.02%)</title><rect x="31.0481%" y="437" width="0.0188%" height="15" fill="rgb(228,126,14)" fg:x="18124" fg:w="11"/><text x="31.2981%" y="447.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::drop_rx (15 samples, 0.03%)</title><rect x="31.0669%" y="437" width="0.0257%" height="15" fill="rgb(215,173,21)" fg:x="18135" fg:w="15"/><text x="31.3169%" y="447.50"></text></g><g><title>&lt;futures_channel::lock::TryLock&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="31.1217%" y="421" width="0.0120%" height="15" fill="rgb(210,6,40)" fg:x="18167" fg:w="7"/><text x="31.3717%" y="431.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::recv (21 samples, 0.04%)</title><rect x="31.0995%" y="437" width="0.0360%" height="15" fill="rgb(212,48,18)" fg:x="18154" fg:w="21"/><text x="31.3495%" y="447.50"></text></g><g><title>futures_util::future::future::FutureExt::fuse (11 samples, 0.02%)</title><rect x="31.1389%" y="437" width="0.0188%" height="15" fill="rgb(230,214,11)" fg:x="18177" fg:w="11"/><text x="31.3889%" y="447.50"></text></g><g><title>futures_util::future::future::fuse::Fuse&lt;Fut&gt;::new (7 samples, 0.01%)</title><rect x="31.1457%" y="421" width="0.0120%" height="15" fill="rgb(254,105,39)" fg:x="18181" fg:w="7"/><text x="31.3957%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="31.1457%" y="405" width="0.0120%" height="15" fill="rgb(245,158,5)" fg:x="18181" fg:w="7"/><text x="31.3957%" y="415.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (8 samples, 0.01%)</title><rect x="31.1766%" y="437" width="0.0137%" height="15" fill="rgb(249,208,11)" fg:x="18199" fg:w="8"/><text x="31.4266%" y="447.50"></text></g><g><title>futures_util::future::try_future::MapOk&lt;Fut,F&gt;::new (7 samples, 0.01%)</title><rect x="31.1971%" y="437" width="0.0120%" height="15" fill="rgb(210,39,28)" fg:x="18211" fg:w="7"/><text x="31.4471%" y="447.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (10 samples, 0.02%)</title><rect x="31.2485%" y="437" width="0.0171%" height="15" fill="rgb(211,56,53)" fg:x="18241" fg:w="10"/><text x="31.4985%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (6 samples, 0.01%)</title><rect x="31.2793%" y="437" width="0.0103%" height="15" fill="rgb(226,201,30)" fg:x="18259" fg:w="6"/><text x="31.5293%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.01%)</title><rect x="31.3085%" y="437" width="0.0103%" height="15" fill="rgb(239,101,34)" fg:x="18276" fg:w="6"/><text x="31.5585%" y="447.50"></text></g><g><title>oorandom::Rand64::rand_range (25 samples, 0.04%)</title><rect x="31.3307%" y="437" width="0.0428%" height="15" fill="rgb(226,209,5)" fg:x="18289" fg:w="25"/><text x="31.5807%" y="447.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (8 samples, 0.01%)</title><rect x="31.4130%" y="421" width="0.0137%" height="15" fill="rgb(250,105,47)" fg:x="18337" fg:w="8"/><text x="31.6630%" y="431.50"></text></g><g><title>oorandom::Rand64::rand_u64 (32 samples, 0.05%)</title><rect x="31.3736%" y="437" width="0.0548%" height="15" fill="rgb(230,72,3)" fg:x="18314" fg:w="32"/><text x="31.6236%" y="447.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow::{{closure}} (7 samples, 0.01%)</title><rect x="31.4301%" y="437" width="0.0120%" height="15" fill="rgb(232,218,39)" fg:x="18347" fg:w="7"/><text x="31.6801%" y="447.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (6 samples, 0.01%)</title><rect x="31.4438%" y="437" width="0.0103%" height="15" fill="rgb(248,166,6)" fg:x="18355" fg:w="6"/><text x="31.6938%" y="447.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (17 samples, 0.03%)</title><rect x="31.4541%" y="437" width="0.0291%" height="15" fill="rgb(247,89,20)" fg:x="18361" fg:w="17"/><text x="31.7041%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_store (9 samples, 0.02%)</title><rect x="31.4678%" y="421" width="0.0154%" height="15" fill="rgb(248,130,54)" fg:x="18369" fg:w="9"/><text x="31.7178%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (7 samples, 0.01%)</title><rect x="31.4832%" y="437" width="0.0120%" height="15" fill="rgb(234,196,4)" fg:x="18378" fg:w="7"/><text x="31.7332%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (6 samples, 0.01%)</title><rect x="31.4849%" y="421" width="0.0103%" height="15" fill="rgb(250,143,31)" fg:x="18379" fg:w="6"/><text x="31.7349%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (14 samples, 0.02%)</title><rect x="31.4969%" y="437" width="0.0240%" height="15" fill="rgb(211,110,34)" fg:x="18386" fg:w="14"/><text x="31.7469%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="31.5106%" y="421" width="0.0103%" height="15" fill="rgb(215,124,48)" fg:x="18394" fg:w="6"/><text x="31.7606%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (31 samples, 0.05%)</title><rect x="31.5260%" y="437" width="0.0531%" height="15" fill="rgb(216,46,13)" fg:x="18403" fg:w="31"/><text x="31.7760%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (37 samples, 0.06%)</title><rect x="31.5877%" y="437" width="0.0634%" height="15" fill="rgb(205,184,25)" fg:x="18439" fg:w="37"/><text x="31.8377%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_store (7 samples, 0.01%)</title><rect x="31.6391%" y="421" width="0.0120%" height="15" fill="rgb(228,1,10)" fg:x="18469" fg:w="7"/><text x="31.8891%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (25 samples, 0.04%)</title><rect x="31.6545%" y="437" width="0.0428%" height="15" fill="rgb(213,116,27)" fg:x="18478" fg:w="25"/><text x="31.9045%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.02%)</title><rect x="31.7659%" y="405" width="0.0240%" height="15" fill="rgb(241,95,50)" fg:x="18543" fg:w="14"/><text x="32.0159%" y="415.50"></text></g><g><title>pick_next_task_fair (37 samples, 0.06%)</title><rect x="32.0211%" y="245" width="0.0634%" height="15" fill="rgb(238,48,32)" fg:x="18692" fg:w="37"/><text x="32.2711%" y="255.50"></text></g><g><title>sched_balance_newidle (28 samples, 0.05%)</title><rect x="32.0365%" y="229" width="0.0480%" height="15" fill="rgb(235,113,49)" fg:x="18701" fg:w="28"/><text x="32.2865%" y="239.50"></text></g><g><title>__pick_next_task (68 samples, 0.12%)</title><rect x="31.9971%" y="261" width="0.1165%" height="15" fill="rgb(205,127,43)" fg:x="18678" fg:w="68"/><text x="32.2471%" y="271.50"></text></g><g><title>put_prev_task_fair (12 samples, 0.02%)</title><rect x="32.0931%" y="245" width="0.0206%" height="15" fill="rgb(250,162,2)" fg:x="18734" fg:w="12"/><text x="32.3431%" y="255.50"></text></g><g><title>put_prev_entity (9 samples, 0.02%)</title><rect x="32.0982%" y="229" width="0.0154%" height="15" fill="rgb(220,13,41)" fg:x="18737" fg:w="9"/><text x="32.3482%" y="239.50"></text></g><g><title>__perf_event_task_sched_in (37 samples, 0.06%)</title><rect x="32.1821%" y="245" width="0.0634%" height="15" fill="rgb(249,221,25)" fg:x="18786" fg:w="37"/><text x="32.4321%" y="255.50"></text></g><g><title>perf_ctx_unlock (28 samples, 0.05%)</title><rect x="32.1976%" y="229" width="0.0480%" height="15" fill="rgb(215,208,19)" fg:x="18795" fg:w="28"/><text x="32.4476%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (83 samples, 0.14%)</title><rect x="32.1136%" y="261" width="0.1422%" height="15" fill="rgb(236,175,2)" fg:x="18746" fg:w="83"/><text x="32.3636%" y="271.50"></text></g><g><title>_raw_spin_lock (15 samples, 0.03%)</title><rect x="32.2952%" y="213" width="0.0257%" height="15" fill="rgb(241,52,2)" fg:x="18852" fg:w="15"/><text x="32.5452%" y="223.50"></text></g><g><title>prepare_task_switch (70 samples, 0.12%)</title><rect x="32.2592%" y="261" width="0.1199%" height="15" fill="rgb(248,140,14)" fg:x="18831" fg:w="70"/><text x="32.5092%" y="271.50"></text></g><g><title>__perf_event_task_sched_out (64 samples, 0.11%)</title><rect x="32.2695%" y="245" width="0.1096%" height="15" fill="rgb(253,22,42)" fg:x="18837" fg:w="64"/><text x="32.5195%" y="255.50"></text></g><g><title>perf_event_context_sched_out (56 samples, 0.10%)</title><rect x="32.2832%" y="229" width="0.0959%" height="15" fill="rgb(234,61,47)" fg:x="18845" fg:w="56"/><text x="32.5332%" y="239.50"></text></g><g><title>perf_ctx_disable (34 samples, 0.06%)</title><rect x="32.3209%" y="213" width="0.0582%" height="15" fill="rgb(208,226,15)" fg:x="18867" fg:w="34"/><text x="32.5709%" y="223.50"></text></g><g><title>record_times (19 samples, 0.03%)</title><rect x="32.4083%" y="245" width="0.0325%" height="15" fill="rgb(217,221,4)" fg:x="18918" fg:w="19"/><text x="32.6583%" y="255.50"></text></g><g><title>psi_account_irqtime (40 samples, 0.07%)</title><rect x="32.3791%" y="261" width="0.0685%" height="15" fill="rgb(212,174,34)" fg:x="18901" fg:w="40"/><text x="32.6291%" y="271.50"></text></g><g><title>psi_group_change (23 samples, 0.04%)</title><rect x="32.4631%" y="245" width="0.0394%" height="15" fill="rgb(253,83,4)" fg:x="18950" fg:w="23"/><text x="32.7131%" y="255.50"></text></g><g><title>psi_task_switch (39 samples, 0.07%)</title><rect x="32.4477%" y="261" width="0.0668%" height="15" fill="rgb(250,195,49)" fg:x="18941" fg:w="39"/><text x="32.6977%" y="271.50"></text></g><g><title>sched_clock_cpu (7 samples, 0.01%)</title><rect x="32.5025%" y="245" width="0.0120%" height="15" fill="rgb(241,192,25)" fg:x="18973" fg:w="7"/><text x="32.7525%" y="255.50"></text></g><g><title>sched_clock (7 samples, 0.01%)</title><rect x="32.5025%" y="229" width="0.0120%" height="15" fill="rgb(208,124,10)" fg:x="18973" fg:w="7"/><text x="32.7525%" y="239.50"></text></g><g><title>native_sched_clock (7 samples, 0.01%)</title><rect x="32.5025%" y="213" width="0.0120%" height="15" fill="rgb(222,33,0)" fg:x="18973" fg:w="7"/><text x="32.7525%" y="223.50"></text></g><g><title>dequeue_task (7 samples, 0.01%)</title><rect x="32.5282%" y="245" width="0.0120%" height="15" fill="rgb(234,209,28)" fg:x="18988" fg:w="7"/><text x="32.7782%" y="255.50"></text></g><g><title>__calc_delta.constprop.0 (10 samples, 0.02%)</title><rect x="32.7697%" y="181" width="0.0171%" height="15" fill="rgb(224,11,23)" fg:x="19129" fg:w="10"/><text x="33.0197%" y="191.50"></text></g><g><title>cpuacct_charge (39 samples, 0.07%)</title><rect x="32.7937%" y="181" width="0.0668%" height="15" fill="rgb(232,99,1)" fg:x="19143" fg:w="39"/><text x="33.0437%" y="191.50"></text></g><g><title>update_curr_se (14 samples, 0.02%)</title><rect x="32.8639%" y="181" width="0.0240%" height="15" fill="rgb(237,95,45)" fg:x="19184" fg:w="14"/><text x="33.1139%" y="191.50"></text></g><g><title>update_curr (122 samples, 0.21%)</title><rect x="32.6961%" y="197" width="0.2090%" height="15" fill="rgb(208,109,11)" fg:x="19086" fg:w="122"/><text x="32.9461%" y="207.50"></text></g><g><title>update_min_vruntime (10 samples, 0.02%)</title><rect x="32.8879%" y="181" width="0.0171%" height="15" fill="rgb(216,190,48)" fg:x="19198" fg:w="10"/><text x="33.1379%" y="191.50"></text></g><g><title>__calc_delta.constprop.0 (8 samples, 0.01%)</title><rect x="32.9290%" y="181" width="0.0137%" height="15" fill="rgb(251,171,36)" fg:x="19222" fg:w="8"/><text x="33.1790%" y="191.50"></text></g><g><title>update_entity_lag (40 samples, 0.07%)</title><rect x="32.9051%" y="197" width="0.0685%" height="15" fill="rgb(230,62,22)" fg:x="19208" fg:w="40"/><text x="33.1551%" y="207.50"></text></g><g><title>avg_vruntime (18 samples, 0.03%)</title><rect x="32.9427%" y="181" width="0.0308%" height="15" fill="rgb(225,114,35)" fg:x="19230" fg:w="18"/><text x="33.1927%" y="191.50"></text></g><g><title>__update_load_avg_cfs_rq (6 samples, 0.01%)</title><rect x="32.9993%" y="181" width="0.0103%" height="15" fill="rgb(215,118,42)" fg:x="19263" fg:w="6"/><text x="33.2493%" y="191.50"></text></g><g><title>__update_load_avg_se (14 samples, 0.02%)</title><rect x="33.0096%" y="181" width="0.0240%" height="15" fill="rgb(243,119,21)" fg:x="19269" fg:w="14"/><text x="33.2596%" y="191.50"></text></g><g><title>update_load_avg (39 samples, 0.07%)</title><rect x="32.9736%" y="197" width="0.0668%" height="15" fill="rgb(252,177,53)" fg:x="19248" fg:w="39"/><text x="33.2236%" y="207.50"></text></g><g><title>update_min_vruntime (6 samples, 0.01%)</title><rect x="33.0404%" y="197" width="0.0103%" height="15" fill="rgb(237,209,29)" fg:x="19287" fg:w="6"/><text x="33.2904%" y="207.50"></text></g><g><title>dequeue_entity (254 samples, 0.44%)</title><rect x="32.6293%" y="213" width="0.4351%" height="15" fill="rgb(212,65,23)" fg:x="19047" fg:w="254"/><text x="32.8793%" y="223.50"></text></g><g><title>vruntime_eligible (8 samples, 0.01%)</title><rect x="33.0507%" y="197" width="0.0137%" height="15" fill="rgb(230,222,46)" fg:x="19293" fg:w="8"/><text x="33.3007%" y="207.50"></text></g><g><title>__raw_spin_lock_irqsave (12 samples, 0.02%)</title><rect x="33.0884%" y="181" width="0.0206%" height="15" fill="rgb(215,135,32)" fg:x="19315" fg:w="12"/><text x="33.3384%" y="191.50"></text></g><g><title>ktime_get (14 samples, 0.02%)</title><rect x="33.1123%" y="181" width="0.0240%" height="15" fill="rgb(246,101,22)" fg:x="19329" fg:w="14"/><text x="33.3623%" y="191.50"></text></g><g><title>read_tsc (11 samples, 0.02%)</title><rect x="33.1175%" y="165" width="0.0188%" height="15" fill="rgb(206,107,13)" fg:x="19332" fg:w="11"/><text x="33.3675%" y="175.50"></text></g><g><title>hrtimer_start_range_ns (65 samples, 0.11%)</title><rect x="33.0729%" y="197" width="0.1114%" height="15" fill="rgb(250,100,44)" fg:x="19306" fg:w="65"/><text x="33.3229%" y="207.50"></text></g><g><title>timerqueue_add (24 samples, 0.04%)</title><rect x="33.1432%" y="181" width="0.0411%" height="15" fill="rgb(231,147,38)" fg:x="19347" fg:w="24"/><text x="33.3932%" y="191.50"></text></g><g><title>__remove_hrtimer (17 samples, 0.03%)</title><rect x="33.2049%" y="181" width="0.0291%" height="15" fill="rgb(229,8,40)" fg:x="19383" fg:w="17"/><text x="33.4549%" y="191.50"></text></g><g><title>timerqueue_del (9 samples, 0.02%)</title><rect x="33.2186%" y="165" width="0.0154%" height="15" fill="rgb(221,135,30)" fg:x="19391" fg:w="9"/><text x="33.4686%" y="175.50"></text></g><g><title>rb_erase (8 samples, 0.01%)</title><rect x="33.2203%" y="149" width="0.0137%" height="15" fill="rgb(249,193,18)" fg:x="19392" fg:w="8"/><text x="33.4703%" y="159.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (30 samples, 0.05%)</title><rect x="33.1860%" y="197" width="0.0514%" height="15" fill="rgb(209,133,39)" fg:x="19372" fg:w="30"/><text x="33.4360%" y="207.50"></text></g><g><title>dequeue_entities (410 samples, 0.70%)</title><rect x="32.5436%" y="229" width="0.7024%" height="15" fill="rgb(232,100,14)" fg:x="18997" fg:w="410"/><text x="32.7936%" y="239.50"></text></g><g><title>dl_server_stop (106 samples, 0.18%)</title><rect x="33.0644%" y="213" width="0.1816%" height="15" fill="rgb(224,185,1)" fg:x="19301" fg:w="106"/><text x="33.3144%" y="223.50"></text></g><g><title>try_to_block_task.isra.0 (426 samples, 0.73%)</title><rect x="32.5230%" y="261" width="0.7298%" height="15" fill="rgb(223,139,8)" fg:x="18985" fg:w="426"/><text x="32.7730%" y="271.50"></text></g><g><title>dequeue_task_fair (416 samples, 0.71%)</title><rect x="32.5402%" y="245" width="0.7126%" height="15" fill="rgb(232,213,38)" fg:x="18995" fg:w="416"/><text x="32.7902%" y="255.50"></text></g><g><title>update_rq_clock (14 samples, 0.02%)</title><rect x="33.2528%" y="261" width="0.0240%" height="15" fill="rgb(207,94,22)" fg:x="19411" fg:w="14"/><text x="33.5028%" y="271.50"></text></g><g><title>sched_clock_cpu (13 samples, 0.02%)</title><rect x="33.2545%" y="245" width="0.0223%" height="15" fill="rgb(219,183,54)" fg:x="19412" fg:w="13"/><text x="33.5045%" y="255.50"></text></g><g><title>sched_clock (13 samples, 0.02%)</title><rect x="33.2545%" y="229" width="0.0223%" height="15" fill="rgb(216,185,54)" fg:x="19412" fg:w="13"/><text x="33.5045%" y="239.50"></text></g><g><title>native_sched_clock (13 samples, 0.02%)</title><rect x="33.2545%" y="213" width="0.0223%" height="15" fill="rgb(254,217,39)" fg:x="19412" fg:w="13"/><text x="33.5045%" y="223.50"></text></g><g><title>futex_do_wait (826 samples, 1.42%)</title><rect x="31.8926%" y="309" width="1.4150%" height="15" fill="rgb(240,178,23)" fg:x="18617" fg:w="826"/><text x="32.1426%" y="319.50"></text></g><g><title>schedule (815 samples, 1.40%)</title><rect x="31.9115%" y="293" width="1.3962%" height="15" fill="rgb(218,11,47)" fg:x="18628" fg:w="815"/><text x="32.1615%" y="303.50"></text></g><g><title>__schedule (789 samples, 1.35%)</title><rect x="31.9560%" y="277" width="1.3516%" height="15" fill="rgb(218,51,51)" fg:x="18654" fg:w="789"/><text x="32.2060%" y="287.50"></text></g><g><title>update_rq_clock_task (18 samples, 0.03%)</title><rect x="33.2768%" y="261" width="0.0308%" height="15" fill="rgb(238,126,27)" fg:x="19425" fg:w="18"/><text x="33.5268%" y="271.50"></text></g><g><title>update_irq_load_avg (10 samples, 0.02%)</title><rect x="33.2905%" y="245" width="0.0171%" height="15" fill="rgb(249,202,22)" fg:x="19433" fg:w="10"/><text x="33.5405%" y="255.50"></text></g><g><title>futex_unqueue (18 samples, 0.03%)</title><rect x="33.3076%" y="309" width="0.0308%" height="15" fill="rgb(254,195,49)" fg:x="19443" fg:w="18"/><text x="33.5576%" y="319.50"></text></g><g><title>__futex_hash.constprop.0 (9 samples, 0.02%)</title><rect x="33.3796%" y="293" width="0.0154%" height="15" fill="rgb(208,123,14)" fg:x="19485" fg:w="9"/><text x="33.6296%" y="303.50"></text></g><g><title>futex_q_lock (43 samples, 0.07%)</title><rect x="33.4070%" y="293" width="0.0737%" height="15" fill="rgb(224,200,8)" fg:x="19501" fg:w="43"/><text x="33.6570%" y="303.50"></text></g><g><title>__futex_wait (967 samples, 1.66%)</title><rect x="31.8447%" y="325" width="1.6566%" height="15" fill="rgb(217,61,36)" fg:x="18589" fg:w="967"/><text x="32.0947%" y="335.50"></text></g><g><title>futex_wait_setup (95 samples, 0.16%)</title><rect x="33.3385%" y="309" width="0.1627%" height="15" fill="rgb(206,35,45)" fg:x="19461" fg:w="95"/><text x="33.5885%" y="319.50"></text></g><g><title>get_futex_key (12 samples, 0.02%)</title><rect x="33.4807%" y="293" width="0.0206%" height="15" fill="rgb(217,65,33)" fg:x="19544" fg:w="12"/><text x="33.7307%" y="303.50"></text></g><g><title>__x64_sys_futex (992 samples, 1.70%)</title><rect x="31.8035%" y="373" width="1.6994%" height="15" fill="rgb(222,158,48)" fg:x="18565" fg:w="992"/><text x="32.0535%" y="383.50"></text></g><g><title>do_futex (989 samples, 1.69%)</title><rect x="31.8087%" y="357" width="1.6942%" height="15" fill="rgb(254,2,54)" fg:x="18568" fg:w="989"/><text x="32.0587%" y="367.50"></text></g><g><title>futex_wait (985 samples, 1.69%)</title><rect x="31.8155%" y="341" width="1.6874%" height="15" fill="rgb(250,143,38)" fg:x="18572" fg:w="985"/><text x="32.0655%" y="351.50"></text></g><g><title>arch_exit_to_user_mode_prepare.isra.0 (35 samples, 0.06%)</title><rect x="33.5029%" y="373" width="0.0600%" height="15" fill="rgb(248,25,0)" fg:x="19557" fg:w="35"/><text x="33.7529%" y="383.50"></text></g><g><title>switch_fpu_return (20 samples, 0.03%)</title><rect x="33.5286%" y="357" width="0.0343%" height="15" fill="rgb(206,152,27)" fg:x="19572" fg:w="20"/><text x="33.7786%" y="367.50"></text></g><g><title>__put_user_8 (13 samples, 0.02%)</title><rect x="33.6228%" y="325" width="0.0223%" height="15" fill="rgb(240,77,30)" fg:x="19627" fg:w="13"/><text x="33.8728%" y="335.50"></text></g><g><title>rseq_ip_fixup (42 samples, 0.07%)</title><rect x="33.6074%" y="341" width="0.0719%" height="15" fill="rgb(231,5,3)" fg:x="19618" fg:w="42"/><text x="33.8574%" y="351.50"></text></g><g><title>rseq_get_rseq_cs.isra.0 (20 samples, 0.03%)</title><rect x="33.6451%" y="325" width="0.0343%" height="15" fill="rgb(207,226,32)" fg:x="19640" fg:w="20"/><text x="33.8951%" y="335.50"></text></g><g><title>__get_user_8 (14 samples, 0.02%)</title><rect x="33.6554%" y="309" width="0.0240%" height="15" fill="rgb(222,207,47)" fg:x="19646" fg:w="14"/><text x="33.9054%" y="319.50"></text></g><g><title>__rseq_handle_notify_resume (61 samples, 0.10%)</title><rect x="33.6074%" y="357" width="0.1045%" height="15" fill="rgb(229,115,45)" fg:x="19618" fg:w="61"/><text x="33.8574%" y="367.50"></text></g><g><title>rseq_update_cpu_node_id (19 samples, 0.03%)</title><rect x="33.6794%" y="341" width="0.0325%" height="15" fill="rgb(224,191,6)" fg:x="19660" fg:w="19"/><text x="33.9294%" y="351.50"></text></g><g><title>exit_to_user_mode_loop (92 samples, 0.16%)</title><rect x="33.5629%" y="373" width="0.1576%" height="15" fill="rgb(230,227,24)" fg:x="19592" fg:w="92"/><text x="33.8129%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,130 samples, 1.94%)</title><rect x="31.7898%" y="405" width="1.9358%" height="15" fill="rgb(228,80,19)" fg:x="18557" fg:w="1130"/><text x="32.0398%" y="415.50">e..</text></g><g><title>do_syscall_64 (1,129 samples, 1.93%)</title><rect x="31.7916%" y="389" width="1.9341%" height="15" fill="rgb(247,229,0)" fg:x="18558" fg:w="1129"/><text x="32.0416%" y="399.50">d..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1,186 samples, 2.03%)</title><rect x="31.7025%" y="437" width="2.0317%" height="15" fill="rgb(237,194,15)" fg:x="18506" fg:w="1186"/><text x="31.9525%" y="447.50">p..</text></g><g><title>syscall (1,181 samples, 2.02%)</title><rect x="31.7110%" y="421" width="2.0232%" height="15" fill="rgb(219,203,20)" fg:x="18511" fg:w="1181"/><text x="31.9610%" y="431.50">s..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (7 samples, 0.01%)</title><rect x="33.7376%" y="437" width="0.0120%" height="15" fill="rgb(234,128,8)" fg:x="19694" fg:w="7"/><text x="33.9876%" y="447.50"></text></g><g><title>pin_project_lite::__private::UnsafeOverwriteGuard&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="33.7496%" y="437" width="0.0154%" height="15" fill="rgb(248,202,8)" fg:x="19701" fg:w="9"/><text x="33.9996%" y="447.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (290 samples, 0.50%)</title><rect x="33.7667%" y="437" width="0.4968%" height="15" fill="rgb(206,104,37)" fg:x="19711" fg:w="290"/><text x="34.0167%" y="447.50"></text></g><g><title>rayon::slice::sort::choose_pivot (14 samples, 0.02%)</title><rect x="34.2670%" y="437" width="0.0240%" height="15" fill="rgb(223,8,27)" fg:x="20003" fg:w="14"/><text x="34.5170%" y="447.50"></text></g><g><title>core::ptr::swap (8 samples, 0.01%)</title><rect x="34.3800%" y="421" width="0.0137%" height="15" fill="rgb(216,217,28)" fg:x="20069" fg:w="8"/><text x="34.6300%" y="431.50"></text></g><g><title>core::ptr::copy (6 samples, 0.01%)</title><rect x="34.3835%" y="405" width="0.0103%" height="15" fill="rgb(249,199,1)" fg:x="20071" fg:w="6"/><text x="34.6335%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (14 samples, 0.02%)</title><rect x="34.3937%" y="421" width="0.0240%" height="15" fill="rgb(240,85,17)" fg:x="20077" fg:w="14"/><text x="34.6437%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_checked (9 samples, 0.02%)</title><rect x="34.4023%" y="405" width="0.0154%" height="15" fill="rgb(206,108,45)" fg:x="20082" fg:w="9"/><text x="34.6523%" y="415.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (78 samples, 0.13%)</title><rect x="34.2910%" y="437" width="0.1336%" height="15" fill="rgb(245,210,41)" fg:x="20017" fg:w="78"/><text x="34.5410%" y="447.50"></text></g><g><title>rayon::slice::sort::insert_tail (152 samples, 0.26%)</title><rect x="34.4280%" y="437" width="0.2604%" height="15" fill="rgb(206,13,37)" fg:x="20097" fg:w="152"/><text x="34.6780%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.03%)</title><rect x="34.6593%" y="421" width="0.0291%" height="15" fill="rgb(250,61,18)" fg:x="20232" fg:w="17"/><text x="34.9093%" y="431.50"></text></g><g><title>rayon::slice::sort::insertion_sort_shift_left (51 samples, 0.09%)</title><rect x="34.6884%" y="437" width="0.0874%" height="15" fill="rgb(235,172,48)" fg:x="20249" fg:w="51"/><text x="34.9384%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (14 samples, 0.02%)</title><rect x="34.7518%" y="421" width="0.0240%" height="15" fill="rgb(249,201,17)" fg:x="20286" fg:w="14"/><text x="35.0018%" y="431.50"></text></g><g><title>rayon::slice::sort::partition (61 samples, 0.10%)</title><rect x="34.7775%" y="437" width="0.1045%" height="15" fill="rgb(219,208,6)" fg:x="20301" fg:w="61"/><text x="35.0275%" y="447.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks (146 samples, 0.25%)</title><rect x="34.8820%" y="437" width="0.2501%" height="15" fill="rgb(248,31,23)" fg:x="20362" fg:w="146"/><text x="35.1320%" y="447.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks::width (48 samples, 0.08%)</title><rect x="35.1321%" y="437" width="0.0822%" height="15" fill="rgb(245,15,42)" fg:x="20508" fg:w="48"/><text x="35.3821%" y="447.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (8 samples, 0.01%)</title><rect x="35.2263%" y="421" width="0.0137%" height="15" fill="rgb(222,217,39)" fg:x="20563" fg:w="8"/><text x="35.4763%" y="431.50"></text></g><g><title>core::ptr::copy_nonoverlapping (17 samples, 0.03%)</title><rect x="35.2400%" y="421" width="0.0291%" height="15" fill="rgb(210,219,27)" fg:x="20571" fg:w="17"/><text x="35.4900%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.01%)</title><rect x="35.2691%" y="421" width="0.0103%" height="15" fill="rgb(252,166,36)" fg:x="20588" fg:w="6"/><text x="35.5191%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (55 samples, 0.09%)</title><rect x="35.2794%" y="421" width="0.0942%" height="15" fill="rgb(245,132,34)" fg:x="20594" fg:w="55"/><text x="35.5294%" y="431.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks (97 samples, 0.17%)</title><rect x="35.2143%" y="437" width="0.1662%" height="15" fill="rgb(236,54,3)" fg:x="20556" fg:w="97"/><text x="35.4643%" y="447.50"></text></g><g><title>rayon::slice::sort::recurse (52 samples, 0.09%)</title><rect x="35.3805%" y="437" width="0.0891%" height="15" fill="rgb(241,173,43)" fg:x="20653" fg:w="52"/><text x="35.6305%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7 samples, 0.01%)</title><rect x="35.4747%" y="421" width="0.0120%" height="15" fill="rgb(215,190,9)" fg:x="20708" fg:w="7"/><text x="35.7247%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.01%)</title><rect x="35.4747%" y="405" width="0.0120%" height="15" fill="rgb(242,101,16)" fg:x="20708" fg:w="7"/><text x="35.7247%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (7 samples, 0.01%)</title><rect x="35.4747%" y="389" width="0.0120%" height="15" fill="rgb(223,190,21)" fg:x="20708" fg:w="7"/><text x="35.7247%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (7 samples, 0.01%)</title><rect x="35.4747%" y="373" width="0.0120%" height="15" fill="rgb(215,228,25)" fg:x="20708" fg:w="7"/><text x="35.7247%" y="383.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (9 samples, 0.02%)</title><rect x="35.4867%" y="421" width="0.0154%" height="15" fill="rgb(225,36,22)" fg:x="20715" fg:w="9"/><text x="35.7367%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="35.5055%" y="421" width="0.0137%" height="15" fill="rgb(251,106,46)" fg:x="20726" fg:w="8"/><text x="35.7555%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (27 samples, 0.05%)</title><rect x="35.5192%" y="421" width="0.0463%" height="15" fill="rgb(208,90,1)" fg:x="20734" fg:w="27"/><text x="35.7692%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (14 samples, 0.02%)</title><rect x="35.5655%" y="421" width="0.0240%" height="15" fill="rgb(243,10,4)" fg:x="20761" fg:w="14"/><text x="35.8155%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (19 samples, 0.03%)</title><rect x="35.5980%" y="421" width="0.0325%" height="15" fill="rgb(212,137,27)" fg:x="20780" fg:w="19"/><text x="35.8480%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.01%)</title><rect x="35.6306%" y="421" width="0.0103%" height="15" fill="rgb(231,220,49)" fg:x="20799" fg:w="6"/><text x="35.8806%" y="431.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7 samples, 0.01%)</title><rect x="35.6511%" y="421" width="0.0120%" height="15" fill="rgb(237,96,20)" fg:x="20811" fg:w="7"/><text x="35.9011%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (18 samples, 0.03%)</title><rect x="35.6837%" y="405" width="0.0308%" height="15" fill="rgb(239,229,30)" fg:x="20830" fg:w="18"/><text x="35.9337%" y="415.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (89 samples, 0.15%)</title><rect x="35.7145%" y="405" width="0.1525%" height="15" fill="rgb(219,65,33)" fg:x="20848" fg:w="89"/><text x="35.9645%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 0.17%)</title><rect x="35.8687%" y="405" width="0.1713%" height="15" fill="rgb(243,134,7)" fg:x="20938" fg:w="100"/><text x="36.1187%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (70 samples, 0.12%)</title><rect x="35.9201%" y="389" width="0.1199%" height="15" fill="rgb(216,177,54)" fg:x="20968" fg:w="70"/><text x="36.1701%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.01%)</title><rect x="36.2370%" y="389" width="0.0103%" height="15" fill="rgb(211,160,20)" fg:x="21153" fg:w="6"/><text x="36.4870%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.01%)</title><rect x="36.2370%" y="373" width="0.0103%" height="15" fill="rgb(239,85,39)" fg:x="21153" fg:w="6"/><text x="36.4870%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (160 samples, 0.27%)</title><rect x="36.0400%" y="405" width="0.2741%" height="15" fill="rgb(232,125,22)" fg:x="21038" fg:w="160"/><text x="36.2900%" y="415.50"></text></g><g><title>criterion::stats::dot::{{closure}} (39 samples, 0.07%)</title><rect x="36.2473%" y="389" width="0.0668%" height="15" fill="rgb(244,57,34)" fg:x="21159" fg:w="39"/><text x="36.4973%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="36.3141%" y="405" width="0.0154%" height="15" fill="rgb(214,203,32)" fg:x="21198" fg:w="9"/><text x="36.5641%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (69 samples, 0.12%)</title><rect x="36.3330%" y="405" width="0.1182%" height="15" fill="rgb(207,58,43)" fg:x="21209" fg:w="69"/><text x="36.5830%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.01%)</title><rect x="36.4409%" y="389" width="0.0103%" height="15" fill="rgb(215,193,15)" fg:x="21272" fg:w="6"/><text x="36.6909%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (20 samples, 0.03%)</title><rect x="36.4512%" y="405" width="0.0343%" height="15" fill="rgb(232,15,44)" fg:x="21278" fg:w="20"/><text x="36.7012%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.01%)</title><rect x="36.4854%" y="405" width="0.0103%" height="15" fill="rgb(212,3,48)" fg:x="21298" fg:w="6"/><text x="36.7354%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (16 samples, 0.03%)</title><rect x="36.5111%" y="405" width="0.0274%" height="15" fill="rgb(218,128,7)" fg:x="21313" fg:w="16"/><text x="36.7611%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="36.5402%" y="405" width="0.0120%" height="15" fill="rgb(226,216,39)" fg:x="21330" fg:w="7"/><text x="36.7902%" y="415.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (725 samples, 1.24%)</title><rect x="36.5522%" y="405" width="1.2420%" height="15" fill="rgb(243,47,51)" fg:x="21337" fg:w="725"/><text x="36.8022%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (512 samples, 0.88%)</title><rect x="37.7994%" y="405" width="0.8771%" height="15" fill="rgb(241,183,40)" fg:x="22065" fg:w="512"/><text x="38.0494%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Div&gt;::div (6 samples, 0.01%)</title><rect x="38.6765%" y="405" width="0.0103%" height="15" fill="rgb(231,217,32)" fg:x="22577" fg:w="6"/><text x="38.9265%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (626 samples, 1.07%)</title><rect x="38.6867%" y="405" width="1.0724%" height="15" fill="rgb(229,61,38)" fg:x="22583" fg:w="626"/><text x="38.9367%" y="415.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (44 samples, 0.08%)</title><rect x="39.7677%" y="405" width="0.0754%" height="15" fill="rgb(225,210,5)" fg:x="23214" fg:w="44"/><text x="40.0177%" y="415.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::powi (119 samples, 0.20%)</title><rect x="39.8465%" y="405" width="0.2039%" height="15" fill="rgb(231,79,45)" fg:x="23260" fg:w="119"/><text x="40.0965%" y="415.50"></text></g><g><title>__hrtimer_run_queues (10 samples, 0.02%)</title><rect x="40.7099%" y="325" width="0.0171%" height="15" fill="rgb(224,100,7)" fg:x="23764" fg:w="10"/><text x="40.9599%" y="335.50"></text></g><g><title>tick_nohz_handler (9 samples, 0.02%)</title><rect x="40.7116%" y="309" width="0.0154%" height="15" fill="rgb(241,198,18)" fg:x="23765" fg:w="9"/><text x="40.9616%" y="319.50"></text></g><g><title>update_process_times (9 samples, 0.02%)</title><rect x="40.7116%" y="293" width="0.0154%" height="15" fill="rgb(252,97,53)" fg:x="23765" fg:w="9"/><text x="40.9616%" y="303.50"></text></g><g><title>sched_tick (8 samples, 0.01%)</title><rect x="40.7133%" y="277" width="0.0137%" height="15" fill="rgb(220,88,7)" fg:x="23766" fg:w="8"/><text x="40.9633%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (396 samples, 0.68%)</title><rect x="40.0504%" y="405" width="0.6784%" height="15" fill="rgb(213,176,14)" fg:x="23379" fg:w="396"/><text x="40.3004%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (13 samples, 0.02%)</title><rect x="40.7065%" y="389" width="0.0223%" height="15" fill="rgb(246,73,7)" fg:x="23762" fg:w="13"/><text x="40.9565%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (13 samples, 0.02%)</title><rect x="40.7065%" y="373" width="0.0223%" height="15" fill="rgb(245,64,36)" fg:x="23762" fg:w="13"/><text x="40.9565%" y="383.50"></text></g><g><title>__sysvec_apic_timer_interrupt (11 samples, 0.02%)</title><rect x="40.7099%" y="357" width="0.0188%" height="15" fill="rgb(245,80,10)" fg:x="23764" fg:w="11"/><text x="40.9599%" y="367.50"></text></g><g><title>hrtimer_interrupt (11 samples, 0.02%)</title><rect x="40.7099%" y="341" width="0.0188%" height="15" fill="rgb(232,107,50)" fg:x="23764" fg:w="11"/><text x="40.9599%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (50 samples, 0.09%)</title><rect x="40.7287%" y="405" width="0.0857%" height="15" fill="rgb(253,3,0)" fg:x="23775" fg:w="50"/><text x="40.9787%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (9 samples, 0.02%)</title><rect x="40.7990%" y="389" width="0.0154%" height="15" fill="rgb(212,99,53)" fg:x="23816" fg:w="9"/><text x="41.0490%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (9 samples, 0.02%)</title><rect x="40.7990%" y="373" width="0.0154%" height="15" fill="rgb(249,111,54)" fg:x="23816" fg:w="9"/><text x="41.0490%" y="383.50"></text></g><g><title>__sysvec_apic_timer_interrupt (9 samples, 0.02%)</title><rect x="40.7990%" y="357" width="0.0154%" height="15" fill="rgb(249,55,30)" fg:x="23816" fg:w="9"/><text x="41.0490%" y="367.50"></text></g><g><title>hrtimer_interrupt (8 samples, 0.01%)</title><rect x="40.8007%" y="341" width="0.0137%" height="15" fill="rgb(237,47,42)" fg:x="23817" fg:w="8"/><text x="41.0507%" y="351.50"></text></g><g><title>__hrtimer_run_queues (8 samples, 0.01%)</title><rect x="40.8007%" y="325" width="0.0137%" height="15" fill="rgb(211,20,18)" fg:x="23817" fg:w="8"/><text x="41.0507%" y="335.50"></text></g><g><title>tick_nohz_handler (6 samples, 0.01%)</title><rect x="40.8041%" y="309" width="0.0103%" height="15" fill="rgb(231,203,46)" fg:x="23819" fg:w="6"/><text x="41.0541%" y="319.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (14 samples, 0.02%)</title><rect x="40.8178%" y="405" width="0.0240%" height="15" fill="rgb(237,142,3)" fg:x="23827" fg:w="14"/><text x="41.0678%" y="415.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (55 samples, 0.09%)</title><rect x="40.8418%" y="405" width="0.0942%" height="15" fill="rgb(241,107,1)" fg:x="23841" fg:w="55"/><text x="41.0918%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.01%)</title><rect x="40.9429%" y="405" width="0.0103%" height="15" fill="rgb(229,83,13)" fg:x="23900" fg:w="6"/><text x="41.1929%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="40.9566%" y="405" width="0.0103%" height="15" fill="rgb(241,91,40)" fg:x="23908" fg:w="6"/><text x="41.2066%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (47 samples, 0.08%)</title><rect x="40.9789%" y="405" width="0.0805%" height="15" fill="rgb(225,3,45)" fg:x="23921" fg:w="47"/><text x="41.2289%" y="415.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (47 samples, 0.08%)</title><rect x="40.9789%" y="389" width="0.0805%" height="15" fill="rgb(244,223,14)" fg:x="23921" fg:w="47"/><text x="41.2289%" y="399.50"></text></g><g><title>cast::_64::&lt;impl cast::From&lt;f32&gt; for f64&gt;::cast (29 samples, 0.05%)</title><rect x="41.0679%" y="405" width="0.0497%" height="15" fill="rgb(224,124,37)" fg:x="23973" fg:w="29"/><text x="41.3179%" y="415.50"></text></g><g><title>core::cmp::Ord::max (7 samples, 0.01%)</title><rect x="41.1228%" y="405" width="0.0120%" height="15" fill="rgb(251,171,30)" fg:x="24005" fg:w="7"/><text x="41.3728%" y="415.50"></text></g><g><title>core::cmp::Ord::min (15 samples, 0.03%)</title><rect x="41.1348%" y="405" width="0.0257%" height="15" fill="rgb(236,46,54)" fg:x="24012" fg:w="15"/><text x="41.3848%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (496 samples, 0.85%)</title><rect x="41.1604%" y="405" width="0.8497%" height="15" fill="rgb(245,213,5)" fg:x="24027" fg:w="496"/><text x="41.4104%" y="415.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::abs (24 samples, 0.04%)</title><rect x="42.0119%" y="405" width="0.0411%" height="15" fill="rgb(230,144,27)" fg:x="24524" fg:w="24"/><text x="42.2619%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (69 samples, 0.12%)</title><rect x="42.0598%" y="405" width="0.1182%" height="15" fill="rgb(220,86,6)" fg:x="24552" fg:w="69"/><text x="42.3098%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (44 samples, 0.08%)</title><rect x="42.1780%" y="405" width="0.0754%" height="15" fill="rgb(240,20,13)" fg:x="24621" fg:w="44"/><text x="42.4280%" y="415.50"></text></g><g><title>core::ops::function::Fn::call (50 samples, 0.09%)</title><rect x="42.2740%" y="405" width="0.0857%" height="15" fill="rgb(217,89,34)" fg:x="24677" fg:w="50"/><text x="42.5240%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7 samples, 0.01%)</title><rect x="42.3733%" y="405" width="0.0120%" height="15" fill="rgb(229,13,5)" fg:x="24735" fg:w="7"/><text x="42.6233%" y="415.50"></text></g><g><title>cast::_64::&lt;impl cast::From&lt;f32&gt; for f64&gt;::cast (7 samples, 0.01%)</title><rect x="42.3733%" y="389" width="0.0120%" height="15" fill="rgb(244,67,35)" fg:x="24735" fg:w="7"/><text x="42.6233%" y="399.50"></text></g><g><title>core::ptr::swap (9 samples, 0.02%)</title><rect x="42.4042%" y="405" width="0.0154%" height="15" fill="rgb(221,40,2)" fg:x="24753" fg:w="9"/><text x="42.6542%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (15 samples, 0.03%)</title><rect x="42.4298%" y="405" width="0.0257%" height="15" fill="rgb(237,157,21)" fg:x="24768" fg:w="15"/><text x="42.6798%" y="415.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (7 samples, 0.01%)</title><rect x="42.5292%" y="373" width="0.0120%" height="15" fill="rgb(222,94,11)" fg:x="24826" fg:w="7"/><text x="42.7792%" y="383.50"></text></g><g><title>criterion::analysis::estimates::stats (45 samples, 0.08%)</title><rect x="42.4675%" y="405" width="0.0771%" height="15" fill="rgb(249,113,6)" fg:x="24790" fg:w="45"/><text x="42.7175%" y="415.50"></text></g><g><title>oorandom::Rand64::rand_u64 (45 samples, 0.08%)</title><rect x="42.4675%" y="389" width="0.0771%" height="15" fill="rgb(238,137,36)" fg:x="24790" fg:w="45"/><text x="42.7175%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (18 samples, 0.03%)</title><rect x="42.5463%" y="405" width="0.0308%" height="15" fill="rgb(210,102,26)" fg:x="24836" fg:w="18"/><text x="42.7963%" y="415.50"></text></g><g><title>criterion::stats::dot::{{closure}} (11 samples, 0.02%)</title><rect x="42.5772%" y="405" width="0.0188%" height="15" fill="rgb(218,30,30)" fg:x="24854" fg:w="11"/><text x="42.8272%" y="415.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (10 samples, 0.02%)</title><rect x="42.5977%" y="405" width="0.0171%" height="15" fill="rgb(214,67,26)" fg:x="24866" fg:w="10"/><text x="42.8477%" y="415.50"></text></g><g><title>criterion::stats::univariate::percentiles::Percentiles&lt;A&gt;::median (16 samples, 0.03%)</title><rect x="42.6234%" y="405" width="0.0274%" height="15" fill="rgb(251,9,53)" fg:x="24881" fg:w="16"/><text x="42.8734%" y="415.50"></text></g><g><title>rayon::slice::sort::insertion_sort_shift_left (16 samples, 0.03%)</title><rect x="42.6234%" y="389" width="0.0274%" height="15" fill="rgb(228,204,25)" fg:x="24881" fg:w="16"/><text x="42.8734%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (158 samples, 0.27%)</title><rect x="42.6560%" y="405" width="0.2707%" height="15" fill="rgb(207,153,8)" fg:x="24900" fg:w="158"/><text x="42.9060%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (59 samples, 0.10%)</title><rect x="42.8256%" y="389" width="0.1011%" height="15" fill="rgb(242,9,16)" fg:x="24999" fg:w="59"/><text x="43.0756%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var::{{closure}} (9 samples, 0.02%)</title><rect x="42.9284%" y="405" width="0.0154%" height="15" fill="rgb(217,211,10)" fg:x="25059" fg:w="9"/><text x="43.1784%" y="415.50"></text></g><g><title>oorandom::Rand64::rand_range (24 samples, 0.04%)</title><rect x="42.9575%" y="405" width="0.0411%" height="15" fill="rgb(219,228,52)" fg:x="25076" fg:w="24"/><text x="43.2075%" y="415.50"></text></g><g><title>oorandom::Rand64::rand_u64 (12 samples, 0.02%)</title><rect x="42.9986%" y="405" width="0.0206%" height="15" fill="rgb(231,92,29)" fg:x="25100" fg:w="12"/><text x="43.2486%" y="415.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (82 samples, 0.14%)</title><rect x="43.0226%" y="405" width="0.1405%" height="15" fill="rgb(232,8,23)" fg:x="25114" fg:w="82"/><text x="43.2726%" y="415.50"></text></g><g><title>rayon::slice::sort::choose_pivot (8 samples, 0.01%)</title><rect x="43.1631%" y="405" width="0.0137%" height="15" fill="rgb(216,211,34)" fg:x="25196" fg:w="8"/><text x="43.4131%" y="415.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (14 samples, 0.02%)</title><rect x="43.1768%" y="405" width="0.0240%" height="15" fill="rgb(236,151,0)" fg:x="25204" fg:w="14"/><text x="43.4268%" y="415.50"></text></g><g><title>rayon::slice::sort::choose_pivot (14 samples, 0.02%)</title><rect x="43.2007%" y="405" width="0.0240%" height="15" fill="rgb(209,168,3)" fg:x="25218" fg:w="14"/><text x="43.4507%" y="415.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (12 samples, 0.02%)</title><rect x="43.2042%" y="389" width="0.0206%" height="15" fill="rgb(208,129,28)" fg:x="25220" fg:w="12"/><text x="43.4542%" y="399.50"></text></g><g><title>rayon::slice::sort::insert_tail (160 samples, 0.27%)</title><rect x="43.2247%" y="405" width="0.2741%" height="15" fill="rgb(229,78,22)" fg:x="25232" fg:w="160"/><text x="43.4747%" y="415.50"></text></g><g><title>rayon::slice::sort::insertion_sort_shift_left (16 samples, 0.03%)</title><rect x="43.4988%" y="405" width="0.0274%" height="15" fill="rgb(228,187,13)" fg:x="25392" fg:w="16"/><text x="43.7488%" y="415.50"></text></g><g><title>rayon::slice::sort::partition (7 samples, 0.01%)</title><rect x="43.5297%" y="405" width="0.0120%" height="15" fill="rgb(240,119,24)" fg:x="25410" fg:w="7"/><text x="43.7797%" y="415.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks (508 samples, 0.87%)</title><rect x="43.5434%" y="405" width="0.8703%" height="15" fill="rgb(209,194,42)" fg:x="25418" fg:w="508"/><text x="43.7934%" y="415.50"></text></g><g><title>__memset_avx2_unaligned_erms (11 samples, 0.02%)</title><rect x="44.4170%" y="389" width="0.0188%" height="15" fill="rgb(247,200,46)" fg:x="25928" fg:w="11"/><text x="44.6670%" y="399.50"></text></g><g><title>core::ptr::copy_nonoverlapping (23 samples, 0.04%)</title><rect x="44.4462%" y="389" width="0.0394%" height="15" fill="rgb(218,76,16)" fg:x="25945" fg:w="23"/><text x="44.6962%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (23 samples, 0.04%)</title><rect x="44.4856%" y="389" width="0.0394%" height="15" fill="rgb(225,21,48)" fg:x="25968" fg:w="23"/><text x="44.7356%" y="399.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks (136 samples, 0.23%)</title><rect x="44.4170%" y="405" width="0.2330%" height="15" fill="rgb(239,223,50)" fg:x="25928" fg:w="136"/><text x="44.6670%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (73 samples, 0.13%)</title><rect x="44.5250%" y="389" width="0.1251%" height="15" fill="rgb(244,45,21)" fg:x="25991" fg:w="73"/><text x="44.7750%" y="399.50"></text></g><g><title>rayon::slice::sort::recurse (15 samples, 0.03%)</title><rect x="44.6500%" y="405" width="0.0257%" height="15" fill="rgb(232,33,43)" fg:x="26064" fg:w="15"/><text x="44.9000%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (28 samples, 0.05%)</title><rect x="44.6757%" y="405" width="0.0480%" height="15" fill="rgb(209,8,3)" fg:x="26079" fg:w="28"/><text x="44.9257%" y="415.50"></text></g><g><title>[unknown] (5,525 samples, 9.46%)</title><rect x="35.6666%" y="421" width="9.4648%" height="15" fill="rgb(214,25,53)" fg:x="20820" fg:w="5525"/><text x="35.9166%" y="431.50">[unknown]</text></g><g><title>std::f64::&lt;impl f64&gt;::powi (238 samples, 0.41%)</title><rect x="44.7237%" y="405" width="0.4077%" height="15" fill="rgb(254,186,54)" fg:x="26107" fg:w="238"/><text x="44.9737%" y="415.50"></text></g><g><title>core::f64::math::powi (83 samples, 0.14%)</title><rect x="44.9892%" y="389" width="0.1422%" height="15" fill="rgb(208,174,49)" fg:x="26262" fg:w="83"/><text x="45.2392%" y="399.50"></text></g><g><title>__powidf2 (411 samples, 0.70%)</title><rect x="45.1314%" y="421" width="0.7041%" height="15" fill="rgb(233,191,51)" fg:x="26345" fg:w="411"/><text x="45.3814%" y="431.50"></text></g><g><title>compiler_builtins::float::pow::__powidf2 (401 samples, 0.69%)</title><rect x="45.1485%" y="405" width="0.6869%" height="15" fill="rgb(222,134,10)" fg:x="26355" fg:w="401"/><text x="45.3985%" y="415.50"></text></g><g><title>compiler_builtins::float::pow::pow (401 samples, 0.69%)</title><rect x="45.1485%" y="389" width="0.6869%" height="15" fill="rgb(230,226,20)" fg:x="26355" fg:w="401"/><text x="45.3985%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (13 samples, 0.02%)</title><rect x="45.8492%" y="421" width="0.0223%" height="15" fill="rgb(251,111,25)" fg:x="26764" fg:w="13"/><text x="46.0992%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.02%)</title><rect x="45.8714%" y="421" width="0.0154%" height="15" fill="rgb(224,40,46)" fg:x="26777" fg:w="9"/><text x="46.1214%" y="431.50"></text></g><g><title>core::ops::function::Fn::call (29 samples, 0.05%)</title><rect x="45.8903%" y="421" width="0.0497%" height="15" fill="rgb(236,108,47)" fg:x="26788" fg:w="29"/><text x="46.1403%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (29 samples, 0.05%)</title><rect x="45.9417%" y="421" width="0.0497%" height="15" fill="rgb(234,93,0)" fg:x="26818" fg:w="29"/><text x="46.1917%" y="431.50"></text></g><g><title>cast::_64::&lt;impl cast::From&lt;f32&gt; for f64&gt;::cast (29 samples, 0.05%)</title><rect x="45.9417%" y="405" width="0.0497%" height="15" fill="rgb(224,213,32)" fg:x="26818" fg:w="29"/><text x="46.1917%" y="415.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (80 samples, 0.14%)</title><rect x="46.0188%" y="421" width="0.1370%" height="15" fill="rgb(251,11,48)" fg:x="26863" fg:w="80"/><text x="46.2688%" y="431.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev::{{closure}} (10 samples, 0.02%)</title><rect x="46.1558%" y="421" width="0.0171%" height="15" fill="rgb(236,173,5)" fg:x="26943" fg:w="10"/><text x="46.4058%" y="431.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::new::{{closure}} (6 samples, 0.01%)</title><rect x="46.1730%" y="421" width="0.0103%" height="15" fill="rgb(230,95,12)" fg:x="26953" fg:w="6"/><text x="46.4230%" y="431.50"></text></g><g><title>exp@@GLIBC_2.29 (13 samples, 0.02%)</title><rect x="46.1969%" y="421" width="0.0223%" height="15" fill="rgb(232,209,1)" fg:x="26967" fg:w="13"/><text x="46.4469%" y="431.50"></text></g><g><title>rayon::slice::sort::choose_pivot (6 samples, 0.01%)</title><rect x="46.2243%" y="421" width="0.0103%" height="15" fill="rgb(232,6,1)" fg:x="26983" fg:w="6"/><text x="46.4743%" y="431.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (10 samples, 0.02%)</title><rect x="46.2346%" y="421" width="0.0171%" height="15" fill="rgb(210,224,50)" fg:x="26989" fg:w="10"/><text x="46.4846%" y="431.50"></text></g><g><title>rayon::slice::sort::choose_pivot (6 samples, 0.01%)</title><rect x="46.2518%" y="421" width="0.0103%" height="15" fill="rgb(228,127,35)" fg:x="26999" fg:w="6"/><text x="46.5018%" y="431.50"></text></g><g><title>rayon::slice::sort::choose_pivot::{{closure}} (6 samples, 0.01%)</title><rect x="46.2518%" y="405" width="0.0103%" height="15" fill="rgb(245,102,45)" fg:x="26999" fg:w="6"/><text x="46.5018%" y="415.50"></text></g><g><title>rayon::slice::sort::insert_tail (15 samples, 0.03%)</title><rect x="46.2620%" y="421" width="0.0257%" height="15" fill="rgb(214,1,49)" fg:x="27005" fg:w="15"/><text x="46.5120%" y="431.50"></text></g><g><title>rayon::slice::sort::partition_in_blocks (16 samples, 0.03%)</title><rect x="46.2912%" y="421" width="0.0274%" height="15" fill="rgb(226,163,40)" fg:x="27022" fg:w="16"/><text x="46.5412%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (48 samples, 0.08%)</title><rect x="46.3220%" y="421" width="0.0822%" height="15" fill="rgb(239,212,28)" fg:x="27040" fg:w="48"/><text x="46.5720%" y="431.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (6,381 samples, 10.93%)</title><rect x="35.4747%" y="437" width="10.9312%" height="15" fill="rgb(220,20,13)" fg:x="20708" fg:w="6381"/><text x="35.7247%" y="447.50">rayon_core::regi..</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (14 samples, 0.02%)</title><rect x="46.4179%" y="437" width="0.0240%" height="15" fill="rgb(210,164,35)" fg:x="27096" fg:w="14"/><text x="46.6679%" y="447.50"></text></g><g><title>__sched_yield (13 samples, 0.02%)</title><rect x="46.4196%" y="421" width="0.0223%" height="15" fill="rgb(248,109,41)" fg:x="27097" fg:w="13"/><text x="46.6696%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.02%)</title><rect x="46.4231%" y="405" width="0.0188%" height="15" fill="rgb(238,23,50)" fg:x="27099" fg:w="11"/><text x="46.6731%" y="415.50"></text></g><g><title>do_syscall_64 (11 samples, 0.02%)</title><rect x="46.4231%" y="389" width="0.0188%" height="15" fill="rgb(211,48,49)" fg:x="27099" fg:w="11"/><text x="46.6731%" y="399.50"></text></g><g><title>__x64_sys_sched_yield (9 samples, 0.02%)</title><rect x="46.4265%" y="373" width="0.0154%" height="15" fill="rgb(223,36,21)" fg:x="27101" fg:w="9"/><text x="46.6765%" y="383.50"></text></g><g><title>schedule (8 samples, 0.01%)</title><rect x="46.4282%" y="357" width="0.0137%" height="15" fill="rgb(207,123,46)" fg:x="27102" fg:w="8"/><text x="46.6782%" y="367.50"></text></g><g><title>__schedule (8 samples, 0.01%)</title><rect x="46.4282%" y="341" width="0.0137%" height="15" fill="rgb(240,218,32)" fg:x="27102" fg:w="8"/><text x="46.6782%" y="351.50"></text></g><g><title>sqlite3_free (12 samples, 0.02%)</title><rect x="46.4539%" y="437" width="0.0206%" height="15" fill="rgb(252,5,43)" fg:x="27117" fg:w="12"/><text x="46.7039%" y="447.50"></text></g><g><title>sqlite3_mutex_enter (12 samples, 0.02%)</title><rect x="46.4539%" y="421" width="0.0206%" height="15" fill="rgb(252,84,19)" fg:x="27117" fg:w="12"/><text x="46.7039%" y="431.50"></text></g><g><title>pthreadMutexEnter (12 samples, 0.02%)</title><rect x="46.4539%" y="405" width="0.0206%" height="15" fill="rgb(243,152,39)" fg:x="27117" fg:w="12"/><text x="46.7039%" y="415.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (12 samples, 0.02%)</title><rect x="46.4539%" y="389" width="0.0206%" height="15" fill="rgb(234,160,15)" fg:x="27117" fg:w="12"/><text x="46.7039%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="46.4933%" y="421" width="0.0206%" height="15" fill="rgb(237,34,20)" fg:x="27140" fg:w="12"/><text x="46.7433%" y="431.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (7 samples, 0.01%)</title><rect x="46.5224%" y="405" width="0.0120%" height="15" fill="rgb(229,97,13)" fg:x="27157" fg:w="7"/><text x="46.7724%" y="415.50"></text></g><g><title>[[vdso]] (7 samples, 0.01%)</title><rect x="46.5224%" y="389" width="0.0120%" height="15" fill="rgb(234,71,50)" fg:x="27157" fg:w="7"/><text x="46.7724%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (9 samples, 0.02%)</title><rect x="46.5207%" y="421" width="0.0154%" height="15" fill="rgb(253,155,4)" fg:x="27156" fg:w="9"/><text x="46.7707%" y="431.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (7 samples, 0.01%)</title><rect x="46.5378%" y="357" width="0.0120%" height="15" fill="rgb(222,185,37)" fg:x="27166" fg:w="7"/><text x="46.7878%" y="367.50"></text></g><g><title>[[vdso]] (7 samples, 0.01%)</title><rect x="46.5378%" y="341" width="0.0120%" height="15" fill="rgb(251,177,13)" fg:x="27166" fg:w="7"/><text x="46.7878%" y="351.50"></text></g><g><title>sqlite_single_row_lookup_sqlx::benchmark_sqlx_pool_acquire::{{closure}}::{{closure}}::{{closure}} (45 samples, 0.08%)</title><rect x="46.4745%" y="437" width="0.0771%" height="15" fill="rgb(250,179,40)" fg:x="27129" fg:w="45"/><text x="46.7245%" y="447.50"></text></g><g><title>std::time::Instant::elapsed (8 samples, 0.01%)</title><rect x="46.5378%" y="421" width="0.0137%" height="15" fill="rgb(242,44,2)" fg:x="27166" fg:w="8"/><text x="46.7878%" y="431.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.01%)</title><rect x="46.5378%" y="405" width="0.0137%" height="15" fill="rgb(216,177,13)" fg:x="27166" fg:w="8"/><text x="46.7878%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (8 samples, 0.01%)</title><rect x="46.5378%" y="389" width="0.0137%" height="15" fill="rgb(216,106,43)" fg:x="27166" fg:w="8"/><text x="46.7878%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (8 samples, 0.01%)</title><rect x="46.5378%" y="373" width="0.0137%" height="15" fill="rgb(216,183,2)" fg:x="27166" fg:w="8"/><text x="46.7878%" y="383.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="46.6115%" y="405" width="0.0291%" height="15" fill="rgb(249,75,3)" fg:x="27209" fg:w="17"/><text x="46.8615%" y="415.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.03%)</title><rect x="46.6115%" y="421" width="0.0308%" height="15" fill="rgb(219,67,39)" fg:x="27209" fg:w="18"/><text x="46.8615%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (15 samples, 0.03%)</title><rect x="46.6423%" y="421" width="0.0257%" height="15" fill="rgb(253,228,2)" fg:x="27227" fg:w="15"/><text x="46.8923%" y="431.50"></text></g><g><title>sqlx_core::pool::CloseEvent::do_until::{{closure}} (60 samples, 0.10%)</title><rect x="46.5670%" y="437" width="0.1028%" height="15" fill="rgb(235,138,27)" fg:x="27183" fg:w="60"/><text x="46.8170%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="46.6937%" y="421" width="0.0206%" height="15" fill="rgb(236,97,51)" fg:x="27257" fg:w="12"/><text x="46.9437%" y="431.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::{{closure}} (27 samples, 0.05%)</title><rect x="46.6698%" y="437" width="0.0463%" height="15" fill="rgb(240,80,30)" fg:x="27243" fg:w="27"/><text x="46.9198%" y="447.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::into_live (6 samples, 0.01%)</title><rect x="46.7160%" y="437" width="0.0103%" height="15" fill="rgb(230,178,19)" fg:x="27270" fg:w="6"/><text x="46.9660%" y="447.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::{{closure}} (27 samples, 0.05%)</title><rect x="46.7263%" y="437" width="0.0463%" height="15" fill="rgb(210,190,27)" fg:x="27276" fg:w="27"/><text x="46.9763%" y="447.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::reattach (9 samples, 0.02%)</title><rect x="46.7725%" y="437" width="0.0154%" height="15" fill="rgb(222,107,31)" fg:x="27303" fg:w="9"/><text x="47.0225%" y="447.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_optional::{{closure}} (7 samples, 0.01%)</title><rect x="46.7897%" y="437" width="0.0120%" height="15" fill="rgb(216,127,34)" fg:x="27313" fg:w="7"/><text x="47.0397%" y="447.50"></text></g><g><title>sqlx_core::pool::inner::DecrementSizeGuard&lt;DB&gt;::cancel (9 samples, 0.02%)</title><rect x="46.8017%" y="437" width="0.0154%" height="15" fill="rgb(234,116,52)" fg:x="27320" fg:w="9"/><text x="47.0517%" y="447.50"></text></g><g><title>sqlx_core::pool::inner::DecrementSizeGuard&lt;DB&gt;::from_permit (6 samples, 0.01%)</title><rect x="46.8171%" y="437" width="0.0103%" height="15" fill="rgb(222,124,15)" fg:x="27329" fg:w="6"/><text x="47.0671%" y="447.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::{{closure}} (47 samples, 0.08%)</title><rect x="46.8308%" y="437" width="0.0805%" height="15" fill="rgb(231,179,28)" fg:x="27337" fg:w="47"/><text x="47.0808%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::gt (9 samples, 0.02%)</title><rect x="46.9593%" y="421" width="0.0154%" height="15" fill="rgb(226,93,45)" fg:x="27412" fg:w="9"/><text x="47.2093%" y="431.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::{{closure}}::{{closure}} (42 samples, 0.07%)</title><rect x="46.9113%" y="437" width="0.0719%" height="15" fill="rgb(215,8,51)" fg:x="27384" fg:w="42"/><text x="47.1613%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="46.9832%" y="421" width="0.0206%" height="15" fill="rgb(223,106,5)" fg:x="27426" fg:w="12"/><text x="47.2332%" y="431.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (9 samples, 0.02%)</title><rect x="47.0072%" y="405" width="0.0154%" height="15" fill="rgb(250,191,5)" fg:x="27440" fg:w="9"/><text x="47.2572%" y="415.50"></text></g><g><title>[[vdso]] (9 samples, 0.02%)</title><rect x="47.0072%" y="389" width="0.0154%" height="15" fill="rgb(242,132,44)" fg:x="27440" fg:w="9"/><text x="47.2572%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (12 samples, 0.02%)</title><rect x="47.0038%" y="421" width="0.0206%" height="15" fill="rgb(251,152,29)" fg:x="27438" fg:w="12"/><text x="47.2538%" y="431.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (10 samples, 0.02%)</title><rect x="47.0278%" y="357" width="0.0171%" height="15" fill="rgb(218,179,5)" fg:x="27452" fg:w="10"/><text x="47.2778%" y="367.50"></text></g><g><title>[[vdso]] (6 samples, 0.01%)</title><rect x="47.0346%" y="341" width="0.0103%" height="15" fill="rgb(227,67,19)" fg:x="27456" fg:w="6"/><text x="47.2846%" y="351.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire::{{closure}} (37 samples, 0.06%)</title><rect x="46.9832%" y="437" width="0.0634%" height="15" fill="rgb(233,119,31)" fg:x="27426" fg:w="37"/><text x="47.2332%" y="447.50"></text></g><g><title>std::time::Instant::elapsed (13 samples, 0.02%)</title><rect x="47.0244%" y="421" width="0.0223%" height="15" fill="rgb(241,120,22)" fg:x="27450" fg:w="13"/><text x="47.2744%" y="431.50"></text></g><g><title>std::time::Instant::now (11 samples, 0.02%)</title><rect x="47.0278%" y="405" width="0.0188%" height="15" fill="rgb(224,102,30)" fg:x="27452" fg:w="11"/><text x="47.2778%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (11 samples, 0.02%)</title><rect x="47.0278%" y="389" width="0.0188%" height="15" fill="rgb(210,164,37)" fg:x="27452" fg:w="11"/><text x="47.2778%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (11 samples, 0.02%)</title><rect x="47.0278%" y="373" width="0.0188%" height="15" fill="rgb(226,191,16)" fg:x="27452" fg:w="11"/><text x="47.2778%" y="383.50"></text></g><g><title>&lt;futures_util::future::poll_immediate::PollImmediate&lt;F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="47.1014%" y="421" width="0.0154%" height="15" fill="rgb(214,40,45)" fg:x="27495" fg:w="9"/><text x="47.3514%" y="431.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::acquire_permit::{{closure}} (51 samples, 0.09%)</title><rect x="47.0466%" y="437" width="0.0874%" height="15" fill="rgb(244,29,26)" fg:x="27463" fg:w="51"/><text x="47.2966%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (6 samples, 0.01%)</title><rect x="47.1237%" y="421" width="0.0103%" height="15" fill="rgb(216,16,5)" fg:x="27508" fg:w="6"/><text x="47.3737%" y="431.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::is_closed (15 samples, 0.03%)</title><rect x="47.1374%" y="437" width="0.0257%" height="15" fill="rgb(249,76,35)" fg:x="27516" fg:w="15"/><text x="47.3874%" y="447.50"></text></g><g><title>sqlx_core::pool::inner::check_idle_conn::{{closure}} (46 samples, 0.08%)</title><rect x="47.1700%" y="437" width="0.0788%" height="15" fill="rgb(207,11,44)" fg:x="27535" fg:w="46"/><text x="47.4200%" y="447.50"></text></g><g><title>sqlx_core::query::Query&lt;DB,&lt;DB as sqlx_core::database::Database&gt;::Arguments&gt;::bind (13 samples, 0.02%)</title><rect x="47.2522%" y="437" width="0.0223%" height="15" fill="rgb(228,190,49)" fg:x="27583" fg:w="13"/><text x="47.5022%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_sqlite::row::SqliteRow&gt; (8 samples, 0.01%)</title><rect x="47.2985%" y="421" width="0.0137%" height="15" fill="rgb(214,173,12)" fg:x="27610" fg:w="8"/><text x="47.5485%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="47.3019%" y="405" width="0.0103%" height="15" fill="rgb(218,26,35)" fg:x="27612" fg:w="6"/><text x="47.5519%" y="415.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_optional::{{closure}} (15 samples, 0.03%)</title><rect x="47.2899%" y="437" width="0.0257%" height="15" fill="rgb(220,200,19)" fg:x="27605" fg:w="15"/><text x="47.5399%" y="447.50"></text></g><g><title>sqlx_core::row::Row::try_get (7 samples, 0.01%)</title><rect x="47.3156%" y="437" width="0.0120%" height="15" fill="rgb(239,95,49)" fg:x="27620" fg:w="7"/><text x="47.5656%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::inner::PoolInner&lt;sqlx_sqlite::database::Sqlite&gt;::acquire::{{closure}}::{{closure}}&gt; (9 samples, 0.02%)</title><rect x="47.3396%" y="421" width="0.0154%" height="15" fill="rgb(235,85,53)" fg:x="27634" fg:w="9"/><text x="47.5896%" y="431.50"></text></g><g><title>sqlx_core::rt::rt_tokio::available (19 samples, 0.03%)</title><rect x="47.3276%" y="437" width="0.0325%" height="15" fill="rgb(233,133,31)" fg:x="27627" fg:w="19"/><text x="47.5776%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="47.3755%" y="421" width="0.0154%" height="15" fill="rgb(218,25,20)" fg:x="27655" fg:w="9"/><text x="47.6255%" y="431.50"></text></g><g><title>sqlx_core::rt::spawn (24 samples, 0.04%)</title><rect x="47.3601%" y="437" width="0.0411%" height="15" fill="rgb(252,210,38)" fg:x="27646" fg:w="24"/><text x="47.6101%" y="447.50"></text></g><g><title>sqlx_core::rt::timeout::{{closure}} (13 samples, 0.02%)</title><rect x="47.4012%" y="437" width="0.0223%" height="15" fill="rgb(242,134,21)" fg:x="27670" fg:w="13"/><text x="47.6512%" y="447.50"></text></g><g><title>sqlx_core::sync::AsyncSemaphore::acquire (7 samples, 0.01%)</title><rect x="47.4286%" y="437" width="0.0120%" height="15" fill="rgb(213,28,48)" fg:x="27686" fg:w="7"/><text x="47.6786%" y="447.50"></text></g><g><title>sqlx_core::sync::AsyncSemaphore::acquire::{{closure}} (17 samples, 0.03%)</title><rect x="47.4406%" y="437" width="0.0291%" height="15" fill="rgb(250,196,2)" fg:x="27693" fg:w="17"/><text x="47.6906%" y="447.50"></text></g><g><title>sqlx_core::sync::AsyncSemaphoreReleaser::disarm (11 samples, 0.02%)</title><rect x="47.4698%" y="437" width="0.0188%" height="15" fill="rgb(227,5,17)" fg:x="27710" fg:w="11"/><text x="47.7198%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (6 samples, 0.01%)</title><rect x="47.4783%" y="421" width="0.0103%" height="15" fill="rgb(221,226,24)" fg:x="27715" fg:w="6"/><text x="47.7283%" y="431.50"></text></g><g><title>sqlx_sqlite::&lt;impl sqlx_core::arguments::IntoArguments&lt;sqlx_sqlite::database::Sqlite&gt; for sqlx_sqlite::arguments::SqliteArguments&gt;::into_arguments (6 samples, 0.01%)</title><rect x="47.4937%" y="437" width="0.0103%" height="15" fill="rgb(211,5,48)" fg:x="27724" fg:w="6"/><text x="47.7437%" y="447.50"></text></g><g><title>sqlx_sqlite::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_sqlite::connection::SqliteConnection&gt;::fetch_optional (6 samples, 0.01%)</title><rect x="47.5075%" y="437" width="0.0103%" height="15" fill="rgb(219,150,6)" fg:x="27732" fg:w="6"/><text x="47.7575%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.05%)</title><rect x="47.6291%" y="405" width="0.0497%" height="15" fill="rgb(251,46,16)" fg:x="27803" fg:w="29"/><text x="47.8791%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.03%)</title><rect x="47.6531%" y="389" width="0.0257%" height="15" fill="rgb(220,204,40)" fg:x="27817" fg:w="15"/><text x="47.9031%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.02%)</title><rect x="47.6548%" y="373" width="0.0240%" height="15" fill="rgb(211,85,2)" fg:x="27818" fg:w="14"/><text x="47.9048%" y="383.50"></text></g><g><title>sqlx_sqlite::connection::worker::ConnectionWorker::oneshot_cmd::{{closure}} (91 samples, 0.16%)</title><rect x="47.5331%" y="437" width="0.1559%" height="15" fill="rgb(229,17,7)" fg:x="27747" fg:w="91"/><text x="47.7831%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::oneshot::Receiver&lt;()&gt;&gt; (36 samples, 0.06%)</title><rect x="47.6274%" y="421" width="0.0617%" height="15" fill="rgb(239,72,28)" fg:x="27802" fg:w="36"/><text x="47.8774%" y="431.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="47.6788%" y="405" width="0.0103%" height="15" fill="rgb(230,47,54)" fg:x="27832" fg:w="6"/><text x="47.9288%" y="415.50"></text></g><g><title>sqlx_sqlite::connection::worker::ConnectionWorker::ping::{{closure}} (39 samples, 0.07%)</title><rect x="47.6890%" y="437" width="0.0668%" height="15" fill="rgb(214,50,8)" fg:x="27838" fg:w="39"/><text x="47.9390%" y="447.50"></text></g><g><title>__ieee754_exp_fma (17 samples, 0.03%)</title><rect x="48.2098%" y="405" width="0.0291%" height="15" fill="rgb(216,198,43)" fg:x="28142" fg:w="17"/><text x="48.4598%" y="415.50"></text></g><g><title>__math_check_oflow (55 samples, 0.09%)</title><rect x="48.2389%" y="405" width="0.0942%" height="15" fill="rgb(234,20,35)" fg:x="28159" fg:w="55"/><text x="48.4889%" y="415.50"></text></g><g><title>[unknown] (73 samples, 0.13%)</title><rect x="48.2098%" y="421" width="0.1251%" height="15" fill="rgb(254,45,19)" fg:x="28142" fg:w="73"/><text x="48.4598%" y="431.50"></text></g><g><title>__exp_finite@plt (7 samples, 0.01%)</title><rect x="50.2964%" y="405" width="0.0120%" height="15" fill="rgb(219,14,44)" fg:x="29360" fg:w="7"/><text x="50.5464%" y="415.50"></text></g><g><title>update_process_times (9 samples, 0.02%)</title><rect x="54.5071%" y="293" width="0.0154%" height="15" fill="rgb(217,220,26)" fg:x="31818" fg:w="9"/><text x="54.7571%" y="303.50"></text></g><g><title>sched_tick (8 samples, 0.01%)</title><rect x="54.5089%" y="277" width="0.0137%" height="15" fill="rgb(213,158,28)" fg:x="31819" fg:w="8"/><text x="54.7589%" y="287.50"></text></g><g><title>__hrtimer_run_queues (10 samples, 0.02%)</title><rect x="54.5071%" y="325" width="0.0171%" height="15" fill="rgb(252,51,52)" fg:x="31818" fg:w="10"/><text x="54.7571%" y="335.50"></text></g><g><title>tick_nohz_handler (10 samples, 0.02%)</title><rect x="54.5071%" y="309" width="0.0171%" height="15" fill="rgb(246,89,16)" fg:x="31818" fg:w="10"/><text x="54.7571%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (12 samples, 0.02%)</title><rect x="54.5071%" y="389" width="0.0206%" height="15" fill="rgb(216,158,49)" fg:x="31818" fg:w="12"/><text x="54.7571%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (12 samples, 0.02%)</title><rect x="54.5071%" y="373" width="0.0206%" height="15" fill="rgb(236,107,19)" fg:x="31818" fg:w="12"/><text x="54.7571%" y="383.50"></text></g><g><title>__sysvec_apic_timer_interrupt (12 samples, 0.02%)</title><rect x="54.5071%" y="357" width="0.0206%" height="15" fill="rgb(228,185,30)" fg:x="31818" fg:w="12"/><text x="54.7571%" y="367.50"></text></g><g><title>hrtimer_interrupt (12 samples, 0.02%)</title><rect x="54.5071%" y="341" width="0.0206%" height="15" fill="rgb(246,134,8)" fg:x="31818" fg:w="12"/><text x="54.7571%" y="351.50"></text></g><g><title>__ieee754_exp_fma (2,466 samples, 4.22%)</title><rect x="50.3084%" y="405" width="4.2245%" height="15" fill="rgb(214,143,50)" fg:x="29367" fg:w="2466"/><text x="50.5584%" y="415.50">__iee..</text></g><g><title>__math_check_oflow (297 samples, 0.51%)</title><rect x="54.5328%" y="405" width="0.5088%" height="15" fill="rgb(228,75,8)" fg:x="31833" fg:w="297"/><text x="54.7828%" y="415.50"></text></g><g><title>__math_oflow (17 samples, 0.03%)</title><rect x="55.0416%" y="405" width="0.0291%" height="15" fill="rgb(207,175,4)" fg:x="32130" fg:w="17"/><text x="55.2916%" y="415.50"></text></g><g><title>sched_tick (6 samples, 0.01%)</title><rect x="55.0759%" y="293" width="0.0103%" height="15" fill="rgb(205,108,24)" fg:x="32150" fg:w="6"/><text x="55.3259%" y="303.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="55.0708%" y="405" width="0.0171%" height="15" fill="rgb(244,120,49)" fg:x="32147" fg:w="10"/><text x="55.3208%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="55.0708%" y="389" width="0.0171%" height="15" fill="rgb(223,47,38)" fg:x="32147" fg:w="10"/><text x="55.3208%" y="399.50"></text></g><g><title>__sysvec_apic_timer_interrupt (8 samples, 0.01%)</title><rect x="55.0742%" y="373" width="0.0137%" height="15" fill="rgb(229,179,11)" fg:x="32149" fg:w="8"/><text x="55.3242%" y="383.50"></text></g><g><title>hrtimer_interrupt (8 samples, 0.01%)</title><rect x="55.0742%" y="357" width="0.0137%" height="15" fill="rgb(231,122,1)" fg:x="32149" fg:w="8"/><text x="55.3242%" y="367.50"></text></g><g><title>__hrtimer_run_queues (8 samples, 0.01%)</title><rect x="55.0742%" y="341" width="0.0137%" height="15" fill="rgb(245,119,9)" fg:x="32149" fg:w="8"/><text x="55.3242%" y="351.50"></text></g><g><title>tick_nohz_handler (8 samples, 0.01%)</title><rect x="55.0742%" y="325" width="0.0137%" height="15" fill="rgb(241,163,25)" fg:x="32149" fg:w="8"/><text x="55.3242%" y="335.50"></text></g><g><title>update_process_times (7 samples, 0.01%)</title><rect x="55.0759%" y="309" width="0.0120%" height="15" fill="rgb(217,214,3)" fg:x="32150" fg:w="7"/><text x="55.3259%" y="319.50"></text></g><g><title>with_errno (105 samples, 0.18%)</title><rect x="55.0913%" y="405" width="0.1799%" height="15" fill="rgb(240,86,28)" fg:x="32159" fg:w="105"/><text x="55.3413%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (4,413 samples, 7.56%)</title><rect x="47.7833%" y="437" width="7.5599%" height="15" fill="rgb(215,47,9)" fg:x="27893" fg:w="4413"/><text x="48.0333%" y="447.50">std::f64::..</text></g><g><title>exp@@GLIBC_2.29 (4,088 samples, 7.00%)</title><rect x="48.3400%" y="421" width="7.0031%" height="15" fill="rgb(252,25,45)" fg:x="28218" fg:w="4088"/><text x="48.5900%" y="431.50">exp@@GLIB..</text></g><g><title>xflow (42 samples, 0.07%)</title><rect x="55.2712%" y="405" width="0.0719%" height="15" fill="rgb(251,164,9)" fg:x="32264" fg:w="42"/><text x="55.5212%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (57 samples, 0.10%)</title><rect x="55.3483%" y="437" width="0.0976%" height="15" fill="rgb(233,194,0)" fg:x="32309" fg:w="57"/><text x="55.5983%" y="447.50"></text></g><g><title>core::f64::math::powi (8 samples, 0.01%)</title><rect x="55.4322%" y="421" width="0.0137%" height="15" fill="rgb(249,111,24)" fg:x="32358" fg:w="8"/><text x="55.6822%" y="431.50"></text></g><g><title>hrtimer_interrupt (7 samples, 0.01%)</title><rect x="60.4499%" y="357" width="0.0120%" height="15" fill="rgb(250,223,3)" fg:x="35287" fg:w="7"/><text x="60.6999%" y="367.50"></text></g><g><title>__hrtimer_run_queues (7 samples, 0.01%)</title><rect x="60.4499%" y="341" width="0.0120%" height="15" fill="rgb(236,178,37)" fg:x="35287" fg:w="7"/><text x="60.6999%" y="351.50"></text></g><g><title>tick_nohz_handler (6 samples, 0.01%)</title><rect x="60.4516%" y="325" width="0.0103%" height="15" fill="rgb(241,158,50)" fg:x="35288" fg:w="6"/><text x="60.7016%" y="335.50"></text></g><g><title>__sysvec_apic_timer_interrupt (8 samples, 0.01%)</title><rect x="60.4499%" y="373" width="0.0137%" height="15" fill="rgb(213,121,41)" fg:x="35287" fg:w="8"/><text x="60.6999%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="60.4481%" y="405" width="0.0171%" height="15" fill="rgb(240,92,3)" fg:x="35286" fg:w="10"/><text x="60.6981%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="60.4481%" y="389" width="0.0171%" height="15" fill="rgb(205,123,3)" fg:x="35286" fg:w="10"/><text x="60.6981%" y="399.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (2,933 samples, 5.02%)</title><rect x="55.4459%" y="437" width="5.0245%" height="15" fill="rgb(205,97,47)" fg:x="32366" fg:w="2933"/><text x="55.6959%" y="447.50">std::f..</text></g><g><title>core::f64::math::sqrt (2,783 samples, 4.77%)</title><rect x="55.7029%" y="421" width="4.7675%" height="15" fill="rgb(247,152,14)" fg:x="32516" fg:w="2783"/><text x="55.9529%" y="431.50">core::..</text></g><g><title>std::panic::catch_unwind (7 samples, 0.01%)</title><rect x="60.4704%" y="437" width="0.0120%" height="15" fill="rgb(248,195,53)" fg:x="35299" fg:w="7"/><text x="60.7204%" y="447.50"></text></g><g><title>std::panicking::catch_unwind (6 samples, 0.01%)</title><rect x="60.4721%" y="421" width="0.0103%" height="15" fill="rgb(226,201,16)" fg:x="35300" fg:w="6"/><text x="60.7221%" y="431.50"></text></g><g><title>std::panicking::catch_unwind::do_call (7 samples, 0.01%)</title><rect x="60.4824%" y="437" width="0.0120%" height="15" fill="rgb(205,98,0)" fg:x="35306" fg:w="7"/><text x="60.7324%" y="447.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (17 samples, 0.03%)</title><rect x="60.4978%" y="421" width="0.0291%" height="15" fill="rgb(214,191,48)" fg:x="35315" fg:w="17"/><text x="60.7478%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="60.4995%" y="405" width="0.0274%" height="15" fill="rgb(237,112,39)" fg:x="35316" fg:w="16"/><text x="60.7495%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::convert::BoxFromSlice&lt;T&gt;&gt;::from_slice (10 samples, 0.02%)</title><rect x="60.5355%" y="421" width="0.0171%" height="15" fill="rgb(247,203,27)" fg:x="35337" fg:w="10"/><text x="60.7855%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.09%)</title><rect x="60.5544%" y="421" width="0.0891%" height="15" fill="rgb(235,124,28)" fg:x="35348" fg:w="52"/><text x="60.8044%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (49 samples, 0.08%)</title><rect x="60.5595%" y="405" width="0.0839%" height="15" fill="rgb(208,207,46)" fg:x="35351" fg:w="49"/><text x="60.8095%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (48 samples, 0.08%)</title><rect x="60.5612%" y="389" width="0.0822%" height="15" fill="rgb(234,176,4)" fg:x="35352" fg:w="48"/><text x="60.8112%" y="399.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="60.7051%" y="421" width="0.0137%" height="15" fill="rgb(230,133,28)" fg:x="35436" fg:w="8"/><text x="60.9551%" y="431.50"></text></g><g><title>[libc.so.6] (10 samples, 0.02%)</title><rect x="60.7291%" y="421" width="0.0171%" height="15" fill="rgb(211,137,40)" fg:x="35450" fg:w="10"/><text x="60.9791%" y="431.50"></text></g><g><title>sqlx_core::row::Row::try_get (10 samples, 0.02%)</title><rect x="60.7291%" y="405" width="0.0171%" height="15" fill="rgb(254,35,13)" fg:x="35450" fg:w="10"/><text x="60.9791%" y="415.50"></text></g><g><title>syscall (16 samples, 0.03%)</title><rect x="60.7685%" y="405" width="0.0274%" height="15" fill="rgb(225,49,51)" fg:x="35473" fg:w="16"/><text x="61.0185%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (16 samples, 0.03%)</title><rect x="60.7685%" y="389" width="0.0274%" height="15" fill="rgb(251,10,15)" fg:x="35473" fg:w="16"/><text x="61.0185%" y="399.50"></text></g><g><title>[sqlite_single_row_lookup_sqlx-ad447b01e569b511] (38 samples, 0.07%)</title><rect x="60.7462%" y="421" width="0.0651%" height="15" fill="rgb(228,207,15)" fg:x="35460" fg:w="38"/><text x="60.9962%" y="431.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::header (9 samples, 0.02%)</title><rect x="60.7959%" y="405" width="0.0154%" height="15" fill="rgb(241,99,19)" fg:x="35489" fg:w="9"/><text x="61.0459%" y="415.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (9 samples, 0.02%)</title><rect x="60.8250%" y="405" width="0.0154%" height="15" fill="rgb(207,104,49)" fg:x="35506" fg:w="9"/><text x="61.0750%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="60.8267%" y="389" width="0.0137%" height="15" fill="rgb(234,99,18)" fg:x="35507" fg:w="8"/><text x="61.0767%" y="399.50"></text></g><g><title>cfree@GLIBC_2.2.5 (42 samples, 0.07%)</title><rect x="60.8576%" y="373" width="0.0719%" height="15" fill="rgb(213,191,49)" fg:x="35525" fg:w="42"/><text x="61.1076%" y="383.50"></text></g><g><title>_int_free_chunk (22 samples, 0.04%)</title><rect x="60.8918%" y="357" width="0.0377%" height="15" fill="rgb(210,226,19)" fg:x="35545" fg:w="22"/><text x="61.1418%" y="367.50"></text></g><g><title>_int_free_merge_chunk (14 samples, 0.02%)</title><rect x="60.9055%" y="341" width="0.0240%" height="15" fill="rgb(229,97,18)" fg:x="35553" fg:w="14"/><text x="61.1555%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.08%)</title><rect x="60.8473%" y="405" width="0.0839%" height="15" fill="rgb(211,167,15)" fg:x="35519" fg:w="49"/><text x="61.0973%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (43 samples, 0.07%)</title><rect x="60.8576%" y="389" width="0.0737%" height="15" fill="rgb(210,169,34)" fg:x="35525" fg:w="43"/><text x="61.1076%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="60.9312%" y="405" width="0.0103%" height="15" fill="rgb(241,121,31)" fg:x="35568" fg:w="6"/><text x="61.1812%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="60.9501%" y="405" width="0.0137%" height="15" fill="rgb(232,40,11)" fg:x="35579" fg:w="8"/><text x="61.2001%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="60.9672%" y="405" width="0.0308%" height="15" fill="rgb(205,86,26)" fg:x="35589" fg:w="18"/><text x="61.2172%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.03%)</title><rect x="60.9672%" y="389" width="0.0308%" height="15" fill="rgb(231,126,28)" fg:x="35589" fg:w="18"/><text x="61.2172%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.03%)</title><rect x="60.9672%" y="373" width="0.0308%" height="15" fill="rgb(219,221,18)" fg:x="35589" fg:w="18"/><text x="61.2172%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.01%)</title><rect x="61.0118%" y="405" width="0.0137%" height="15" fill="rgb(211,40,0)" fg:x="35615" fg:w="8"/><text x="61.2618%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.02%)</title><rect x="61.0392%" y="405" width="0.0171%" height="15" fill="rgb(239,85,43)" fg:x="35631" fg:w="10"/><text x="61.2892%" y="415.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="61.0957%" y="405" width="0.0103%" height="15" fill="rgb(231,55,21)" fg:x="35664" fg:w="6"/><text x="61.3457%" y="415.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.01%)</title><rect x="61.1060%" y="405" width="0.0103%" height="15" fill="rgb(225,184,43)" fg:x="35670" fg:w="6"/><text x="61.3560%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.01%)</title><rect x="61.1163%" y="405" width="0.0120%" height="15" fill="rgb(251,158,41)" fg:x="35676" fg:w="7"/><text x="61.3663%" y="415.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.01%)</title><rect x="61.1454%" y="405" width="0.0120%" height="15" fill="rgb(234,159,37)" fg:x="35693" fg:w="7"/><text x="61.3954%" y="415.50"></text></g><g><title>sqlite3MemFree (9 samples, 0.02%)</title><rect x="61.2070%" y="325" width="0.0154%" height="15" fill="rgb(216,204,22)" fg:x="35729" fg:w="9"/><text x="61.4570%" y="335.50"></text></g><g><title>cfree@GLIBC_2.2.5 (8 samples, 0.01%)</title><rect x="61.2088%" y="309" width="0.0137%" height="15" fill="rgb(214,17,3)" fg:x="35730" fg:w="8"/><text x="61.4588%" y="319.50"></text></g><g><title>sqlite3_free (26 samples, 0.04%)</title><rect x="61.1951%" y="341" width="0.0445%" height="15" fill="rgb(212,111,17)" fg:x="35722" fg:w="26"/><text x="61.4451%" y="351.50"></text></g><g><title>sqlite3_mutex_leave (10 samples, 0.02%)</title><rect x="61.2225%" y="325" width="0.0171%" height="15" fill="rgb(221,157,24)" fg:x="35738" fg:w="10"/><text x="61.4725%" y="335.50"></text></g><g><title>pthreadMutexLeave (8 samples, 0.01%)</title><rect x="61.2259%" y="309" width="0.0137%" height="15" fill="rgb(252,16,13)" fg:x="35740" fg:w="8"/><text x="61.4759%" y="319.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (8 samples, 0.01%)</title><rect x="61.2259%" y="293" width="0.0137%" height="15" fill="rgb(221,62,2)" fg:x="35740" fg:w="8"/><text x="61.4759%" y="303.50"></text></g><g><title>sqlite3DbFreeNN (28 samples, 0.05%)</title><rect x="61.1933%" y="357" width="0.0480%" height="15" fill="rgb(247,87,22)" fg:x="35721" fg:w="28"/><text x="61.4433%" y="367.50"></text></g><g><title>sqlite3VdbeMemRelease (8 samples, 0.01%)</title><rect x="61.2413%" y="357" width="0.0137%" height="15" fill="rgb(215,73,9)" fg:x="35749" fg:w="8"/><text x="61.4913%" y="367.50"></text></g><g><title>&lt;sqlx_sqlite::value::ValueHandle as core::ops::drop::Drop&gt;::drop (45 samples, 0.08%)</title><rect x="61.1831%" y="405" width="0.0771%" height="15" fill="rgb(207,175,33)" fg:x="35715" fg:w="45"/><text x="61.4331%" y="415.50"></text></g><g><title>sqlite3_value_free (42 samples, 0.07%)</title><rect x="61.1882%" y="389" width="0.0719%" height="15" fill="rgb(243,129,54)" fg:x="35718" fg:w="42"/><text x="61.4382%" y="399.50"></text></g><g><title>sqlite3ValueFree (41 samples, 0.07%)</title><rect x="61.1899%" y="373" width="0.0702%" height="15" fill="rgb(227,119,45)" fg:x="35719" fg:w="41"/><text x="61.4399%" y="383.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.06%)</title><rect x="61.3064%" y="389" width="0.0565%" height="15" fill="rgb(205,109,36)" fg:x="35787" fg:w="33"/><text x="61.5564%" y="399.50"></text></g><g><title>malloc (30 samples, 0.05%)</title><rect x="61.3115%" y="373" width="0.0514%" height="15" fill="rgb(205,6,39)" fg:x="35790" fg:w="30"/><text x="61.5615%" y="383.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="61.3441%" y="357" width="0.0188%" height="15" fill="rgb(221,32,16)" fg:x="35809" fg:w="11"/><text x="61.5941%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.07%)</title><rect x="61.2961%" y="405" width="0.0737%" height="15" fill="rgb(228,144,50)" fg:x="35781" fg:w="43"/><text x="61.5461%" y="415.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (14 samples, 0.02%)</title><rect x="61.3801%" y="405" width="0.0240%" height="15" fill="rgb(229,201,53)" fg:x="35830" fg:w="14"/><text x="61.6301%" y="415.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (13 samples, 0.02%)</title><rect x="61.3818%" y="389" width="0.0223%" height="15" fill="rgb(249,153,27)" fg:x="35831" fg:w="13"/><text x="61.6318%" y="399.50"></text></g><g><title>core::ptr::read (13 samples, 0.02%)</title><rect x="61.3818%" y="373" width="0.0223%" height="15" fill="rgb(227,106,25)" fg:x="35831" fg:w="13"/><text x="61.6318%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.02%)</title><rect x="61.3818%" y="357" width="0.0223%" height="15" fill="rgb(230,65,29)" fg:x="35831" fg:w="13"/><text x="61.6318%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (8 samples, 0.01%)</title><rect x="61.4126%" y="405" width="0.0137%" height="15" fill="rgb(221,57,46)" fg:x="35849" fg:w="8"/><text x="61.6626%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="61.4297%" y="405" width="0.0137%" height="15" fill="rgb(229,161,17)" fg:x="35859" fg:w="8"/><text x="61.6797%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (11 samples, 0.02%)</title><rect x="61.4435%" y="405" width="0.0188%" height="15" fill="rgb(222,213,11)" fg:x="35867" fg:w="11"/><text x="61.6935%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (12 samples, 0.02%)</title><rect x="61.4674%" y="405" width="0.0206%" height="15" fill="rgb(235,35,13)" fg:x="35881" fg:w="12"/><text x="61.7174%" y="415.50"></text></g><g><title>&lt;foldhash::fast::FoldHasher as core::hash::Hasher&gt;::write (15 samples, 0.03%)</title><rect x="61.5308%" y="389" width="0.0257%" height="15" fill="rgb(233,158,34)" fg:x="35918" fg:w="15"/><text x="61.7808%" y="399.50"></text></g><g><title>core::hash::Hasher::write_str (18 samples, 0.03%)</title><rect x="61.5291%" y="405" width="0.0308%" height="15" fill="rgb(215,151,48)" fg:x="35917" fg:w="18"/><text x="61.7791%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.02%)</title><rect x="61.5685%" y="405" width="0.0188%" height="15" fill="rgb(229,84,14)" fg:x="35940" fg:w="11"/><text x="61.8185%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (9 samples, 0.02%)</title><rect x="61.6319%" y="405" width="0.0154%" height="15" fill="rgb(229,68,14)" fg:x="35977" fg:w="9"/><text x="61.8819%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.01%)</title><rect x="61.7175%" y="405" width="0.0137%" height="15" fill="rgb(243,106,26)" fg:x="36027" fg:w="8"/><text x="61.9675%" y="415.50"></text></g><g><title>core::slice::index::range (9 samples, 0.02%)</title><rect x="61.7330%" y="405" width="0.0154%" height="15" fill="rgb(206,45,38)" fg:x="36036" fg:w="9"/><text x="61.9830%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (8 samples, 0.01%)</title><rect x="61.7604%" y="405" width="0.0137%" height="15" fill="rgb(226,6,15)" fg:x="36052" fg:w="8"/><text x="62.0104%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.01%)</title><rect x="61.7621%" y="389" width="0.0120%" height="15" fill="rgb(232,22,54)" fg:x="36053" fg:w="7"/><text x="62.0121%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (7 samples, 0.01%)</title><rect x="61.7998%" y="405" width="0.0120%" height="15" fill="rgb(229,222,32)" fg:x="36075" fg:w="7"/><text x="62.0498%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.03%)</title><rect x="61.8118%" y="405" width="0.0343%" height="15" fill="rgb(228,62,29)" fg:x="36082" fg:w="20"/><text x="62.0618%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.01%)</title><rect x="61.8460%" y="405" width="0.0103%" height="15" fill="rgb(251,103,34)" fg:x="36102" fg:w="6"/><text x="62.0960%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="61.8563%" y="405" width="0.0103%" height="15" fill="rgb(233,12,30)" fg:x="36108" fg:w="6"/><text x="62.1063%" y="415.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (12 samples, 0.02%)</title><rect x="61.9197%" y="405" width="0.0206%" height="15" fill="rgb(238,52,0)" fg:x="36145" fg:w="12"/><text x="62.1697%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.03%)</title><rect x="61.9865%" y="405" width="0.0291%" height="15" fill="rgb(223,98,5)" fg:x="36184" fg:w="17"/><text x="62.2365%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.02%)</title><rect x="61.9916%" y="389" width="0.0240%" height="15" fill="rgb(228,75,37)" fg:x="36187" fg:w="14"/><text x="62.2416%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (11 samples, 0.02%)</title><rect x="61.9968%" y="373" width="0.0188%" height="15" fill="rgb(205,115,49)" fg:x="36190" fg:w="11"/><text x="62.2468%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (6 samples, 0.01%)</title><rect x="62.0156%" y="405" width="0.0103%" height="15" fill="rgb(250,154,43)" fg:x="36201" fg:w="6"/><text x="62.2656%" y="415.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (10 samples, 0.02%)</title><rect x="62.0447%" y="405" width="0.0171%" height="15" fill="rgb(226,43,29)" fg:x="36218" fg:w="10"/><text x="62.2947%" y="415.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.01%)</title><rect x="62.0516%" y="389" width="0.0103%" height="15" fill="rgb(249,228,39)" fg:x="36222" fg:w="6"/><text x="62.3016%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (7 samples, 0.01%)</title><rect x="62.0739%" y="405" width="0.0120%" height="15" fill="rgb(216,79,43)" fg:x="36235" fg:w="7"/><text x="62.3239%" y="415.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (9 samples, 0.02%)</title><rect x="62.0859%" y="405" width="0.0154%" height="15" fill="rgb(228,95,12)" fg:x="36242" fg:w="9"/><text x="62.3359%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="62.0910%" y="389" width="0.0103%" height="15" fill="rgb(249,221,15)" fg:x="36245" fg:w="6"/><text x="62.3410%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (11 samples, 0.02%)</title><rect x="62.1081%" y="405" width="0.0188%" height="15" fill="rgb(233,34,13)" fg:x="36255" fg:w="11"/><text x="62.3581%" y="415.50"></text></g><g><title>sqlite_single_row_lookup_sqlx::benchmark_sqlx_query_raw::{{closure}}::{{closure}}::{{closure}} (10 samples, 0.02%)</title><rect x="62.1441%" y="405" width="0.0171%" height="15" fill="rgb(214,103,39)" fg:x="36276" fg:w="10"/><text x="62.3941%" y="415.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_optional::{{closure}} (29 samples, 0.05%)</title><rect x="62.1749%" y="405" width="0.0497%" height="15" fill="rgb(251,126,39)" fg:x="36294" fg:w="29"/><text x="62.4249%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="62.2246%" y="357" width="0.0154%" height="15" fill="rgb(214,216,36)" fg:x="36323" fg:w="9"/><text x="62.4746%" y="367.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_optional (10 samples, 0.02%)</title><rect x="62.2246%" y="405" width="0.0171%" height="15" fill="rgb(220,221,8)" fg:x="36323" fg:w="10"/><text x="62.4746%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (10 samples, 0.02%)</title><rect x="62.2246%" y="389" width="0.0171%" height="15" fill="rgb(240,216,3)" fg:x="36323" fg:w="10"/><text x="62.4746%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (10 samples, 0.02%)</title><rect x="62.2246%" y="373" width="0.0171%" height="15" fill="rgb(232,218,17)" fg:x="36323" fg:w="10"/><text x="62.4746%" y="383.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_one::{{closure}} (6 samples, 0.01%)</title><rect x="62.2520%" y="405" width="0.0103%" height="15" fill="rgb(229,163,45)" fg:x="36339" fg:w="6"/><text x="62.5020%" y="415.50"></text></g><g><title>sqlx_core::query_as::QueryAs&lt;DB,O,A&gt;::fetch_optional::{{closure}} (8 samples, 0.01%)</title><rect x="62.2640%" y="405" width="0.0137%" height="15" fill="rgb(231,110,42)" fg:x="36346" fg:w="8"/><text x="62.5140%" y="415.50"></text></g><g><title>sqlx_core::rt::spawn (19 samples, 0.03%)</title><rect x="62.2829%" y="405" width="0.0325%" height="15" fill="rgb(208,170,48)" fg:x="36357" fg:w="19"/><text x="62.5329%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (14 samples, 0.02%)</title><rect x="62.2914%" y="389" width="0.0240%" height="15" fill="rgb(239,116,25)" fg:x="36362" fg:w="14"/><text x="62.5414%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="62.2914%" y="373" width="0.0240%" height="15" fill="rgb(219,200,50)" fg:x="36362" fg:w="14"/><text x="62.5414%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.02%)</title><rect x="62.2914%" y="357" width="0.0240%" height="15" fill="rgb(245,200,0)" fg:x="36362" fg:w="14"/><text x="62.5414%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.02%)</title><rect x="62.2914%" y="341" width="0.0240%" height="15" fill="rgb(245,119,33)" fg:x="36362" fg:w="14"/><text x="62.5414%" y="351.50"></text></g><g><title>sqlx_sqlite::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_sqlite::connection::SqliteConnection&gt;::fetch_optional::{{closure}} (7 samples, 0.01%)</title><rect x="62.3188%" y="405" width="0.0120%" height="15" fill="rgb(231,125,12)" fg:x="36378" fg:w="7"/><text x="62.5688%" y="415.50"></text></g><g><title>sqlx_sqlite::value::ValueHandle::is_null (17 samples, 0.03%)</title><rect x="62.3565%" y="405" width="0.0291%" height="15" fill="rgb(216,96,41)" fg:x="36400" fg:w="17"/><text x="62.6065%" y="415.50"></text></g><g><title>sqlite3_value_type (15 samples, 0.03%)</title><rect x="62.3600%" y="389" width="0.0257%" height="15" fill="rgb(248,43,45)" fg:x="36402" fg:w="15"/><text x="62.6100%" y="399.50"></text></g><g><title>std::sync::poison::Flag::done (8 samples, 0.01%)</title><rect x="62.4028%" y="405" width="0.0137%" height="15" fill="rgb(217,222,7)" fg:x="36427" fg:w="8"/><text x="62.6528%" y="415.50"></text></g><g><title>std::thread::panicking (8 samples, 0.01%)</title><rect x="62.4028%" y="389" width="0.0137%" height="15" fill="rgb(233,28,6)" fg:x="36427" fg:w="8"/><text x="62.6528%" y="399.50"></text></g><g><title>std::panicking::panicking (8 samples, 0.01%)</title><rect x="62.4028%" y="373" width="0.0137%" height="15" fill="rgb(231,218,15)" fg:x="36427" fg:w="8"/><text x="62.6528%" y="383.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (8 samples, 0.01%)</title><rect x="62.4028%" y="357" width="0.0137%" height="15" fill="rgb(226,171,48)" fg:x="36427" fg:w="8"/><text x="62.6528%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.01%)</title><rect x="62.4028%" y="341" width="0.0137%" height="15" fill="rgb(235,201,9)" fg:x="36427" fg:w="8"/><text x="62.6528%" y="351.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="62.4028%" y="325" width="0.0137%" height="15" fill="rgb(217,80,15)" fg:x="36427" fg:w="8"/><text x="62.6528%" y="335.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (13 samples, 0.02%)</title><rect x="62.4422%" y="405" width="0.0223%" height="15" fill="rgb(219,152,8)" fg:x="36450" fg:w="13"/><text x="62.6922%" y="415.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (6 samples, 0.01%)</title><rect x="62.4662%" y="405" width="0.0103%" height="15" fill="rgb(243,107,38)" fg:x="36464" fg:w="6"/><text x="62.7162%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="62.4662%" y="389" width="0.0103%" height="15" fill="rgb(231,17,5)" fg:x="36464" fg:w="6"/><text x="62.7162%" y="399.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (15 samples, 0.03%)</title><rect x="62.4816%" y="405" width="0.0257%" height="15" fill="rgb(209,25,54)" fg:x="36473" fg:w="15"/><text x="62.7316%" y="415.50"></text></g><g><title>tokio::task::coop::budget (8 samples, 0.01%)</title><rect x="62.4936%" y="389" width="0.0137%" height="15" fill="rgb(219,0,2)" fg:x="36480" fg:w="8"/><text x="62.7436%" y="399.50"></text></g><g><title>tokio::task::coop::with_budget (7 samples, 0.01%)</title><rect x="62.4953%" y="373" width="0.0120%" height="15" fill="rgb(246,9,5)" fg:x="36481" fg:w="7"/><text x="62.7453%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::push (14 samples, 0.02%)</title><rect x="62.5090%" y="405" width="0.0240%" height="15" fill="rgb(226,159,4)" fg:x="36489" fg:w="14"/><text x="62.7590%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (12 samples, 0.02%)</title><rect x="62.5330%" y="405" width="0.0206%" height="15" fill="rgb(219,175,34)" fg:x="36503" fg:w="12"/><text x="62.7830%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="62.5381%" y="389" width="0.0154%" height="15" fill="rgb(236,10,46)" fg:x="36506" fg:w="9"/><text x="62.7881%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (7 samples, 0.01%)</title><rect x="62.5690%" y="405" width="0.0120%" height="15" fill="rgb(240,211,16)" fg:x="36524" fg:w="7"/><text x="62.8190%" y="415.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (8 samples, 0.01%)</title><rect x="62.6032%" y="405" width="0.0137%" height="15" fill="rgb(205,3,43)" fg:x="36544" fg:w="8"/><text x="62.8532%" y="415.50"></text></g><g><title>[unknown] (1,062 samples, 1.82%)</title><rect x="60.8113%" y="421" width="1.8193%" height="15" fill="rgb(245,7,22)" fg:x="35498" fg:w="1062"/><text x="61.0613%" y="431.50">[..</text></g><g><title>_fini (11 samples, 0.02%)</title><rect x="62.6443%" y="421" width="0.0188%" height="15" fill="rgb(239,132,32)" fg:x="36568" fg:w="11"/><text x="62.8943%" y="431.50"></text></g><g><title>_int_malloc (12 samples, 0.02%)</title><rect x="62.6632%" y="421" width="0.0206%" height="15" fill="rgb(228,202,34)" fg:x="36579" fg:w="12"/><text x="62.9132%" y="431.50"></text></g><g><title>sqlite_single_row_lookup_sqlx::benchmark_sqlx_query_as::{{closure}}::{{closure}}::{{closure}} (12 samples, 0.02%)</title><rect x="62.6632%" y="405" width="0.0206%" height="15" fill="rgb(254,200,22)" fg:x="36579" fg:w="12"/><text x="62.9132%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (9 samples, 0.02%)</title><rect x="62.7248%" y="421" width="0.0154%" height="15" fill="rgb(219,10,39)" fg:x="36615" fg:w="9"/><text x="62.9748%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;futures_util::future::try_future::MapOk&lt;sqlx_sqlite::connection::worker::ConnectionWorker::execute::{{closure}},flume::async::&lt;impl flume::Receiver&lt;core::result::Result&lt;either::Either&lt;sqlx_sqlite::query_result::SqliteQueryResult,sqlx_sqlite::row::SqliteRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;::into_stream&gt;,flume::async::RecvStream&lt;core::result::Result&lt;either::Either&lt;sqlx_sqlite::query_result::SqliteQueryResult,sqlx_sqlite::row::SqliteRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="62.8156%" y="421" width="0.0206%" height="15" fill="rgb(226,210,39)" fg:x="36668" fg:w="12"/><text x="63.0656%" y="431.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::{{closure}} (12 samples, 0.02%)</title><rect x="62.8156%" y="405" width="0.0206%" height="15" fill="rgb(208,219,16)" fg:x="36668" fg:w="12"/><text x="63.0656%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="62.8362%" y="421" width="0.0103%" height="15" fill="rgb(216,158,51)" fg:x="36680" fg:w="6"/><text x="63.0862%" y="431.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (6 samples, 0.01%)</title><rect x="62.8362%" y="405" width="0.0103%" height="15" fill="rgb(233,14,44)" fg:x="36680" fg:w="6"/><text x="63.0862%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (7 samples, 0.01%)</title><rect x="62.8756%" y="421" width="0.0120%" height="15" fill="rgb(237,97,39)" fg:x="36703" fg:w="7"/><text x="63.1256%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (48 samples, 0.08%)</title><rect x="62.9116%" y="421" width="0.0822%" height="15" fill="rgb(218,198,43)" fg:x="36724" fg:w="48"/><text x="63.1616%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (48 samples, 0.08%)</title><rect x="62.9116%" y="405" width="0.0822%" height="15" fill="rgb(231,104,20)" fg:x="36724" fg:w="48"/><text x="63.1616%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (36 samples, 0.06%)</title><rect x="63.0058%" y="421" width="0.0617%" height="15" fill="rgb(254,36,13)" fg:x="36779" fg:w="36"/><text x="63.2558%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.02%)</title><rect x="63.0675%" y="421" width="0.0223%" height="15" fill="rgb(248,14,50)" fg:x="36815" fg:w="13"/><text x="63.3175%" y="431.50"></text></g><g><title>sqlx_sqlite::arguments::SqliteArguments::add (6 samples, 0.01%)</title><rect x="63.1480%" y="421" width="0.0103%" height="15" fill="rgb(217,107,29)" fg:x="36862" fg:w="6"/><text x="63.3980%" y="431.50"></text></g><g><title>sqlx_sqlite::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_sqlite::connection::SqliteConnection&gt;::fetch_optional::{{closure}} (18 samples, 0.03%)</title><rect x="63.1600%" y="421" width="0.0308%" height="15" fill="rgb(251,169,33)" fg:x="36869" fg:w="18"/><text x="63.4100%" y="431.50"></text></g><g><title>flume::Shared&lt;T&gt;::disconnect_all (12 samples, 0.02%)</title><rect x="63.1702%" y="405" width="0.0206%" height="15" fill="rgb(217,108,32)" fg:x="36875" fg:w="12"/><text x="63.4202%" y="415.50"></text></g><g><title>sqlx_sqlite::value::ValueHandle::type_info (7 samples, 0.01%)</title><rect x="63.1925%" y="421" width="0.0120%" height="15" fill="rgb(219,66,42)" fg:x="36888" fg:w="7"/><text x="63.4425%" y="431.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="63.2062%" y="405" width="0.0103%" height="15" fill="rgb(206,180,7)" fg:x="36896" fg:w="6"/><text x="63.4562%" y="415.50"></text></g><g><title>std::sync::poison::map_result (8 samples, 0.01%)</title><rect x="63.2062%" y="421" width="0.0137%" height="15" fill="rgb(208,226,31)" fg:x="36896" fg:w="8"/><text x="63.4562%" y="431.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (14 samples, 0.02%)</title><rect x="63.2542%" y="421" width="0.0240%" height="15" fill="rgb(218,26,49)" fg:x="36924" fg:w="14"/><text x="63.5042%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (13 samples, 0.02%)</title><rect x="63.2559%" y="405" width="0.0223%" height="15" fill="rgb(233,197,48)" fg:x="36925" fg:w="13"/><text x="63.5059%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::push (7 samples, 0.01%)</title><rect x="63.2953%" y="421" width="0.0120%" height="15" fill="rgb(252,181,51)" fg:x="36948" fg:w="7"/><text x="63.5453%" y="431.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id_ptr (7 samples, 0.01%)</title><rect x="63.3159%" y="421" width="0.0120%" height="15" fill="rgb(253,90,19)" fg:x="36960" fg:w="7"/><text x="63.5659%" y="431.50"></text></g><g><title>tokio::runtime::task::core::Header::set_owner_id (20 samples, 0.03%)</title><rect x="63.3347%" y="421" width="0.0343%" height="15" fill="rgb(215,171,30)" fg:x="36971" fg:w="20"/><text x="63.5847%" y="431.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9 samples, 0.02%)</title><rect x="63.3535%" y="405" width="0.0154%" height="15" fill="rgb(214,222,9)" fg:x="36982" fg:w="9"/><text x="63.6035%" y="415.50"></text></g><g><title>std::rt::lang_start (1,686 samples, 2.89%)</title><rect x="60.4944%" y="437" width="2.8883%" height="15" fill="rgb(223,3,22)" fg:x="35313" fg:w="1686"/><text x="60.7444%" y="447.50">st..</text></g><g><title>std::sync::poison::Flag::done (11 samples, 0.02%)</title><rect x="63.3827%" y="437" width="0.0188%" height="15" fill="rgb(225,196,46)" fg:x="36999" fg:w="11"/><text x="63.6327%" y="447.50"></text></g><g><title>std::thread::panicking (8 samples, 0.01%)</title><rect x="63.3878%" y="421" width="0.0137%" height="15" fill="rgb(209,110,37)" fg:x="37002" fg:w="8"/><text x="63.6378%" y="431.50"></text></g><g><title>std::panicking::panicking (8 samples, 0.01%)</title><rect x="63.3878%" y="405" width="0.0137%" height="15" fill="rgb(249,89,12)" fg:x="37002" fg:w="8"/><text x="63.6378%" y="415.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (8 samples, 0.01%)</title><rect x="63.3878%" y="389" width="0.0137%" height="15" fill="rgb(226,27,33)" fg:x="37002" fg:w="8"/><text x="63.6378%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.01%)</title><rect x="63.3895%" y="373" width="0.0120%" height="15" fill="rgb(213,82,22)" fg:x="37003" fg:w="7"/><text x="63.6395%" y="383.50"></text></g><g><title>std::sync::poison::Flag::guard (7 samples, 0.01%)</title><rect x="63.4015%" y="437" width="0.0120%" height="15" fill="rgb(248,140,0)" fg:x="37010" fg:w="7"/><text x="63.6515%" y="447.50"></text></g><g><title>__pick_next_task (6 samples, 0.01%)</title><rect x="63.4152%" y="213" width="0.0103%" height="15" fill="rgb(228,106,3)" fg:x="37018" fg:w="6"/><text x="63.6652%" y="223.50"></text></g><g><title>pick_next_task_fair (6 samples, 0.01%)</title><rect x="63.4152%" y="197" width="0.0103%" height="15" fill="rgb(209,23,37)" fg:x="37018" fg:w="6"/><text x="63.6652%" y="207.50"></text></g><g><title>sched_balance_newidle (6 samples, 0.01%)</title><rect x="63.4152%" y="181" width="0.0103%" height="15" fill="rgb(241,93,50)" fg:x="37018" fg:w="6"/><text x="63.6652%" y="191.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.03%)</title><rect x="63.4135%" y="325" width="0.0291%" height="15" fill="rgb(253,46,43)" fg:x="37017" fg:w="17"/><text x="63.6635%" y="335.50"></text></g><g><title>do_futex (17 samples, 0.03%)</title><rect x="63.4135%" y="309" width="0.0291%" height="15" fill="rgb(226,206,43)" fg:x="37017" fg:w="17"/><text x="63.6635%" y="319.50"></text></g><g><title>futex_wait (17 samples, 0.03%)</title><rect x="63.4135%" y="293" width="0.0291%" height="15" fill="rgb(217,54,7)" fg:x="37017" fg:w="17"/><text x="63.6635%" y="303.50"></text></g><g><title>__futex_wait (17 samples, 0.03%)</title><rect x="63.4135%" y="277" width="0.0291%" height="15" fill="rgb(223,5,52)" fg:x="37017" fg:w="17"/><text x="63.6635%" y="287.50"></text></g><g><title>futex_do_wait (17 samples, 0.03%)</title><rect x="63.4135%" y="261" width="0.0291%" height="15" fill="rgb(206,52,46)" fg:x="37017" fg:w="17"/><text x="63.6635%" y="271.50"></text></g><g><title>schedule (16 samples, 0.03%)</title><rect x="63.4152%" y="245" width="0.0274%" height="15" fill="rgb(253,136,11)" fg:x="37018" fg:w="16"/><text x="63.6652%" y="255.50"></text></g><g><title>__schedule (16 samples, 0.03%)</title><rect x="63.4152%" y="229" width="0.0274%" height="15" fill="rgb(208,106,33)" fg:x="37018" fg:w="16"/><text x="63.6652%" y="239.50"></text></g><g><title>std::sync::poison::condvar::Condvar::wait (18 samples, 0.03%)</title><rect x="63.4135%" y="437" width="0.0308%" height="15" fill="rgb(206,54,4)" fg:x="37017" fg:w="18"/><text x="63.6635%" y="447.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (18 samples, 0.03%)</title><rect x="63.4135%" y="421" width="0.0308%" height="15" fill="rgb(213,3,15)" fg:x="37017" fg:w="18"/><text x="63.6635%" y="431.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (18 samples, 0.03%)</title><rect x="63.4135%" y="405" width="0.0308%" height="15" fill="rgb(252,211,39)" fg:x="37017" fg:w="18"/><text x="63.6635%" y="415.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (18 samples, 0.03%)</title><rect x="63.4135%" y="389" width="0.0308%" height="15" fill="rgb(223,6,36)" fg:x="37017" fg:w="18"/><text x="63.6635%" y="399.50"></text></g><g><title>syscall (18 samples, 0.03%)</title><rect x="63.4135%" y="373" width="0.0308%" height="15" fill="rgb(252,169,45)" fg:x="37017" fg:w="18"/><text x="63.6635%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.03%)</title><rect x="63.4135%" y="357" width="0.0308%" height="15" fill="rgb(212,48,26)" fg:x="37017" fg:w="18"/><text x="63.6635%" y="367.50"></text></g><g><title>do_syscall_64 (18 samples, 0.03%)</title><rect x="63.4135%" y="341" width="0.0308%" height="15" fill="rgb(251,102,48)" fg:x="37017" fg:w="18"/><text x="63.6635%" y="351.50"></text></g><g><title>std::sync::poison::map_result (14 samples, 0.02%)</title><rect x="63.4443%" y="437" width="0.0240%" height="15" fill="rgb(243,208,16)" fg:x="37035" fg:w="14"/><text x="63.6943%" y="447.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.06%)</title><rect x="63.4683%" y="437" width="0.0634%" height="15" fill="rgb(219,96,24)" fg:x="37049" fg:w="37"/><text x="63.7183%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (13 samples, 0.02%)</title><rect x="63.5094%" y="421" width="0.0223%" height="15" fill="rgb(219,33,29)" fg:x="37073" fg:w="13"/><text x="63.7594%" y="431.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (6 samples, 0.01%)</title><rect x="63.5214%" y="405" width="0.0103%" height="15" fill="rgb(223,176,5)" fg:x="37080" fg:w="6"/><text x="63.7714%" y="415.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="63.5317%" y="437" width="0.0103%" height="15" fill="rgb(228,140,14)" fg:x="37086" fg:w="6"/><text x="63.7817%" y="447.50"></text></g><g><title>std::sync::poison::mutex::MutexGuard&lt;T&gt;::new::{{closure}} (6 samples, 0.01%)</title><rect x="63.5420%" y="437" width="0.0103%" height="15" fill="rgb(217,179,31)" fg:x="37092" fg:w="6"/><text x="63.7920%" y="447.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (20 samples, 0.03%)</title><rect x="63.5523%" y="437" width="0.0343%" height="15" fill="rgb(230,9,30)" fg:x="37098" fg:w="20"/><text x="63.8023%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="63.5762%" y="421" width="0.0103%" height="15" fill="rgb(230,136,20)" fg:x="37112" fg:w="6"/><text x="63.8262%" y="431.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (6 samples, 0.01%)</title><rect x="63.5865%" y="437" width="0.0103%" height="15" fill="rgb(215,210,22)" fg:x="37118" fg:w="6"/><text x="63.8365%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (40 samples, 0.07%)</title><rect x="63.6054%" y="405" width="0.0685%" height="15" fill="rgb(218,43,5)" fg:x="37129" fg:w="40"/><text x="63.8554%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (40 samples, 0.07%)</title><rect x="63.6054%" y="389" width="0.0685%" height="15" fill="rgb(216,11,5)" fg:x="37129" fg:w="40"/><text x="63.8554%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (31 samples, 0.05%)</title><rect x="63.7133%" y="373" width="0.0531%" height="15" fill="rgb(209,82,29)" fg:x="37192" fg:w="31"/><text x="63.9633%" y="383.50"></text></g><g><title>__futex_hash.constprop.0 (15 samples, 0.03%)</title><rect x="63.9257%" y="293" width="0.0257%" height="15" fill="rgb(244,115,12)" fg:x="37316" fg:w="15"/><text x="64.1757%" y="303.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.01%)</title><rect x="63.9514%" y="293" width="0.0137%" height="15" fill="rgb(222,82,18)" fg:x="37331" fg:w="8"/><text x="64.2014%" y="303.50"></text></g><g><title>futex_wake_mark (69 samples, 0.12%)</title><rect x="63.9668%" y="293" width="0.1182%" height="15" fill="rgb(249,227,8)" fg:x="37340" fg:w="69"/><text x="64.2168%" y="303.50"></text></g><g><title>__futex_unqueue (6 samples, 0.01%)</title><rect x="64.0748%" y="277" width="0.0103%" height="15" fill="rgb(253,141,45)" fg:x="37403" fg:w="6"/><text x="64.3248%" y="287.50"></text></g><g><title>get_futex_key (16 samples, 0.03%)</title><rect x="64.0850%" y="293" width="0.0274%" height="15" fill="rgb(234,184,4)" fg:x="37409" fg:w="16"/><text x="64.3350%" y="303.50"></text></g><g><title>wake_q_add_safe (13 samples, 0.02%)</title><rect x="64.1124%" y="293" width="0.0223%" height="15" fill="rgb(218,194,23)" fg:x="37425" fg:w="13"/><text x="64.3624%" y="303.50"></text></g><g><title>__raw_spin_lock_irqsave (7 samples, 0.01%)</title><rect x="64.1553%" y="261" width="0.0120%" height="15" fill="rgb(235,66,41)" fg:x="37450" fg:w="7"/><text x="64.4053%" y="271.50"></text></g><g><title>__task_rq_lock (12 samples, 0.02%)</title><rect x="64.1673%" y="261" width="0.0206%" height="15" fill="rgb(245,217,1)" fg:x="37457" fg:w="12"/><text x="64.4173%" y="271.50"></text></g><g><title>raw_spin_rq_lock_nested (12 samples, 0.02%)</title><rect x="64.1673%" y="245" width="0.0206%" height="15" fill="rgb(229,91,1)" fg:x="37457" fg:w="12"/><text x="64.4173%" y="255.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.02%)</title><rect x="64.1673%" y="229" width="0.0206%" height="15" fill="rgb(207,101,30)" fg:x="37457" fg:w="12"/><text x="64.4173%" y="239.50"></text></g><g><title>native_queued_spin_lock_slowpath (12 samples, 0.02%)</title><rect x="64.1673%" y="213" width="0.0206%" height="15" fill="rgb(223,82,49)" fg:x="37457" fg:w="12"/><text x="64.4173%" y="223.50"></text></g><g><title>select_idle_sibling (56 samples, 0.10%)</title><rect x="64.2307%" y="229" width="0.0959%" height="15" fill="rgb(218,167,17)" fg:x="37494" fg:w="56"/><text x="64.4807%" y="239.50"></text></g><g><title>available_idle_cpu (28 samples, 0.05%)</title><rect x="64.3283%" y="213" width="0.0480%" height="15" fill="rgb(208,103,14)" fg:x="37551" fg:w="28"/><text x="64.5783%" y="223.50"></text></g><g><title>select_task_rq (109 samples, 0.19%)</title><rect x="64.1912%" y="261" width="0.1867%" height="15" fill="rgb(238,20,8)" fg:x="37471" fg:w="109"/><text x="64.4412%" y="271.50"></text></g><g><title>select_task_rq_fair (97 samples, 0.17%)</title><rect x="64.2118%" y="245" width="0.1662%" height="15" fill="rgb(218,80,54)" fg:x="37483" fg:w="97"/><text x="64.4618%" y="255.50"></text></g><g><title>wake_affine (30 samples, 0.05%)</title><rect x="64.3266%" y="229" width="0.0514%" height="15" fill="rgb(240,144,17)" fg:x="37550" fg:w="30"/><text x="64.5766%" y="239.50"></text></g><g><title>__smp_call_single_queue (253 samples, 0.43%)</title><rect x="64.4259%" y="245" width="0.4334%" height="15" fill="rgb(245,27,50)" fg:x="37608" fg:w="253"/><text x="64.6759%" y="255.50"></text></g><g><title>call_function_single_prep_ipi (228 samples, 0.39%)</title><rect x="64.4688%" y="229" width="0.3906%" height="15" fill="rgb(251,51,7)" fg:x="37633" fg:w="228"/><text x="64.7188%" y="239.50"></text></g><g><title>__x64_sys_futex (634 samples, 1.09%)</title><rect x="63.7852%" y="341" width="1.0861%" height="15" fill="rgb(245,217,29)" fg:x="37234" fg:w="634"/><text x="64.0352%" y="351.50"></text></g><g><title>do_futex (632 samples, 1.08%)</title><rect x="63.7887%" y="325" width="1.0827%" height="15" fill="rgb(221,176,29)" fg:x="37236" fg:w="632"/><text x="64.0387%" y="335.50"></text></g><g><title>futex_wake (632 samples, 1.08%)</title><rect x="63.7887%" y="309" width="1.0827%" height="15" fill="rgb(212,180,24)" fg:x="37236" fg:w="632"/><text x="64.0387%" y="319.50"></text></g><g><title>wake_up_q (430 samples, 0.74%)</title><rect x="64.1347%" y="293" width="0.7366%" height="15" fill="rgb(254,24,2)" fg:x="37438" fg:w="430"/><text x="64.3847%" y="303.50"></text></g><g><title>try_to_wake_up (424 samples, 0.73%)</title><rect x="64.1450%" y="277" width="0.7264%" height="15" fill="rgb(230,100,2)" fg:x="37444" fg:w="424"/><text x="64.3950%" y="287.50"></text></g><g><title>ttwu_queue_wakelist (286 samples, 0.49%)</title><rect x="64.3814%" y="261" width="0.4899%" height="15" fill="rgb(219,142,25)" fg:x="37582" fg:w="286"/><text x="64.6314%" y="271.50"></text></g><g><title>sched_clock_cpu (6 samples, 0.01%)</title><rect x="64.8611%" y="245" width="0.0103%" height="15" fill="rgb(240,73,43)" fg:x="37862" fg:w="6"/><text x="65.1111%" y="255.50"></text></g><g><title>sched_clock (6 samples, 0.01%)</title><rect x="64.8611%" y="229" width="0.0103%" height="15" fill="rgb(214,114,15)" fg:x="37862" fg:w="6"/><text x="65.1111%" y="239.50"></text></g><g><title>native_sched_clock (6 samples, 0.01%)</title><rect x="64.8611%" y="213" width="0.0103%" height="15" fill="rgb(207,130,4)" fg:x="37862" fg:w="6"/><text x="65.1111%" y="223.50"></text></g><g><title>arch_exit_to_user_mode_prepare.isra.0 (11 samples, 0.02%)</title><rect x="64.8713%" y="341" width="0.0188%" height="15" fill="rgb(221,25,40)" fg:x="37868" fg:w="11"/><text x="65.1213%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (661 samples, 1.13%)</title><rect x="63.7664%" y="373" width="1.1324%" height="15" fill="rgb(241,184,7)" fg:x="37223" fg:w="661"/><text x="64.0164%" y="383.50"></text></g><g><title>do_syscall_64 (661 samples, 1.13%)</title><rect x="63.7664%" y="357" width="1.1324%" height="15" fill="rgb(235,159,4)" fg:x="37223" fg:w="661"/><text x="64.0164%" y="367.50"></text></g><g><title>std::sys::sync::thread_parking::futex::Parker::unpark (762 samples, 1.31%)</title><rect x="63.6054%" y="421" width="1.3054%" height="15" fill="rgb(214,87,48)" fg:x="37129" fg:w="762"/><text x="63.8554%" y="431.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (722 samples, 1.24%)</title><rect x="63.6739%" y="405" width="1.2369%" height="15" fill="rgb(246,198,24)" fg:x="37169" fg:w="722"/><text x="63.9239%" y="415.50"></text></g><g><title>syscall (722 samples, 1.24%)</title><rect x="63.6739%" y="389" width="1.2369%" height="15" fill="rgb(209,66,40)" fg:x="37169" fg:w="722"/><text x="63.9239%" y="399.50"></text></g><g><title>std::thread::Thread::unpark (766 samples, 1.31%)</title><rect x="63.6002%" y="437" width="1.3122%" height="15" fill="rgb(233,147,39)" fg:x="37126" fg:w="766"/><text x="63.8502%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.02%)</title><rect x="65.0238%" y="421" width="0.0154%" height="15" fill="rgb(231,145,52)" fg:x="37957" fg:w="9"/><text x="65.2738%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (8 samples, 0.01%)</title><rect x="65.0392%" y="421" width="0.0137%" height="15" fill="rgb(206,20,26)" fg:x="37966" fg:w="8"/><text x="65.2892%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (89 samples, 0.15%)</title><rect x="64.9125%" y="437" width="0.1525%" height="15" fill="rgb(238,220,4)" fg:x="37892" fg:w="89"/><text x="65.1625%" y="447.50"></text></g><g><title>std::time::Instant::duration_since (7 samples, 0.01%)</title><rect x="65.0649%" y="437" width="0.0120%" height="15" fill="rgb(252,195,42)" fg:x="37981" fg:w="7"/><text x="65.3149%" y="447.50"></text></g><g><title>std::time::SystemTime::checked_add (7 samples, 0.01%)</title><rect x="65.0838%" y="437" width="0.0120%" height="15" fill="rgb(209,10,6)" fg:x="37992" fg:w="7"/><text x="65.3338%" y="447.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::new (16 samples, 0.03%)</title><rect x="65.1009%" y="437" width="0.0274%" height="15" fill="rgb(229,3,52)" fg:x="38002" fg:w="16"/><text x="65.3509%" y="447.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::new (13 samples, 0.02%)</title><rect x="65.1437%" y="437" width="0.0223%" height="15" fill="rgb(253,49,37)" fg:x="38027" fg:w="13"/><text x="65.3937%" y="447.50"></text></g><g><title>tokio::runtime::context::budget (22 samples, 0.04%)</title><rect x="65.1746%" y="437" width="0.0377%" height="15" fill="rgb(240,103,49)" fg:x="38045" fg:w="22"/><text x="65.4246%" y="447.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (17 samples, 0.03%)</title><rect x="65.2123%" y="437" width="0.0291%" height="15" fill="rgb(250,182,30)" fg:x="38067" fg:w="17"/><text x="65.4623%" y="447.50"></text></g><g><title>tokio::runtime::context::budget (6 samples, 0.01%)</title><rect x="65.2414%" y="437" width="0.0103%" height="15" fill="rgb(248,8,30)" fg:x="38084" fg:w="6"/><text x="65.4914%" y="447.50"></text></g><g><title>tokio::runtime::context::current::with_current (17 samples, 0.03%)</title><rect x="65.2517%" y="437" width="0.0291%" height="15" fill="rgb(237,120,30)" fg:x="38090" fg:w="17"/><text x="65.5017%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="65.3185%" y="421" width="0.0103%" height="15" fill="rgb(221,146,34)" fg:x="38129" fg:w="6"/><text x="65.5685%" y="431.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (31 samples, 0.05%)</title><rect x="65.2808%" y="437" width="0.0531%" height="15" fill="rgb(242,55,13)" fg:x="38107" fg:w="31"/><text x="65.5308%" y="447.50"></text></g><g><title>tokio::runtime::driver::Handle::time (9 samples, 0.02%)</title><rect x="65.3442%" y="437" width="0.0154%" height="15" fill="rgb(242,112,31)" fg:x="38144" fg:w="9"/><text x="65.5942%" y="447.50"></text></g><g><title>tokio::runtime::handle::Handle::try_current (10 samples, 0.02%)</title><rect x="65.3733%" y="437" width="0.0171%" height="15" fill="rgb(249,192,27)" fg:x="38161" fg:w="10"/><text x="65.6233%" y="447.50"></text></g><g><title>tokio::runtime::park::CURRENT_PARKER::{{constant}}::{{closure}} (6 samples, 0.01%)</title><rect x="65.3921%" y="437" width="0.0103%" height="15" fill="rgb(208,204,44)" fg:x="38172" fg:w="6"/><text x="65.6421%" y="447.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (6 samples, 0.01%)</title><rect x="65.4041%" y="437" width="0.0103%" height="15" fill="rgb(208,93,54)" fg:x="38179" fg:w="6"/><text x="65.6541%" y="447.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (16 samples, 0.03%)</title><rect x="65.4144%" y="437" width="0.0274%" height="15" fill="rgb(242,1,31)" fg:x="38185" fg:w="16"/><text x="65.6644%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (8 samples, 0.01%)</title><rect x="65.4281%" y="421" width="0.0137%" height="15" fill="rgb(241,83,25)" fg:x="38193" fg:w="8"/><text x="65.6781%" y="431.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park (13 samples, 0.02%)</title><rect x="65.4418%" y="437" width="0.0223%" height="15" fill="rgb(205,169,50)" fg:x="38201" fg:w="13"/><text x="65.6918%" y="447.50"></text></g><g><title>tokio::runtime::park::Inner::park (8 samples, 0.01%)</title><rect x="65.4675%" y="437" width="0.0137%" height="15" fill="rgb(239,186,37)" fg:x="38216" fg:w="8"/><text x="65.7175%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (6 samples, 0.01%)</title><rect x="65.4881%" y="437" width="0.0103%" height="15" fill="rgb(205,221,10)" fg:x="38228" fg:w="6"/><text x="65.7381%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (8 samples, 0.01%)</title><rect x="65.5001%" y="437" width="0.0137%" height="15" fill="rgb(218,196,15)" fg:x="38235" fg:w="8"/><text x="65.7501%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (7 samples, 0.01%)</title><rect x="65.5172%" y="437" width="0.0120%" height="15" fill="rgb(218,196,35)" fg:x="38245" fg:w="7"/><text x="65.7672%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_remote (9 samples, 0.02%)</title><rect x="65.5412%" y="437" width="0.0154%" height="15" fill="rgb(233,63,24)" fg:x="38259" fg:w="9"/><text x="65.7912%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (10 samples, 0.02%)</title><rect x="65.5566%" y="437" width="0.0171%" height="15" fill="rgb(225,8,4)" fg:x="38268" fg:w="10"/><text x="65.8066%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (11 samples, 0.02%)</title><rect x="65.5891%" y="437" width="0.0188%" height="15" fill="rgb(234,105,35)" fg:x="38287" fg:w="11"/><text x="65.8391%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (8 samples, 0.01%)</title><rect x="65.6131%" y="437" width="0.0137%" height="15" fill="rgb(236,21,32)" fg:x="38301" fg:w="8"/><text x="65.8631%" y="447.50"></text></g><g><title>tokio::runtime::context::with_scheduler (8 samples, 0.01%)</title><rect x="65.6131%" y="421" width="0.0137%" height="15" fill="rgb(228,109,6)" fg:x="38301" fg:w="8"/><text x="65.8631%" y="431.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new::new_header (9 samples, 0.02%)</title><rect x="65.6422%" y="437" width="0.0154%" height="15" fill="rgb(229,215,31)" fg:x="38318" fg:w="9"/><text x="65.8922%" y="447.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (13 samples, 0.02%)</title><rect x="65.6696%" y="437" width="0.0223%" height="15" fill="rgb(221,52,54)" fg:x="38334" fg:w="13"/><text x="65.9196%" y="447.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (12 samples, 0.02%)</title><rect x="65.6919%" y="437" width="0.0206%" height="15" fill="rgb(252,129,43)" fg:x="38347" fg:w="12"/><text x="65.9419%" y="447.50"></text></g><g><title>_int_free_merge_chunk (13 samples, 0.02%)</title><rect x="65.8649%" y="277" width="0.0223%" height="15" fill="rgb(248,183,27)" fg:x="38448" fg:w="13"/><text x="66.1149%" y="287.50"></text></g><g><title>_int_free_create_chunk (10 samples, 0.02%)</title><rect x="65.8701%" y="261" width="0.0171%" height="15" fill="rgb(250,0,22)" fg:x="38451" fg:w="10"/><text x="66.1201%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (117 samples, 0.20%)</title><rect x="65.7467%" y="405" width="0.2004%" height="15" fill="rgb(213,166,10)" fg:x="38379" fg:w="117"/><text x="65.9967%" y="415.50"></text></g><g><title>alloc::alloc::alloc (117 samples, 0.20%)</title><rect x="65.7467%" y="389" width="0.2004%" height="15" fill="rgb(207,163,36)" fg:x="38379" fg:w="117"/><text x="65.9967%" y="399.50"></text></g><g><title>__rustc::__rdl_alloc (114 samples, 0.20%)</title><rect x="65.7519%" y="373" width="0.1953%" height="15" fill="rgb(208,122,22)" fg:x="38382" fg:w="114"/><text x="66.0019%" y="383.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (114 samples, 0.20%)</title><rect x="65.7519%" y="357" width="0.1953%" height="15" fill="rgb(207,104,49)" fg:x="38382" fg:w="114"/><text x="66.0019%" y="367.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (114 samples, 0.20%)</title><rect x="65.7519%" y="341" width="0.1953%" height="15" fill="rgb(248,211,50)" fg:x="38382" fg:w="114"/><text x="66.0019%" y="351.50"></text></g><g><title>__posix_memalign (114 samples, 0.20%)</title><rect x="65.7519%" y="325" width="0.1953%" height="15" fill="rgb(217,13,45)" fg:x="38382" fg:w="114"/><text x="66.0019%" y="335.50"></text></g><g><title>_mid_memalign.isra.0 (114 samples, 0.20%)</title><rect x="65.7519%" y="309" width="0.1953%" height="15" fill="rgb(211,216,49)" fg:x="38382" fg:w="114"/><text x="66.0019%" y="319.50"></text></g><g><title>_int_memalign (59 samples, 0.10%)</title><rect x="65.8461%" y="293" width="0.1011%" height="15" fill="rgb(221,58,53)" fg:x="38437" fg:w="59"/><text x="66.0961%" y="303.50"></text></g><g><title>_int_malloc (35 samples, 0.06%)</title><rect x="65.8872%" y="277" width="0.0600%" height="15" fill="rgb(220,112,41)" fg:x="38461" fg:w="35"/><text x="66.1372%" y="287.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new::new_header (6 samples, 0.01%)</title><rect x="65.9506%" y="405" width="0.0103%" height="15" fill="rgb(236,38,28)" fg:x="38498" fg:w="6"/><text x="66.2006%" y="415.50"></text></g><g><title>[unknown] (127 samples, 0.22%)</title><rect x="65.7467%" y="421" width="0.2176%" height="15" fill="rgb(227,195,22)" fg:x="38379" fg:w="127"/><text x="65.9967%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (19 samples, 0.03%)</title><rect x="65.9883%" y="405" width="0.0325%" height="15" fill="rgb(214,55,33)" fg:x="38520" fg:w="19"/><text x="66.2383%" y="415.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (184 samples, 0.32%)</title><rect x="65.7193%" y="437" width="0.3152%" height="15" fill="rgb(248,80,13)" fg:x="38363" fg:w="184"/><text x="65.9693%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (31 samples, 0.05%)</title><rect x="65.9814%" y="421" width="0.0531%" height="15" fill="rgb(238,52,6)" fg:x="38516" fg:w="31"/><text x="66.2314%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="66.0208%" y="405" width="0.0137%" height="15" fill="rgb(224,198,47)" fg:x="38539" fg:w="8"/><text x="66.2708%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="66.0208%" y="389" width="0.0137%" height="15" fill="rgb(233,171,20)" fg:x="38539" fg:w="8"/><text x="66.2708%" y="399.50"></text></g><g><title>tokio::runtime::task::state::State::new (13 samples, 0.02%)</title><rect x="66.0397%" y="437" width="0.0223%" height="15" fill="rgb(241,30,25)" fg:x="38550" fg:w="13"/><text x="66.2897%" y="447.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (6 samples, 0.01%)</title><rect x="66.0705%" y="437" width="0.0103%" height="15" fill="rgb(207,171,38)" fg:x="38568" fg:w="6"/><text x="66.3205%" y="447.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (25 samples, 0.04%)</title><rect x="66.0808%" y="437" width="0.0428%" height="15" fill="rgb(234,70,1)" fg:x="38574" fg:w="25"/><text x="66.3308%" y="447.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="66.1305%" y="405" width="0.0137%" height="15" fill="rgb(232,178,18)" fg:x="38603" fg:w="8"/><text x="66.3805%" y="415.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.02%)</title><rect x="66.1288%" y="421" width="0.0171%" height="15" fill="rgb(241,78,40)" fg:x="38602" fg:w="10"/><text x="66.3788%" y="431.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (24 samples, 0.04%)</title><rect x="66.1288%" y="437" width="0.0411%" height="15" fill="rgb(222,35,25)" fg:x="38602" fg:w="24"/><text x="66.3788%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="66.1545%" y="421" width="0.0154%" height="15" fill="rgb(207,92,16)" fg:x="38617" fg:w="9"/><text x="66.4045%" y="431.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::new (7 samples, 0.01%)</title><rect x="66.1733%" y="437" width="0.0120%" height="15" fill="rgb(216,59,51)" fg:x="38628" fg:w="7"/><text x="66.4233%" y="447.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::driver (7 samples, 0.01%)</title><rect x="66.2007%" y="437" width="0.0120%" height="15" fill="rgb(213,80,28)" fg:x="38644" fg:w="7"/><text x="66.4507%" y="447.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::init_inner (9 samples, 0.02%)</title><rect x="66.2127%" y="437" width="0.0154%" height="15" fill="rgb(220,93,7)" fg:x="38651" fg:w="9"/><text x="66.4627%" y="447.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::new (11 samples, 0.02%)</title><rect x="66.2333%" y="437" width="0.0188%" height="15" fill="rgb(225,24,44)" fg:x="38663" fg:w="11"/><text x="66.4833%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.04%)</title><rect x="66.2521%" y="421" width="0.0377%" height="15" fill="rgb(243,74,40)" fg:x="38674" fg:w="22"/><text x="66.5021%" y="431.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (23 samples, 0.04%)</title><rect x="66.2521%" y="437" width="0.0394%" height="15" fill="rgb(228,39,7)" fg:x="38674" fg:w="23"/><text x="66.5021%" y="447.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (9 samples, 0.02%)</title><rect x="66.2915%" y="437" width="0.0154%" height="15" fill="rgb(227,79,8)" fg:x="38697" fg:w="9"/><text x="66.5415%" y="447.50"></text></g><g><title>tokio::runtime::time::entry::TimerHandle::set_expiration (6 samples, 0.01%)</title><rect x="66.3155%" y="437" width="0.0103%" height="15" fill="rgb(236,58,11)" fg:x="38711" fg:w="6"/><text x="66.5655%" y="447.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::addr_of_pointers (8 samples, 0.01%)</title><rect x="66.3292%" y="437" width="0.0137%" height="15" fill="rgb(249,63,35)" fg:x="38719" fg:w="8"/><text x="66.5792%" y="447.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::new (10 samples, 0.02%)</title><rect x="66.3515%" y="437" width="0.0171%" height="15" fill="rgb(252,114,16)" fg:x="38732" fg:w="10"/><text x="66.6015%" y="447.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::deadline_to_tick (15 samples, 0.03%)</title><rect x="66.3857%" y="437" width="0.0257%" height="15" fill="rgb(254,151,24)" fg:x="38752" fg:w="15"/><text x="66.6357%" y="447.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (7 samples, 0.01%)</title><rect x="66.4114%" y="437" width="0.0120%" height="15" fill="rgb(253,54,39)" fg:x="38767" fg:w="7"/><text x="66.6614%" y="447.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::add_entry (6 samples, 0.01%)</title><rect x="66.4285%" y="437" width="0.0103%" height="15" fill="rgb(243,25,45)" fg:x="38777" fg:w="6"/><text x="66.6785%" y="447.50"></text></g><g><title>tokio::runtime::time::wheel::level_for (10 samples, 0.02%)</title><rect x="66.4508%" y="437" width="0.0171%" height="15" fill="rgb(234,134,9)" fg:x="38790" fg:w="10"/><text x="66.7008%" y="447.50"></text></g><g><title>tokio::sync::batch_semaphore::Acquire::new (8 samples, 0.01%)</title><rect x="66.4679%" y="437" width="0.0137%" height="15" fill="rgb(227,166,31)" fg:x="38800" fg:w="8"/><text x="66.7179%" y="447.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (15 samples, 0.03%)</title><rect x="66.4885%" y="437" width="0.0257%" height="15" fill="rgb(245,143,41)" fg:x="38812" fg:w="15"/><text x="66.7385%" y="447.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::new (10 samples, 0.02%)</title><rect x="66.5142%" y="437" width="0.0171%" height="15" fill="rgb(238,181,32)" fg:x="38827" fg:w="10"/><text x="66.7642%" y="447.50"></text></g><g><title>tokio::sync::semaphore::Semaphore::acquire_many::{{closure}} (19 samples, 0.03%)</title><rect x="66.5313%" y="437" width="0.0325%" height="15" fill="rgb(224,113,18)" fg:x="38837" fg:w="19"/><text x="66.7813%" y="447.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="66.5673%" y="421" width="0.0103%" height="15" fill="rgb(240,229,28)" fg:x="38858" fg:w="6"/><text x="66.8173%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_store (18 samples, 0.03%)</title><rect x="66.5776%" y="421" width="0.0308%" height="15" fill="rgb(250,185,3)" fg:x="38864" fg:w="18"/><text x="66.8276%" y="431.50"></text></g><g><title>sqlx_core::pool::CloseEvent::do_until::{{closure}}::{{closure}} (8 samples, 0.01%)</title><rect x="66.6118%" y="421" width="0.0137%" height="15" fill="rgb(212,59,25)" fg:x="38884" fg:w="8"/><text x="66.8618%" y="431.50"></text></g><g><title>tokio::sync::semaphore::SemaphorePermit::forget (37 samples, 0.06%)</title><rect x="66.5639%" y="437" width="0.0634%" height="15" fill="rgb(221,87,20)" fg:x="38856" fg:w="37"/><text x="66.8139%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (8 samples, 0.01%)</title><rect x="66.6512%" y="421" width="0.0137%" height="15" fill="rgb(213,74,28)" fg:x="38907" fg:w="8"/><text x="66.9012%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.01%)</title><rect x="66.6530%" y="405" width="0.0120%" height="15" fill="rgb(224,132,34)" fg:x="38908" fg:w="7"/><text x="66.9030%" y="415.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (10 samples, 0.02%)</title><rect x="66.6512%" y="437" width="0.0171%" height="15" fill="rgb(222,101,24)" fg:x="38907" fg:w="10"/><text x="66.9012%" y="447.50"></text></g><g><title>tokio::task::coop::Budget::decrement (12 samples, 0.02%)</title><rect x="66.6684%" y="437" width="0.0206%" height="15" fill="rgb(254,142,4)" fg:x="38917" fg:w="12"/><text x="66.9184%" y="447.50"></text></g><g><title>tokio::task::coop::Budget::has_remaining (18 samples, 0.03%)</title><rect x="66.6889%" y="437" width="0.0308%" height="15" fill="rgb(230,229,49)" fg:x="38929" fg:w="18"/><text x="66.9389%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (11 samples, 0.02%)</title><rect x="66.7009%" y="421" width="0.0188%" height="15" fill="rgb(238,70,47)" fg:x="38936" fg:w="11"/><text x="66.9509%" y="431.50"></text></g><g><title>tokio::task::coop::Budget::is_unconstrained (6 samples, 0.01%)</title><rect x="66.7198%" y="437" width="0.0103%" height="15" fill="rgb(231,160,17)" fg:x="38947" fg:w="6"/><text x="66.9698%" y="447.50"></text></g><g><title>tokio::task::coop::RestoreOnPending::new (8 samples, 0.01%)</title><rect x="66.7420%" y="437" width="0.0137%" height="15" fill="rgb(218,68,53)" fg:x="38960" fg:w="8"/><text x="66.9920%" y="447.50"></text></g><g><title>tokio::task::coop::poll_proceed (14 samples, 0.02%)</title><rect x="66.7557%" y="437" width="0.0240%" height="15" fill="rgb(236,111,10)" fg:x="38968" fg:w="14"/><text x="67.0057%" y="447.50"></text></g><g><title>tokio::time::timeout::Timeout&lt;T&gt;::new_with_delay (11 samples, 0.02%)</title><rect x="66.8089%" y="437" width="0.0188%" height="15" fill="rgb(224,34,41)" fg:x="38999" fg:w="11"/><text x="67.0589%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="66.8123%" y="421" width="0.0154%" height="15" fill="rgb(241,118,19)" fg:x="39001" fg:w="9"/><text x="67.0623%" y="431.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (11 samples, 0.02%)</title><rect x="66.8740%" y="389" width="0.0188%" height="15" fill="rgb(238,129,25)" fg:x="39037" fg:w="11"/><text x="67.1240%" y="399.50"></text></g><g><title>[[vdso]] (9 samples, 0.02%)</title><rect x="66.8774%" y="373" width="0.0154%" height="15" fill="rgb(238,22,31)" fg:x="39039" fg:w="9"/><text x="67.1274%" y="383.50"></text></g><g><title>tokio::time::timeout::timeout (39 samples, 0.07%)</title><rect x="66.8277%" y="437" width="0.0668%" height="15" fill="rgb(222,174,48)" fg:x="39010" fg:w="39"/><text x="67.0777%" y="447.50"></text></g><g><title>tokio::time::instant::variant::now (13 samples, 0.02%)</title><rect x="66.8722%" y="421" width="0.0223%" height="15" fill="rgb(206,152,40)" fg:x="39036" fg:w="13"/><text x="67.1222%" y="431.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (13 samples, 0.02%)</title><rect x="66.8722%" y="405" width="0.0223%" height="15" fill="rgb(218,99,54)" fg:x="39036" fg:w="13"/><text x="67.1222%" y="415.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (16 samples, 0.03%)</title><rect x="66.8996%" y="437" width="0.0274%" height="15" fill="rgb(220,174,26)" fg:x="39052" fg:w="16"/><text x="67.1496%" y="447.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (24 samples, 0.04%)</title><rect x="66.9271%" y="437" width="0.0411%" height="15" fill="rgb(245,116,9)" fg:x="39068" fg:w="24"/><text x="67.1771%" y="447.50"></text></g><g><title>tokio::util::metric_atomics::MetricAtomicU64::add (13 samples, 0.02%)</title><rect x="66.9836%" y="437" width="0.0223%" height="15" fill="rgb(209,72,35)" fg:x="39101" fg:w="13"/><text x="67.2336%" y="447.50"></text></g><g><title>tokio::util::wake::clone_arc_raw (10 samples, 0.02%)</title><rect x="67.0264%" y="437" width="0.0171%" height="15" fill="rgb(226,126,21)" fg:x="39126" fg:w="10"/><text x="67.2764%" y="447.50"></text></g><g><title>tracing_core::subscriber::Subscriber::current_span (6 samples, 0.01%)</title><rect x="67.0692%" y="437" width="0.0103%" height="15" fill="rgb(227,192,1)" fg:x="39151" fg:w="6"/><text x="67.3192%" y="447.50"></text></g><g><title>sqlite_single_r (38,701 samples, 66.30%)</title><rect x="0.7829%" y="453" width="66.2984%" height="15" fill="rgb(237,180,29)" fg:x="457" fg:w="38701"/><text x="1.0329%" y="463.50">sqlite_single_r</text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (28 samples, 0.05%)</title><rect x="67.0932%" y="437" width="0.0480%" height="15" fill="rgb(230,197,35)" fg:x="39165" fg:w="28"/><text x="67.3432%" y="447.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (25 samples, 0.04%)</title><rect x="67.0984%" y="421" width="0.0428%" height="15" fill="rgb(246,193,31)" fg:x="39168" fg:w="25"/><text x="67.3484%" y="431.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (25 samples, 0.04%)</title><rect x="67.0984%" y="405" width="0.0428%" height="15" fill="rgb(241,36,4)" fg:x="39168" fg:w="25"/><text x="67.3484%" y="415.50"></text></g><g><title>__memcmp_avx2_movbe (9 samples, 0.02%)</title><rect x="67.1463%" y="421" width="0.0154%" height="15" fill="rgb(241,130,17)" fg:x="39196" fg:w="9"/><text x="67.3963%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.02%)</title><rect x="67.1412%" y="437" width="0.0223%" height="15" fill="rgb(206,137,32)" fg:x="39193" fg:w="13"/><text x="67.3912%" y="447.50"></text></g><g><title>_int_free_chunk (10 samples, 0.02%)</title><rect x="67.2320%" y="389" width="0.0171%" height="15" fill="rgb(237,228,51)" fg:x="39246" fg:w="10"/><text x="67.4820%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.09%)</title><rect x="67.1652%" y="421" width="0.0857%" height="15" fill="rgb(243,6,42)" fg:x="39207" fg:w="50"/><text x="67.4152%" y="431.50"></text></g><g><title>cfree@GLIBC_2.2.5 (46 samples, 0.08%)</title><rect x="67.1720%" y="405" width="0.0788%" height="15" fill="rgb(251,74,28)" fg:x="39211" fg:w="46"/><text x="67.4220%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.09%)</title><rect x="67.1652%" y="437" width="0.0874%" height="15" fill="rgb(218,20,49)" fg:x="39207" fg:w="51"/><text x="67.4152%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="67.2577%" y="437" width="0.0120%" height="15" fill="rgb(238,28,14)" fg:x="39261" fg:w="7"/><text x="67.5077%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.02%)</title><rect x="67.2748%" y="437" width="0.0206%" height="15" fill="rgb(229,40,46)" fg:x="39271" fg:w="12"/><text x="67.5248%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.02%)</title><rect x="67.3022%" y="437" width="0.0188%" height="15" fill="rgb(244,195,20)" fg:x="39287" fg:w="11"/><text x="67.5522%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="67.3211%" y="437" width="0.0103%" height="15" fill="rgb(253,56,35)" fg:x="39298" fg:w="6"/><text x="67.5711%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.01%)</title><rect x="67.3416%" y="437" width="0.0120%" height="15" fill="rgb(210,149,44)" fg:x="39310" fg:w="7"/><text x="67.5916%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (6 samples, 0.01%)</title><rect x="67.3536%" y="437" width="0.0103%" height="15" fill="rgb(240,135,12)" fg:x="39317" fg:w="6"/><text x="67.6036%" y="447.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="67.3707%" y="437" width="0.0274%" height="15" fill="rgb(251,24,50)" fg:x="39327" fg:w="16"/><text x="67.6207%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.02%)</title><rect x="67.3982%" y="437" width="0.0240%" height="15" fill="rgb(243,200,47)" fg:x="39343" fg:w="14"/><text x="67.6482%" y="447.50"></text></g><g><title>&lt;flume::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="67.4256%" y="437" width="0.0223%" height="15" fill="rgb(224,166,26)" fg:x="39359" fg:w="13"/><text x="67.6756%" y="447.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (6 samples, 0.01%)</title><rect x="67.4478%" y="437" width="0.0103%" height="15" fill="rgb(233,0,47)" fg:x="39372" fg:w="6"/><text x="67.6978%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (14 samples, 0.02%)</title><rect x="67.4804%" y="437" width="0.0240%" height="15" fill="rgb(253,80,5)" fg:x="39391" fg:w="14"/><text x="67.7304%" y="447.50"></text></g><g><title>&lt;parking_lot_core::parking_lot::RequeueOp as core::cmp::PartialEq&gt;::eq (14 samples, 0.02%)</title><rect x="67.5112%" y="437" width="0.0240%" height="15" fill="rgb(214,133,25)" fg:x="39409" fg:w="14"/><text x="67.7612%" y="447.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::unpark_lock (8 samples, 0.01%)</title><rect x="67.5369%" y="437" width="0.0137%" height="15" fill="rgb(209,27,14)" fg:x="39424" fg:w="8"/><text x="67.7869%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 0.04%)</title><rect x="67.6072%" y="405" width="0.0411%" height="15" fill="rgb(219,102,51)" fg:x="39465" fg:w="24"/><text x="67.8572%" y="415.50"></text></g><g><title>__futex_hash.constprop.0 (23 samples, 0.04%)</title><rect x="67.8624%" y="325" width="0.0394%" height="15" fill="rgb(237,18,16)" fg:x="39614" fg:w="23"/><text x="68.1124%" y="335.50"></text></g><g><title>_raw_spin_lock (13 samples, 0.02%)</title><rect x="67.9018%" y="325" width="0.0223%" height="15" fill="rgb(241,85,17)" fg:x="39637" fg:w="13"/><text x="68.1518%" y="335.50"></text></g><g><title>futex_wake_mark (110 samples, 0.19%)</title><rect x="67.9258%" y="325" width="0.1884%" height="15" fill="rgb(236,90,42)" fg:x="39651" fg:w="110"/><text x="68.1758%" y="335.50"></text></g><g><title>__futex_unqueue (11 samples, 0.02%)</title><rect x="68.0954%" y="309" width="0.0188%" height="15" fill="rgb(249,57,21)" fg:x="39750" fg:w="11"/><text x="68.3454%" y="319.50"></text></g><g><title>get_futex_key (12 samples, 0.02%)</title><rect x="68.1142%" y="325" width="0.0206%" height="15" fill="rgb(243,12,36)" fg:x="39761" fg:w="12"/><text x="68.3642%" y="335.50"></text></g><g><title>wake_q_add_safe (16 samples, 0.03%)</title><rect x="68.1348%" y="325" width="0.0274%" height="15" fill="rgb(253,128,47)" fg:x="39773" fg:w="16"/><text x="68.3848%" y="335.50"></text></g><g><title>__raw_spin_lock_irqsave (15 samples, 0.03%)</title><rect x="68.2119%" y="293" width="0.0257%" height="15" fill="rgb(207,33,20)" fg:x="39818" fg:w="15"/><text x="68.4619%" y="303.50"></text></g><g><title>__task_rq_lock (391 samples, 0.67%)</title><rect x="68.2376%" y="293" width="0.6698%" height="15" fill="rgb(233,215,35)" fg:x="39833" fg:w="391"/><text x="68.4876%" y="303.50"></text></g><g><title>raw_spin_rq_lock_nested (378 samples, 0.65%)</title><rect x="68.2598%" y="277" width="0.6475%" height="15" fill="rgb(249,188,52)" fg:x="39846" fg:w="378"/><text x="68.5098%" y="287.50"></text></g><g><title>_raw_spin_lock (378 samples, 0.65%)</title><rect x="68.2598%" y="261" width="0.6475%" height="15" fill="rgb(225,12,32)" fg:x="39846" fg:w="378"/><text x="68.5098%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (370 samples, 0.63%)</title><rect x="68.2735%" y="245" width="0.6338%" height="15" fill="rgb(247,98,14)" fg:x="39854" fg:w="370"/><text x="68.5235%" y="255.50"></text></g><g><title>_raw_spin_unlock_irqrestore (8 samples, 0.01%)</title><rect x="68.9074%" y="293" width="0.0137%" height="15" fill="rgb(247,219,48)" fg:x="40224" fg:w="8"/><text x="69.1574%" y="303.50"></text></g><g><title>select_idle_sibling (49 samples, 0.08%)</title><rect x="68.9588%" y="261" width="0.0839%" height="15" fill="rgb(253,60,48)" fg:x="40254" fg:w="49"/><text x="69.2088%" y="271.50"></text></g><g><title>uclamp_eff_value (7 samples, 0.01%)</title><rect x="69.0307%" y="245" width="0.0120%" height="15" fill="rgb(245,15,52)" fg:x="40296" fg:w="7"/><text x="69.2807%" y="255.50"></text></g><g><title>select_task_rq (95 samples, 0.16%)</title><rect x="68.9228%" y="293" width="0.1627%" height="15" fill="rgb(220,133,28)" fg:x="40233" fg:w="95"/><text x="69.1728%" y="303.50"></text></g><g><title>select_task_rq_fair (82 samples, 0.14%)</title><rect x="68.9451%" y="277" width="0.1405%" height="15" fill="rgb(217,180,4)" fg:x="40246" fg:w="82"/><text x="69.1951%" y="287.50"></text></g><g><title>wake_affine (25 samples, 0.04%)</title><rect x="69.0427%" y="261" width="0.0428%" height="15" fill="rgb(251,24,1)" fg:x="40303" fg:w="25"/><text x="69.2927%" y="271.50"></text></g><g><title>available_idle_cpu (24 samples, 0.04%)</title><rect x="69.0444%" y="245" width="0.0411%" height="15" fill="rgb(212,185,49)" fg:x="40304" fg:w="24"/><text x="69.2944%" y="255.50"></text></g><g><title>__smp_call_single_queue (207 samples, 0.35%)</title><rect x="69.1712%" y="277" width="0.3546%" height="15" fill="rgb(215,175,22)" fg:x="40378" fg:w="207"/><text x="69.4212%" y="287.50"></text></g><g><title>call_function_single_prep_ipi (173 samples, 0.30%)</title><rect x="69.2295%" y="261" width="0.2964%" height="15" fill="rgb(250,205,14)" fg:x="40412" fg:w="173"/><text x="69.4795%" y="271.50"></text></g><g><title>__x2apic_send_IPI_dest (19 samples, 0.03%)</title><rect x="69.5258%" y="277" width="0.0325%" height="15" fill="rgb(225,211,22)" fg:x="40585" fg:w="19"/><text x="69.7758%" y="287.50"></text></g><g><title>native_write_msr (17 samples, 0.03%)</title><rect x="69.5292%" y="261" width="0.0291%" height="15" fill="rgb(251,179,42)" fg:x="40587" fg:w="17"/><text x="69.7792%" y="271.50"></text></g><g><title>__x64_sys_futex (1,113 samples, 1.91%)</title><rect x="67.6688%" y="373" width="1.9067%" height="15" fill="rgb(208,216,51)" fg:x="39501" fg:w="1113"/><text x="67.9188%" y="383.50">_..</text></g><g><title>do_futex (1,113 samples, 1.91%)</title><rect x="67.6688%" y="357" width="1.9067%" height="15" fill="rgb(235,36,11)" fg:x="39501" fg:w="1113"/><text x="67.9188%" y="367.50">d..</text></g><g><title>futex_wake (1,107 samples, 1.90%)</title><rect x="67.6791%" y="341" width="1.8964%" height="15" fill="rgb(213,189,28)" fg:x="39507" fg:w="1107"/><text x="67.9291%" y="351.50">f..</text></g><g><title>wake_up_q (825 samples, 1.41%)</title><rect x="68.1622%" y="325" width="1.4133%" height="15" fill="rgb(227,203,42)" fg:x="39789" fg:w="825"/><text x="68.4122%" y="335.50"></text></g><g><title>try_to_wake_up (817 samples, 1.40%)</title><rect x="68.1759%" y="309" width="1.3996%" height="15" fill="rgb(244,72,36)" fg:x="39797" fg:w="817"/><text x="68.4259%" y="319.50"></text></g><g><title>ttwu_queue_wakelist (286 samples, 0.49%)</title><rect x="69.0856%" y="293" width="0.4899%" height="15" fill="rgb(213,53,17)" fg:x="40328" fg:w="286"/><text x="69.3356%" y="303.50"></text></g><g><title>arch_exit_to_user_mode_prepare.isra.0 (12 samples, 0.02%)</title><rect x="69.5755%" y="373" width="0.0206%" height="15" fill="rgb(207,167,3)" fg:x="40614" fg:w="12"/><text x="69.8255%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,151 samples, 1.97%)</title><rect x="67.6483%" y="405" width="1.9718%" height="15" fill="rgb(216,98,30)" fg:x="39489" fg:w="1151"/><text x="67.8983%" y="415.50">e..</text></g><g><title>do_syscall_64 (1,150 samples, 1.97%)</title><rect x="67.6500%" y="389" width="1.9701%" height="15" fill="rgb(236,123,15)" fg:x="39490" fg:w="1150"/><text x="67.9000%" y="399.50">d..</text></g><g><title>x64_sys_call (12 samples, 0.02%)</title><rect x="69.5995%" y="373" width="0.0206%" height="15" fill="rgb(248,81,50)" fg:x="40628" fg:w="12"/><text x="69.8495%" y="383.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1,213 samples, 2.08%)</title><rect x="67.5506%" y="437" width="2.0780%" height="15" fill="rgb(214,120,4)" fg:x="39432" fg:w="1213"/><text x="67.8006%" y="447.50">&lt;..</text></g><g><title>syscall (1,204 samples, 2.06%)</title><rect x="67.5660%" y="421" width="2.0626%" height="15" fill="rgb(208,179,34)" fg:x="39441" fg:w="1204"/><text x="67.8160%" y="431.50">s..</text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.09%)</title><rect x="69.6646%" y="437" width="0.0857%" height="15" fill="rgb(227,140,7)" fg:x="40666" fg:w="50"/><text x="69.9146%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (42 samples, 0.07%)</title><rect x="69.6783%" y="421" width="0.0719%" height="15" fill="rgb(214,22,6)" fg:x="40674" fg:w="42"/><text x="69.9283%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (38 samples, 0.07%)</title><rect x="69.6851%" y="405" width="0.0651%" height="15" fill="rgb(207,137,27)" fg:x="40678" fg:w="38"/><text x="69.9351%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (37 samples, 0.06%)</title><rect x="69.6868%" y="389" width="0.0634%" height="15" fill="rgb(210,8,46)" fg:x="40679" fg:w="37"/><text x="69.9368%" y="399.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="69.7537%" y="437" width="0.0103%" height="15" fill="rgb(240,16,54)" fg:x="40718" fg:w="6"/><text x="70.0037%" y="447.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="69.7845%" y="421" width="0.0223%" height="15" fill="rgb(211,209,29)" fg:x="40736" fg:w="13"/><text x="70.0345%" y="431.50"></text></g><g><title>syscall (13 samples, 0.02%)</title><rect x="69.7845%" y="405" width="0.0223%" height="15" fill="rgb(226,228,24)" fg:x="40736" fg:w="13"/><text x="70.0345%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 0.02%)</title><rect x="69.7845%" y="389" width="0.0223%" height="15" fill="rgb(222,84,9)" fg:x="40736" fg:w="13"/><text x="70.0345%" y="399.50"></text></g><g><title>[unknown] (21 samples, 0.04%)</title><rect x="69.7845%" y="437" width="0.0360%" height="15" fill="rgb(234,203,30)" fg:x="40736" fg:w="21"/><text x="70.0345%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.04%)</title><rect x="69.8393%" y="405" width="0.0411%" height="15" fill="rgb(238,109,14)" fg:x="40768" fg:w="24"/><text x="70.0893%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.04%)</title><rect x="69.8445%" y="389" width="0.0360%" height="15" fill="rgb(233,206,34)" fg:x="40771" fg:w="21"/><text x="70.0945%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.04%)</title><rect x="69.8445%" y="373" width="0.0360%" height="15" fill="rgb(220,167,47)" fg:x="40771" fg:w="21"/><text x="70.0945%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.03%)</title><rect x="69.8804%" y="405" width="0.0325%" height="15" fill="rgb(238,105,10)" fg:x="40792" fg:w="19"/><text x="70.1304%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.02%)</title><rect x="69.8941%" y="389" width="0.0188%" height="15" fill="rgb(213,227,17)" fg:x="40800" fg:w="11"/><text x="70.1441%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 0.02%)</title><rect x="69.8958%" y="373" width="0.0171%" height="15" fill="rgb(217,132,38)" fg:x="40801" fg:w="10"/><text x="70.1458%" y="383.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.05%)</title><rect x="69.9798%" y="405" width="0.0514%" height="15" fill="rgb(242,146,4)" fg:x="40850" fg:w="30"/><text x="70.2298%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (26 samples, 0.04%)</title><rect x="69.9866%" y="389" width="0.0445%" height="15" fill="rgb(212,61,9)" fg:x="40854" fg:w="26"/><text x="70.2366%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (26 samples, 0.04%)</title><rect x="69.9866%" y="373" width="0.0445%" height="15" fill="rgb(247,126,22)" fg:x="40854" fg:w="26"/><text x="70.2366%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (26 samples, 0.04%)</title><rect x="69.9866%" y="357" width="0.0445%" height="15" fill="rgb(220,196,2)" fg:x="40854" fg:w="26"/><text x="70.2366%" y="367.50"></text></g><g><title>[libc.so.6] (6 samples, 0.01%)</title><rect x="70.0415%" y="405" width="0.0103%" height="15" fill="rgb(208,46,4)" fg:x="40886" fg:w="6"/><text x="70.2915%" y="415.50"></text></g><g><title>&lt;I as atoi::MaxNumDigits&gt;::max_num_digits (19 samples, 0.03%)</title><rect x="70.0517%" y="389" width="0.0325%" height="15" fill="rgb(252,104,46)" fg:x="40892" fg:w="19"/><text x="70.3017%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::gt (11 samples, 0.02%)</title><rect x="70.0654%" y="373" width="0.0188%" height="15" fill="rgb(237,152,48)" fg:x="40900" fg:w="11"/><text x="70.3154%" y="383.50"></text></g><g><title>&lt;usize as core::ops::arith::DivAssign&gt;::div_assign (23 samples, 0.04%)</title><rect x="70.1031%" y="389" width="0.0394%" height="15" fill="rgb(221,59,37)" fg:x="40922" fg:w="23"/><text x="70.3531%" y="399.50"></text></g><g><title>atoi::nth (14 samples, 0.02%)</title><rect x="70.1425%" y="389" width="0.0240%" height="15" fill="rgb(209,202,51)" fg:x="40945" fg:w="14"/><text x="70.3925%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.03%)</title><rect x="70.1956%" y="389" width="0.0343%" height="15" fill="rgb(228,81,30)" fg:x="40976" fg:w="20"/><text x="70.4456%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.03%)</title><rect x="70.1973%" y="373" width="0.0325%" height="15" fill="rgb(227,42,39)" fg:x="40977" fg:w="19"/><text x="70.4473%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (27 samples, 0.05%)</title><rect x="70.2299%" y="389" width="0.0463%" height="15" fill="rgb(221,26,2)" fg:x="40996" fg:w="27"/><text x="70.4799%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (27 samples, 0.05%)</title><rect x="70.2299%" y="373" width="0.0463%" height="15" fill="rgb(254,61,31)" fg:x="40996" fg:w="27"/><text x="70.4799%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.03%)</title><rect x="70.2779%" y="389" width="0.0257%" height="15" fill="rgb(222,173,38)" fg:x="41024" fg:w="15"/><text x="70.5279%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_store (10 samples, 0.02%)</title><rect x="70.3036%" y="389" width="0.0171%" height="15" fill="rgb(218,50,12)" fg:x="41039" fg:w="10"/><text x="70.5536%" y="399.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (9 samples, 0.02%)</title><rect x="70.3207%" y="389" width="0.0154%" height="15" fill="rgb(223,88,40)" fg:x="41049" fg:w="9"/><text x="70.5707%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (8 samples, 0.01%)</title><rect x="70.3430%" y="389" width="0.0137%" height="15" fill="rgb(237,54,19)" fg:x="41062" fg:w="8"/><text x="70.5930%" y="399.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (6 samples, 0.01%)</title><rect x="70.3601%" y="389" width="0.0103%" height="15" fill="rgb(251,129,25)" fg:x="41072" fg:w="6"/><text x="70.6101%" y="399.50"></text></g><g><title>[sqlite_single_row_lookup_sqlx-ad447b01e569b511] (195 samples, 0.33%)</title><rect x="70.0517%" y="405" width="0.3341%" height="15" fill="rgb(238,97,19)" fg:x="40892" fg:w="195"/><text x="70.3017%" y="415.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (9 samples, 0.02%)</title><rect x="70.3704%" y="389" width="0.0154%" height="15" fill="rgb(240,169,18)" fg:x="41078" fg:w="9"/><text x="70.6204%" y="399.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_prefix_of (11 samples, 0.02%)</title><rect x="70.3909%" y="389" width="0.0188%" height="15" fill="rgb(230,187,49)" fg:x="41090" fg:w="11"/><text x="70.6409%" y="399.50"></text></g><g><title>&lt;I as atoi::FromRadix10SignedChecked&gt;::from_radix_10_signed_checked (6 samples, 0.01%)</title><rect x="70.4098%" y="389" width="0.0103%" height="15" fill="rgb(209,44,26)" fg:x="41101" fg:w="6"/><text x="70.6598%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.05%)</title><rect x="70.4338%" y="373" width="0.0548%" height="15" fill="rgb(244,0,6)" fg:x="41115" fg:w="32"/><text x="70.6838%" y="383.50"></text></g><g><title>cfree@GLIBC_2.2.5 (32 samples, 0.05%)</title><rect x="70.4338%" y="357" width="0.0548%" height="15" fill="rgb(248,18,21)" fg:x="41115" fg:w="32"/><text x="70.6838%" y="367.50"></text></g><g><title>_int_free_chunk (31 samples, 0.05%)</title><rect x="70.4355%" y="341" width="0.0531%" height="15" fill="rgb(245,180,19)" fg:x="41116" fg:w="31"/><text x="70.6855%" y="351.50"></text></g><g><title>_int_free_merge_chunk (13 samples, 0.02%)</title><rect x="70.4663%" y="325" width="0.0223%" height="15" fill="rgb(252,118,36)" fg:x="41134" fg:w="13"/><text x="70.7163%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42 samples, 0.07%)</title><rect x="70.4252%" y="389" width="0.0719%" height="15" fill="rgb(210,224,19)" fg:x="41110" fg:w="42"/><text x="70.6752%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (8 samples, 0.01%)</title><rect x="70.5160%" y="341" width="0.0137%" height="15" fill="rgb(218,30,24)" fg:x="41163" fg:w="8"/><text x="70.7660%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.01%)</title><rect x="70.5160%" y="325" width="0.0137%" height="15" fill="rgb(219,75,50)" fg:x="41163" fg:w="8"/><text x="70.7660%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (8 samples, 0.01%)</title><rect x="70.5160%" y="309" width="0.0137%" height="15" fill="rgb(234,72,50)" fg:x="41163" fg:w="8"/><text x="70.7660%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (8 samples, 0.01%)</title><rect x="70.5160%" y="293" width="0.0137%" height="15" fill="rgb(219,100,48)" fg:x="41163" fg:w="8"/><text x="70.7660%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.02%)</title><rect x="70.5091%" y="373" width="0.0223%" height="15" fill="rgb(253,5,41)" fg:x="41159" fg:w="13"/><text x="70.7591%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (13 samples, 0.02%)</title><rect x="70.5091%" y="357" width="0.0223%" height="15" fill="rgb(247,181,11)" fg:x="41159" fg:w="13"/><text x="70.7591%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (14 samples, 0.02%)</title><rect x="70.5091%" y="389" width="0.0240%" height="15" fill="rgb(222,223,25)" fg:x="41159" fg:w="14"/><text x="70.7591%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13 samples, 0.02%)</title><rect x="70.5331%" y="389" width="0.0223%" height="15" fill="rgb(214,198,28)" fg:x="41173" fg:w="13"/><text x="70.7831%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.01%)</title><rect x="70.5588%" y="389" width="0.0103%" height="15" fill="rgb(230,46,43)" fg:x="41188" fg:w="6"/><text x="70.8088%" y="399.50"></text></g><g><title>&lt;core::slice::iter::RChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="70.5691%" y="389" width="0.0223%" height="15" fill="rgb(233,65,53)" fg:x="41194" fg:w="13"/><text x="70.8191%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (8 samples, 0.01%)</title><rect x="70.5777%" y="373" width="0.0137%" height="15" fill="rgb(221,121,27)" fg:x="41199" fg:w="8"/><text x="70.8277%" y="383.50"></text></g><g><title>&lt;flume::signal::SyncSignal as core::default::Default&gt;::default (6 samples, 0.01%)</title><rect x="70.5931%" y="373" width="0.0103%" height="15" fill="rgb(247,70,47)" fg:x="41208" fg:w="6"/><text x="70.8431%" y="383.50"></text></g><g><title>&lt;std::thread::Thread as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="70.6085%" y="357" width="0.0137%" height="15" fill="rgb(228,85,35)" fg:x="41217" fg:w="8"/><text x="70.8585%" y="367.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="70.6085%" y="341" width="0.0137%" height="15" fill="rgb(209,50,18)" fg:x="41217" fg:w="8"/><text x="70.8585%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="70.6085%" y="325" width="0.0137%" height="15" fill="rgb(250,19,35)" fg:x="41217" fg:w="8"/><text x="70.8585%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.01%)</title><rect x="70.6085%" y="309" width="0.0137%" height="15" fill="rgb(253,107,29)" fg:x="41217" fg:w="8"/><text x="70.8585%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.01%)</title><rect x="70.6085%" y="293" width="0.0137%" height="15" fill="rgb(252,179,29)" fg:x="41217" fg:w="8"/><text x="70.8585%" y="303.50"></text></g><g><title>&lt;flume::signal::SyncSignal as core::default::Default&gt;::default (24 samples, 0.04%)</title><rect x="70.5914%" y="389" width="0.0411%" height="15" fill="rgb(238,194,6)" fg:x="41207" fg:w="24"/><text x="70.8414%" y="399.50"></text></g><g><title>std::thread::current::current (17 samples, 0.03%)</title><rect x="70.6034%" y="373" width="0.0291%" height="15" fill="rgb(238,164,29)" fg:x="41214" fg:w="17"/><text x="70.8534%" y="383.50"></text></g><g><title>std::sys::thread_local::native::LocalPointer::get (6 samples, 0.01%)</title><rect x="70.6222%" y="357" width="0.0103%" height="15" fill="rgb(224,25,9)" fg:x="41225" fg:w="6"/><text x="70.8722%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="70.6222%" y="341" width="0.0103%" height="15" fill="rgb(244,153,23)" fg:x="41225" fg:w="6"/><text x="70.8722%" y="351.50"></text></g><g><title>&lt;hashlink::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="70.6410%" y="389" width="0.0103%" height="15" fill="rgb(212,203,14)" fg:x="41236" fg:w="6"/><text x="70.8910%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="70.7490%" y="341" width="0.0171%" height="15" fill="rgb(220,164,20)" fg:x="41299" fg:w="10"/><text x="70.9990%" y="351.50"></text></g><g><title>__rust_try (51 samples, 0.09%)</title><rect x="70.6890%" y="389" width="0.0874%" height="15" fill="rgb(222,203,48)" fg:x="41264" fg:w="51"/><text x="70.9390%" y="399.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (51 samples, 0.09%)</title><rect x="70.6890%" y="373" width="0.0874%" height="15" fill="rgb(215,159,22)" fg:x="41264" fg:w="51"/><text x="70.9390%" y="383.50"></text></g><g><title>sqlx_sqlite::connection::worker::ConnectionWorker::establish::{{closure}}::{{closure}} (51 samples, 0.09%)</title><rect x="70.6890%" y="357" width="0.0874%" height="15" fill="rgb(216,183,47)" fg:x="41264" fg:w="51"/><text x="70.9390%" y="367.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.06%)</title><rect x="70.7969%" y="373" width="0.0565%" height="15" fill="rgb(229,195,25)" fg:x="41327" fg:w="33"/><text x="71.0469%" y="383.50"></text></g><g><title>malloc (28 samples, 0.05%)</title><rect x="70.8055%" y="357" width="0.0480%" height="15" fill="rgb(224,132,51)" fg:x="41332" fg:w="28"/><text x="71.0555%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.08%)</title><rect x="70.7764%" y="389" width="0.0822%" height="15" fill="rgb(240,63,7)" fg:x="41315" fg:w="48"/><text x="71.0264%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::iter (7 samples, 0.01%)</title><rect x="70.8586%" y="389" width="0.0120%" height="15" fill="rgb(249,182,41)" fg:x="41363" fg:w="7"/><text x="71.1086%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::from_raw_in (6 samples, 0.01%)</title><rect x="70.9117%" y="389" width="0.0103%" height="15" fill="rgb(243,47,26)" fg:x="41394" fg:w="6"/><text x="71.1617%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::park::Inner&gt;&gt; (6 samples, 0.01%)</title><rect x="70.9254%" y="373" width="0.0103%" height="15" fill="rgb(233,48,2)" fg:x="41402" fg:w="6"/><text x="71.1754%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (16 samples, 0.03%)</title><rect x="70.9220%" y="389" width="0.0274%" height="15" fill="rgb(244,165,34)" fg:x="41400" fg:w="16"/><text x="71.1720%" y="399.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (7 samples, 0.01%)</title><rect x="70.9374%" y="373" width="0.0120%" height="15" fill="rgb(207,89,7)" fg:x="41409" fg:w="7"/><text x="71.1874%" y="383.50"></text></g><g><title>core::cmp::Ord::max (7 samples, 0.01%)</title><rect x="70.9562%" y="389" width="0.0120%" height="15" fill="rgb(244,117,36)" fg:x="41420" fg:w="7"/><text x="71.2062%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (13 samples, 0.02%)</title><rect x="71.0059%" y="389" width="0.0223%" height="15" fill="rgb(226,144,34)" fg:x="41449" fg:w="13"/><text x="71.2559%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="71.0179%" y="373" width="0.0103%" height="15" fill="rgb(213,23,19)" fg:x="41456" fg:w="6"/><text x="71.2679%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (6 samples, 0.01%)</title><rect x="71.0282%" y="389" width="0.0103%" height="15" fill="rgb(217,75,12)" fg:x="41462" fg:w="6"/><text x="71.2782%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="71.0282%" y="373" width="0.0103%" height="15" fill="rgb(224,159,17)" fg:x="41462" fg:w="6"/><text x="71.2782%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.04%)</title><rect x="71.0590%" y="373" width="0.0377%" height="15" fill="rgb(217,118,1)" fg:x="41480" fg:w="22"/><text x="71.3090%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.02%)</title><rect x="71.0727%" y="357" width="0.0240%" height="15" fill="rgb(232,180,48)" fg:x="41488" fg:w="14"/><text x="71.3227%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.02%)</title><rect x="71.0727%" y="341" width="0.0240%" height="15" fill="rgb(230,27,33)" fg:x="41488" fg:w="14"/><text x="71.3227%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.06%)</title><rect x="71.1276%" y="357" width="0.0617%" height="15" fill="rgb(205,31,21)" fg:x="41520" fg:w="36"/><text x="71.3776%" y="367.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (12 samples, 0.02%)</title><rect x="71.1927%" y="341" width="0.0206%" height="15" fill="rgb(253,59,4)" fg:x="41558" fg:w="12"/><text x="71.4427%" y="351.50"></text></g><g><title>tokio::runtime::context::with_scheduler (6 samples, 0.01%)</title><rect x="71.2029%" y="325" width="0.0103%" height="15" fill="rgb(224,201,9)" fg:x="41564" fg:w="6"/><text x="71.4529%" y="335.50"></text></g><g><title>core::task::wake::Waker::wake (15 samples, 0.03%)</title><rect x="71.1892%" y="357" width="0.0257%" height="15" fill="rgb(229,206,30)" fg:x="41556" fg:w="15"/><text x="71.4392%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::oneshot::Sender&lt;()&gt;&gt; (104 samples, 0.18%)</title><rect x="71.0539%" y="389" width="0.1782%" height="15" fill="rgb(212,67,47)" fg:x="41477" fg:w="104"/><text x="71.3039%" y="399.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::drop_tx (77 samples, 0.13%)</title><rect x="71.1001%" y="373" width="0.1319%" height="15" fill="rgb(211,96,50)" fg:x="41504" fg:w="77"/><text x="71.3501%" y="383.50"></text></g><g><title>tokio::util::wake::wake_arc_raw (6 samples, 0.01%)</title><rect x="71.2218%" y="357" width="0.0103%" height="15" fill="rgb(252,114,18)" fg:x="41575" fg:w="6"/><text x="71.4718%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (7 samples, 0.01%)</title><rect x="71.2595%" y="389" width="0.0120%" height="15" fill="rgb(223,58,37)" fg:x="41597" fg:w="7"/><text x="71.5095%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="71.2595%" y="373" width="0.0120%" height="15" fill="rgb(237,70,4)" fg:x="41597" fg:w="7"/><text x="71.5095%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (10 samples, 0.02%)</title><rect x="71.2715%" y="389" width="0.0171%" height="15" fill="rgb(244,85,46)" fg:x="41604" fg:w="10"/><text x="71.5215%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="71.2732%" y="373" width="0.0154%" height="15" fill="rgb(223,39,52)" fg:x="41605" fg:w="9"/><text x="71.5232%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (11 samples, 0.02%)</title><rect x="71.2903%" y="389" width="0.0188%" height="15" fill="rgb(218,200,14)" fg:x="41615" fg:w="11"/><text x="71.5403%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (10 samples, 0.02%)</title><rect x="71.2920%" y="373" width="0.0171%" height="15" fill="rgb(208,171,16)" fg:x="41616" fg:w="10"/><text x="71.5420%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.02%)</title><rect x="71.3434%" y="389" width="0.0223%" height="15" fill="rgb(234,200,18)" fg:x="41646" fg:w="13"/><text x="71.5934%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.02%)</title><rect x="71.3434%" y="373" width="0.0223%" height="15" fill="rgb(228,45,11)" fg:x="41646" fg:w="13"/><text x="71.5934%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.04%)</title><rect x="71.3657%" y="389" width="0.0360%" height="15" fill="rgb(237,182,11)" fg:x="41659" fg:w="21"/><text x="71.6157%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.04%)</title><rect x="71.4051%" y="389" width="0.0411%" height="15" fill="rgb(241,175,49)" fg:x="41682" fg:w="24"/><text x="71.6551%" y="399.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (7 samples, 0.01%)</title><rect x="71.4685%" y="389" width="0.0120%" height="15" fill="rgb(247,38,35)" fg:x="41719" fg:w="7"/><text x="71.7185%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (11 samples, 0.02%)</title><rect x="71.5370%" y="373" width="0.0188%" height="15" fill="rgb(228,39,49)" fg:x="41759" fg:w="11"/><text x="71.7870%" y="383.50"></text></g><g><title>foldhash::hash_bytes_medium (43 samples, 0.07%)</title><rect x="71.4890%" y="389" width="0.0737%" height="15" fill="rgb(226,101,26)" fg:x="41731" fg:w="43"/><text x="71.7390%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (9 samples, 0.02%)</title><rect x="71.5850%" y="389" width="0.0154%" height="15" fill="rgb(206,141,19)" fg:x="41787" fg:w="9"/><text x="71.8350%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (16 samples, 0.03%)</title><rect x="71.6860%" y="389" width="0.0274%" height="15" fill="rgb(211,200,13)" fg:x="41846" fg:w="16"/><text x="71.9360%" y="399.50"></text></g><g><title>sqlx_sqlite::row::SqliteRow::current (9 samples, 0.02%)</title><rect x="71.7271%" y="389" width="0.0154%" height="15" fill="rgb(241,121,6)" fg:x="41870" fg:w="9"/><text x="71.9771%" y="399.50"></text></g><g><title>sqlx_sqlite::statement::handle::StatementHandle::bind_parameter_count (9 samples, 0.02%)</title><rect x="71.7426%" y="389" width="0.0154%" height="15" fill="rgb(234,221,29)" fg:x="41879" fg:w="9"/><text x="71.9926%" y="399.50"></text></g><g><title>sqlx_sqlite::statement::virtual::VirtualStatement::prepare_next (10 samples, 0.02%)</title><rect x="71.7631%" y="389" width="0.0171%" height="15" fill="rgb(229,136,5)" fg:x="41891" fg:w="10"/><text x="72.0131%" y="399.50"></text></g><g><title>syscall (8 samples, 0.01%)</title><rect x="71.7957%" y="389" width="0.0137%" height="15" fill="rgb(238,36,11)" fg:x="41910" fg:w="8"/><text x="72.0457%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.01%)</title><rect x="71.7957%" y="373" width="0.0137%" height="15" fill="rgb(251,55,41)" fg:x="41910" fg:w="8"/><text x="72.0457%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::push (14 samples, 0.02%)</title><rect x="71.8231%" y="389" width="0.0240%" height="15" fill="rgb(242,34,40)" fg:x="41926" fg:w="14"/><text x="72.0731%" y="399.50"></text></g><g><title>[unknown] (867 samples, 1.49%)</title><rect x="70.3858%" y="405" width="1.4853%" height="15" fill="rgb(215,42,17)" fg:x="41087" fg:w="867"/><text x="70.6358%" y="415.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::slot (6 samples, 0.01%)</title><rect x="71.8796%" y="389" width="0.0103%" height="15" fill="rgb(207,44,46)" fg:x="41959" fg:w="6"/><text x="72.1296%" y="399.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="71.8796%" y="373" width="0.0103%" height="15" fill="rgb(211,206,28)" fg:x="41959" fg:w="6"/><text x="72.1296%" y="383.50"></text></g><g><title>__dso_handle (21 samples, 0.04%)</title><rect x="71.8710%" y="405" width="0.0360%" height="15" fill="rgb(237,167,16)" fg:x="41954" fg:w="21"/><text x="72.1210%" y="415.50"></text></g><g><title>__madvise (94 samples, 0.16%)</title><rect x="71.9087%" y="405" width="0.1610%" height="15" fill="rgb(233,66,6)" fg:x="41976" fg:w="94"/><text x="72.1587%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (94 samples, 0.16%)</title><rect x="71.9087%" y="389" width="0.1610%" height="15" fill="rgb(246,123,29)" fg:x="41976" fg:w="94"/><text x="72.1587%" y="399.50"></text></g><g><title>do_syscall_64 (94 samples, 0.16%)</title><rect x="71.9087%" y="373" width="0.1610%" height="15" fill="rgb(209,62,40)" fg:x="41976" fg:w="94"/><text x="72.1587%" y="383.50"></text></g><g><title>__x64_sys_madvise (94 samples, 0.16%)</title><rect x="71.9087%" y="357" width="0.1610%" height="15" fill="rgb(218,4,25)" fg:x="41976" fg:w="94"/><text x="72.1587%" y="367.50"></text></g><g><title>do_madvise (94 samples, 0.16%)</title><rect x="71.9087%" y="341" width="0.1610%" height="15" fill="rgb(253,91,49)" fg:x="41976" fg:w="94"/><text x="72.1587%" y="351.50"></text></g><g><title>tlb_finish_mmu (89 samples, 0.15%)</title><rect x="71.9173%" y="325" width="0.1525%" height="15" fill="rgb(228,155,29)" fg:x="41981" fg:w="89"/><text x="72.1673%" y="335.50"></text></g><g><title>flush_tlb_mm_range (88 samples, 0.15%)</title><rect x="71.9190%" y="309" width="0.1508%" height="15" fill="rgb(243,57,37)" fg:x="41982" fg:w="88"/><text x="72.1690%" y="319.50"></text></g><g><title>on_each_cpu_cond_mask (85 samples, 0.15%)</title><rect x="71.9241%" y="293" width="0.1456%" height="15" fill="rgb(244,167,17)" fg:x="41985" fg:w="85"/><text x="72.1741%" y="303.50"></text></g><g><title>smp_call_function_many_cond (85 samples, 0.15%)</title><rect x="71.9241%" y="277" width="0.1456%" height="15" fill="rgb(207,181,38)" fg:x="41985" fg:w="85"/><text x="72.1741%" y="287.50"></text></g><g><title>_fini (7 samples, 0.01%)</title><rect x="72.0800%" y="405" width="0.0120%" height="15" fill="rgb(211,8,23)" fg:x="42076" fg:w="7"/><text x="72.3300%" y="415.50"></text></g><g><title>aWindowFuncs.38 (6 samples, 0.01%)</title><rect x="72.0920%" y="405" width="0.0103%" height="15" fill="rgb(235,11,44)" fg:x="42083" fg:w="6"/><text x="72.3420%" y="415.50"></text></g><g><title>atoi::Sign::try_from (7 samples, 0.01%)</title><rect x="72.1194%" y="405" width="0.0120%" height="15" fill="rgb(248,18,52)" fg:x="42099" fg:w="7"/><text x="72.3694%" y="415.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (6 samples, 0.01%)</title><rect x="72.1366%" y="405" width="0.0103%" height="15" fill="rgb(208,4,7)" fg:x="42109" fg:w="6"/><text x="72.3866%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.02%)</title><rect x="72.1537%" y="405" width="0.0206%" height="15" fill="rgb(240,17,39)" fg:x="42119" fg:w="12"/><text x="72.4037%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.02%)</title><rect x="72.1743%" y="405" width="0.0154%" height="15" fill="rgb(207,170,3)" fg:x="42131" fg:w="9"/><text x="72.4243%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (9 samples, 0.02%)</title><rect x="72.1897%" y="405" width="0.0154%" height="15" fill="rgb(236,100,52)" fg:x="42140" fg:w="9"/><text x="72.4397%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="72.1897%" y="389" width="0.0154%" height="15" fill="rgb(246,78,51)" fg:x="42140" fg:w="9"/><text x="72.4397%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (7 samples, 0.01%)</title><rect x="72.2342%" y="405" width="0.0120%" height="15" fill="rgb(211,17,15)" fg:x="42166" fg:w="7"/><text x="72.4842%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (6 samples, 0.01%)</title><rect x="72.2565%" y="389" width="0.0103%" height="15" fill="rgb(209,59,46)" fg:x="42179" fg:w="6"/><text x="72.5065%" y="399.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::slot (24 samples, 0.04%)</title><rect x="72.2668%" y="389" width="0.0411%" height="15" fill="rgb(210,92,25)" fg:x="42185" fg:w="24"/><text x="72.5168%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (18 samples, 0.03%)</title><rect x="72.2770%" y="373" width="0.0308%" height="15" fill="rgb(238,174,52)" fg:x="42191" fg:w="18"/><text x="72.5270%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="72.2925%" y="357" width="0.0154%" height="15" fill="rgb(230,73,7)" fg:x="42200" fg:w="9"/><text x="72.5425%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="72.2959%" y="341" width="0.0120%" height="15" fill="rgb(243,124,40)" fg:x="42202" fg:w="7"/><text x="72.5459%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (35 samples, 0.06%)</title><rect x="72.2513%" y="405" width="0.0600%" height="15" fill="rgb(244,170,11)" fg:x="42176" fg:w="35"/><text x="72.5013%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (43 samples, 0.07%)</title><rect x="72.3130%" y="405" width="0.0737%" height="15" fill="rgb(207,114,54)" fg:x="42212" fg:w="43"/><text x="72.5630%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (42 samples, 0.07%)</title><rect x="72.3147%" y="389" width="0.0719%" height="15" fill="rgb(205,42,20)" fg:x="42213" fg:w="42"/><text x="72.5647%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.01%)</title><rect x="72.3884%" y="405" width="0.0120%" height="15" fill="rgb(230,30,28)" fg:x="42256" fg:w="7"/><text x="72.6384%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.01%)</title><rect x="72.3884%" y="389" width="0.0120%" height="15" fill="rgb(205,73,54)" fg:x="42256" fg:w="7"/><text x="72.6384%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (113 samples, 0.19%)</title><rect x="72.4004%" y="405" width="0.1936%" height="15" fill="rgb(254,227,23)" fg:x="42263" fg:w="113"/><text x="72.6504%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.02%)</title><rect x="72.5940%" y="405" width="0.0171%" height="15" fill="rgb(228,202,34)" fg:x="42376" fg:w="10"/><text x="72.8440%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (28 samples, 0.05%)</title><rect x="72.6111%" y="405" width="0.0480%" height="15" fill="rgb(222,225,37)" fg:x="42386" fg:w="28"/><text x="72.8611%" y="415.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::signal (6 samples, 0.01%)</title><rect x="72.6711%" y="405" width="0.0103%" height="15" fill="rgb(221,14,54)" fg:x="42421" fg:w="6"/><text x="72.9211%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::Thread&gt; (9 samples, 0.02%)</title><rect x="72.6967%" y="373" width="0.0154%" height="15" fill="rgb(254,102,2)" fg:x="42436" fg:w="9"/><text x="72.9467%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="72.6967%" y="357" width="0.0154%" height="15" fill="rgb(232,104,17)" fg:x="42436" fg:w="9"/><text x="72.9467%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt; (9 samples, 0.02%)</title><rect x="72.6967%" y="341" width="0.0154%" height="15" fill="rgb(250,220,14)" fg:x="42436" fg:w="9"/><text x="72.9467%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="72.6967%" y="325" width="0.0154%" height="15" fill="rgb(241,158,9)" fg:x="42436" fg:w="9"/><text x="72.9467%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.02%)</title><rect x="72.6967%" y="309" width="0.0154%" height="15" fill="rgb(246,9,43)" fg:x="42436" fg:w="9"/><text x="72.9467%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.02%)</title><rect x="72.6967%" y="293" width="0.0154%" height="15" fill="rgb(206,73,33)" fg:x="42436" fg:w="9"/><text x="72.9467%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (66 samples, 0.11%)</title><rect x="72.7139%" y="341" width="0.1131%" height="15" fill="rgb(222,79,8)" fg:x="42446" fg:w="66"/><text x="72.9639%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (66 samples, 0.11%)</title><rect x="72.7139%" y="325" width="0.1131%" height="15" fill="rgb(234,8,54)" fg:x="42446" fg:w="66"/><text x="72.9639%" y="335.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.04%)</title><rect x="72.9383%" y="309" width="0.0428%" height="15" fill="rgb(209,134,38)" fg:x="42577" fg:w="25"/><text x="73.1883%" y="319.50"></text></g><g><title>pick_next_task_fair (39 samples, 0.07%)</title><rect x="73.4162%" y="149" width="0.0668%" height="15" fill="rgb(230,127,29)" fg:x="42856" fg:w="39"/><text x="73.6662%" y="159.50"></text></g><g><title>sched_balance_newidle (27 samples, 0.05%)</title><rect x="73.4368%" y="133" width="0.0463%" height="15" fill="rgb(242,44,41)" fg:x="42868" fg:w="27"/><text x="73.6868%" y="143.50"></text></g><g><title>put_prev_task_fair (23 samples, 0.04%)</title><rect x="73.4831%" y="149" width="0.0394%" height="15" fill="rgb(222,56,43)" fg:x="42895" fg:w="23"/><text x="73.7331%" y="159.50"></text></g><g><title>put_prev_entity (12 samples, 0.02%)</title><rect x="73.5019%" y="133" width="0.0206%" height="15" fill="rgb(238,39,47)" fg:x="42906" fg:w="12"/><text x="73.7519%" y="143.50"></text></g><g><title>__pick_next_task (84 samples, 0.14%)</title><rect x="73.3837%" y="165" width="0.1439%" height="15" fill="rgb(226,79,43)" fg:x="42837" fg:w="84"/><text x="73.6337%" y="175.50"></text></g><g><title>__rcu_read_unlock (7 samples, 0.01%)</title><rect x="73.7246%" y="133" width="0.0120%" height="15" fill="rgb(242,105,53)" fg:x="43036" fg:w="7"/><text x="73.9746%" y="143.50"></text></g><g><title>_raw_spin_unlock (11 samples, 0.02%)</title><rect x="73.7366%" y="133" width="0.0188%" height="15" fill="rgb(251,132,46)" fg:x="43043" fg:w="11"/><text x="73.9866%" y="143.50"></text></g><g><title>perf_ctx_enable (17 samples, 0.03%)</title><rect x="73.7554%" y="133" width="0.0291%" height="15" fill="rgb(231,77,14)" fg:x="43054" fg:w="17"/><text x="74.0054%" y="143.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (17 samples, 0.03%)</title><rect x="73.7554%" y="117" width="0.0291%" height="15" fill="rgb(240,135,9)" fg:x="43054" fg:w="17"/><text x="74.0054%" y="127.50"></text></g><g><title>native_write_msr (17 samples, 0.03%)</title><rect x="73.7554%" y="101" width="0.0291%" height="15" fill="rgb(248,109,14)" fg:x="43054" fg:w="17"/><text x="74.0054%" y="111.50"></text></g><g><title>__perf_event_task_sched_in (104 samples, 0.18%)</title><rect x="73.7023%" y="149" width="0.1782%" height="15" fill="rgb(227,146,52)" fg:x="43023" fg:w="104"/><text x="73.9523%" y="159.50"></text></g><g><title>perf_ctx_unlock (56 samples, 0.10%)</title><rect x="73.7846%" y="133" width="0.0959%" height="15" fill="rgb(232,54,3)" fg:x="43071" fg:w="56"/><text x="74.0346%" y="143.50"></text></g><g><title>_raw_spin_unlock (11 samples, 0.02%)</title><rect x="73.8617%" y="117" width="0.0188%" height="15" fill="rgb(229,201,43)" fg:x="43116" fg:w="11"/><text x="74.1117%" y="127.50"></text></g><g><title>__hrtimer_run_queues (6 samples, 0.01%)</title><rect x="73.8839%" y="85" width="0.0103%" height="15" fill="rgb(252,161,33)" fg:x="43129" fg:w="6"/><text x="74.1339%" y="95.50"></text></g><g><title>tick_nohz_handler (6 samples, 0.01%)</title><rect x="73.8839%" y="69" width="0.0103%" height="15" fill="rgb(226,146,40)" fg:x="43129" fg:w="6"/><text x="74.1339%" y="79.50"></text></g><g><title>update_process_times (6 samples, 0.01%)</title><rect x="73.8839%" y="53" width="0.0103%" height="15" fill="rgb(219,47,25)" fg:x="43129" fg:w="6"/><text x="74.1339%" y="63.50"></text></g><g><title>finish_task_switch.isra.0 (214 samples, 0.37%)</title><rect x="73.5293%" y="165" width="0.3666%" height="15" fill="rgb(250,135,13)" fg:x="42922" fg:w="214"/><text x="73.7793%" y="175.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (8 samples, 0.01%)</title><rect x="73.8822%" y="149" width="0.0137%" height="15" fill="rgb(219,229,18)" fg:x="43128" fg:w="8"/><text x="74.1322%" y="159.50"></text></g><g><title>sysvec_apic_timer_interrupt (8 samples, 0.01%)</title><rect x="73.8822%" y="133" width="0.0137%" height="15" fill="rgb(217,152,27)" fg:x="43128" fg:w="8"/><text x="74.1322%" y="143.50"></text></g><g><title>__sysvec_apic_timer_interrupt (7 samples, 0.01%)</title><rect x="73.8839%" y="117" width="0.0120%" height="15" fill="rgb(225,71,47)" fg:x="43129" fg:w="7"/><text x="74.1339%" y="127.50"></text></g><g><title>hrtimer_interrupt (7 samples, 0.01%)</title><rect x="73.8839%" y="101" width="0.0120%" height="15" fill="rgb(220,139,14)" fg:x="43129" fg:w="7"/><text x="74.1339%" y="111.50"></text></g><g><title>_raw_spin_lock (10 samples, 0.02%)</title><rect x="73.9610%" y="117" width="0.0171%" height="15" fill="rgb(247,54,32)" fg:x="43174" fg:w="10"/><text x="74.2110%" y="127.50"></text></g><g><title>prepare_task_switch (102 samples, 0.17%)</title><rect x="73.8976%" y="165" width="0.1747%" height="15" fill="rgb(252,131,39)" fg:x="43137" fg:w="102"/><text x="74.1476%" y="175.50"></text></g><g><title>__perf_event_task_sched_out (87 samples, 0.15%)</title><rect x="73.9233%" y="149" width="0.1490%" height="15" fill="rgb(210,108,39)" fg:x="43152" fg:w="87"/><text x="74.1733%" y="159.50"></text></g><g><title>perf_event_context_sched_out (79 samples, 0.14%)</title><rect x="73.9370%" y="133" width="0.1353%" height="15" fill="rgb(205,23,29)" fg:x="43160" fg:w="79"/><text x="74.1870%" y="143.50"></text></g><g><title>perf_ctx_disable (55 samples, 0.09%)</title><rect x="73.9781%" y="117" width="0.0942%" height="15" fill="rgb(246,139,46)" fg:x="43184" fg:w="55"/><text x="74.2281%" y="127.50"></text></g><g><title>perf_pmu_nop_void (6 samples, 0.01%)</title><rect x="74.0621%" y="101" width="0.0103%" height="15" fill="rgb(250,81,26)" fg:x="43233" fg:w="6"/><text x="74.3121%" y="111.50"></text></g><g><title>record_times (23 samples, 0.04%)</title><rect x="74.1083%" y="149" width="0.0394%" height="15" fill="rgb(214,104,7)" fg:x="43260" fg:w="23"/><text x="74.3583%" y="159.50"></text></g><g><title>psi_account_irqtime (56 samples, 0.10%)</title><rect x="74.0724%" y="165" width="0.0959%" height="15" fill="rgb(233,189,8)" fg:x="43239" fg:w="56"/><text x="74.3224%" y="175.50"></text></g><g><title>sched_clock_cpu (12 samples, 0.02%)</title><rect x="74.1477%" y="149" width="0.0206%" height="15" fill="rgb(228,141,17)" fg:x="43283" fg:w="12"/><text x="74.3977%" y="159.50"></text></g><g><title>sched_clock (11 samples, 0.02%)</title><rect x="74.1495%" y="133" width="0.0188%" height="15" fill="rgb(247,157,1)" fg:x="43284" fg:w="11"/><text x="74.3995%" y="143.50"></text></g><g><title>native_sched_clock (10 samples, 0.02%)</title><rect x="74.1512%" y="117" width="0.0171%" height="15" fill="rgb(249,225,5)" fg:x="43285" fg:w="10"/><text x="74.4012%" y="127.50"></text></g><g><title>psi_group_change (61 samples, 0.10%)</title><rect x="74.1906%" y="149" width="0.1045%" height="15" fill="rgb(242,55,13)" fg:x="43308" fg:w="61"/><text x="74.4406%" y="159.50"></text></g><g><title>psi_task_switch (79 samples, 0.14%)</title><rect x="74.1683%" y="165" width="0.1353%" height="15" fill="rgb(230,49,50)" fg:x="43295" fg:w="79"/><text x="74.4183%" y="175.50"></text></g><g><title>__calc_delta.constprop.0 (24 samples, 0.04%)</title><rect x="74.6308%" y="85" width="0.0411%" height="15" fill="rgb(241,111,38)" fg:x="43565" fg:w="24"/><text x="74.8808%" y="95.50"></text></g><g><title>__cgroup_account_cputime (11 samples, 0.02%)</title><rect x="74.6719%" y="85" width="0.0188%" height="15" fill="rgb(252,155,4)" fg:x="43589" fg:w="11"/><text x="74.9219%" y="95.50"></text></g><g><title>cpuacct_charge (25 samples, 0.04%)</title><rect x="74.6908%" y="85" width="0.0428%" height="15" fill="rgb(212,69,32)" fg:x="43600" fg:w="25"/><text x="74.9408%" y="95.50"></text></g><g><title>update_curr_se (18 samples, 0.03%)</title><rect x="74.7370%" y="85" width="0.0308%" height="15" fill="rgb(243,107,47)" fg:x="43627" fg:w="18"/><text x="74.9870%" y="95.50"></text></g><g><title>update_curr (152 samples, 0.26%)</title><rect x="74.5315%" y="101" width="0.2604%" height="15" fill="rgb(247,130,12)" fg:x="43507" fg:w="152"/><text x="74.7815%" y="111.50"></text></g><g><title>update_min_vruntime (14 samples, 0.02%)</title><rect x="74.7679%" y="85" width="0.0240%" height="15" fill="rgb(233,74,16)" fg:x="43645" fg:w="14"/><text x="75.0179%" y="95.50"></text></g><g><title>__calc_delta.constprop.0 (8 samples, 0.01%)</title><rect x="74.8158%" y="85" width="0.0137%" height="15" fill="rgb(208,58,18)" fg:x="43673" fg:w="8"/><text x="75.0658%" y="95.50"></text></g><g><title>update_entity_lag (57 samples, 0.10%)</title><rect x="74.7919%" y="101" width="0.0976%" height="15" fill="rgb(242,225,1)" fg:x="43659" fg:w="57"/><text x="75.0419%" y="111.50"></text></g><g><title>avg_vruntime (35 samples, 0.06%)</title><rect x="74.8295%" y="85" width="0.0600%" height="15" fill="rgb(249,39,40)" fg:x="43681" fg:w="35"/><text x="75.0795%" y="95.50"></text></g><g><title>__update_load_avg_cfs_rq (29 samples, 0.05%)</title><rect x="74.9306%" y="85" width="0.0497%" height="15" fill="rgb(207,72,44)" fg:x="43740" fg:w="29"/><text x="75.1806%" y="95.50"></text></g><g><title>__update_load_avg_se (15 samples, 0.03%)</title><rect x="74.9803%" y="85" width="0.0257%" height="15" fill="rgb(215,193,12)" fg:x="43769" fg:w="15"/><text x="75.2303%" y="95.50"></text></g><g><title>update_load_avg (75 samples, 0.13%)</title><rect x="74.8895%" y="101" width="0.1285%" height="15" fill="rgb(248,41,39)" fg:x="43716" fg:w="75"/><text x="75.1395%" y="111.50"></text></g><g><title>propagate_entity_load_avg (7 samples, 0.01%)</title><rect x="75.0060%" y="85" width="0.0120%" height="15" fill="rgb(253,85,4)" fg:x="43784" fg:w="7"/><text x="75.2560%" y="95.50"></text></g><g><title>dequeue_entity (357 samples, 0.61%)</title><rect x="74.4390%" y="117" width="0.6116%" height="15" fill="rgb(243,70,31)" fg:x="43453" fg:w="357"/><text x="74.6890%" y="127.50"></text></g><g><title>vruntime_eligible (15 samples, 0.03%)</title><rect x="75.0248%" y="101" width="0.0257%" height="15" fill="rgb(253,195,26)" fg:x="43795" fg:w="15"/><text x="75.2748%" y="111.50"></text></g><g><title>__raw_spin_lock_irqsave (19 samples, 0.03%)</title><rect x="75.0745%" y="85" width="0.0325%" height="15" fill="rgb(243,42,11)" fg:x="43824" fg:w="19"/><text x="75.3245%" y="95.50"></text></g><g><title>ktime_get (34 samples, 0.06%)</title><rect x="75.1105%" y="85" width="0.0582%" height="15" fill="rgb(239,66,17)" fg:x="43845" fg:w="34"/><text x="75.3605%" y="95.50"></text></g><g><title>read_tsc (28 samples, 0.05%)</title><rect x="75.1208%" y="69" width="0.0480%" height="15" fill="rgb(217,132,21)" fg:x="43851" fg:w="28"/><text x="75.3708%" y="79.50"></text></g><g><title>hrtimer_start_range_ns (117 samples, 0.20%)</title><rect x="75.0608%" y="101" width="0.2004%" height="15" fill="rgb(252,202,21)" fg:x="43816" fg:w="117"/><text x="75.3108%" y="111.50"></text></g><g><title>timerqueue_add (50 samples, 0.09%)</title><rect x="75.1756%" y="85" width="0.0857%" height="15" fill="rgb(233,98,36)" fg:x="43883" fg:w="50"/><text x="75.4256%" y="95.50"></text></g><g><title>__remove_hrtimer (16 samples, 0.03%)</title><rect x="75.2852%" y="85" width="0.0274%" height="15" fill="rgb(216,153,54)" fg:x="43947" fg:w="16"/><text x="75.5352%" y="95.50"></text></g><g><title>timerqueue_del (14 samples, 0.02%)</title><rect x="75.2887%" y="69" width="0.0240%" height="15" fill="rgb(250,99,7)" fg:x="43949" fg:w="14"/><text x="75.5387%" y="79.50"></text></g><g><title>rb_erase (12 samples, 0.02%)</title><rect x="75.2921%" y="53" width="0.0206%" height="15" fill="rgb(207,56,50)" fg:x="43951" fg:w="12"/><text x="75.5421%" y="63.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (31 samples, 0.05%)</title><rect x="75.2664%" y="101" width="0.0531%" height="15" fill="rgb(244,61,34)" fg:x="43936" fg:w="31"/><text x="75.5164%" y="111.50"></text></g><g><title>dequeue_entities (595 samples, 1.02%)</title><rect x="74.3362%" y="133" width="1.0193%" height="15" fill="rgb(241,50,38)" fg:x="43393" fg:w="595"/><text x="74.5862%" y="143.50"></text></g><g><title>dl_server_stop (178 samples, 0.30%)</title><rect x="75.0505%" y="117" width="0.3049%" height="15" fill="rgb(212,166,30)" fg:x="43810" fg:w="178"/><text x="75.3005%" y="127.50"></text></g><g><title>task_non_contending (20 samples, 0.03%)</title><rect x="75.3212%" y="101" width="0.0343%" height="15" fill="rgb(249,127,32)" fg:x="43968" fg:w="20"/><text x="75.5712%" y="111.50"></text></g><g><title>try_to_block_task.isra.0 (608 samples, 1.04%)</title><rect x="74.3173%" y="165" width="1.0416%" height="15" fill="rgb(209,103,0)" fg:x="43382" fg:w="608"/><text x="74.5673%" y="175.50"></text></g><g><title>dequeue_task_fair (601 samples, 1.03%)</title><rect x="74.3293%" y="149" width="1.0296%" height="15" fill="rgb(238,209,51)" fg:x="43389" fg:w="601"/><text x="74.5793%" y="159.50"></text></g><g><title>native_sched_clock (20 samples, 0.03%)</title><rect x="75.3623%" y="117" width="0.0343%" height="15" fill="rgb(237,56,23)" fg:x="43992" fg:w="20"/><text x="75.6123%" y="127.50"></text></g><g><title>update_rq_clock (23 samples, 0.04%)</title><rect x="75.3589%" y="165" width="0.0394%" height="15" fill="rgb(215,153,46)" fg:x="43990" fg:w="23"/><text x="75.6089%" y="175.50"></text></g><g><title>sched_clock_cpu (23 samples, 0.04%)</title><rect x="75.3589%" y="149" width="0.0394%" height="15" fill="rgb(224,49,31)" fg:x="43990" fg:w="23"/><text x="75.6089%" y="159.50"></text></g><g><title>sched_clock (23 samples, 0.04%)</title><rect x="75.3589%" y="133" width="0.0394%" height="15" fill="rgb(250,18,42)" fg:x="43990" fg:w="23"/><text x="75.6089%" y="143.50"></text></g><g><title>futex_do_wait (1,297 samples, 2.22%)</title><rect x="73.2158%" y="213" width="2.2219%" height="15" fill="rgb(215,176,39)" fg:x="42739" fg:w="1297"/><text x="73.4658%" y="223.50">f..</text></g><g><title>schedule (1,278 samples, 2.19%)</title><rect x="73.2484%" y="197" width="2.1893%" height="15" fill="rgb(223,77,29)" fg:x="42758" fg:w="1278"/><text x="73.4984%" y="207.50">s..</text></g><g><title>__schedule (1,237 samples, 2.12%)</title><rect x="73.3186%" y="181" width="2.1191%" height="15" fill="rgb(234,94,52)" fg:x="42799" fg:w="1237"/><text x="73.5686%" y="191.50">_..</text></g><g><title>update_rq_clock_task (23 samples, 0.04%)</title><rect x="75.3983%" y="165" width="0.0394%" height="15" fill="rgb(220,154,50)" fg:x="44013" fg:w="23"/><text x="75.6483%" y="175.50"></text></g><g><title>update_irq_load_avg (14 samples, 0.02%)</title><rect x="75.4137%" y="149" width="0.0240%" height="15" fill="rgb(212,11,10)" fg:x="44022" fg:w="14"/><text x="75.6637%" y="159.50"></text></g><g><title>futex_unqueue (42 samples, 0.07%)</title><rect x="75.4377%" y="213" width="0.0719%" height="15" fill="rgb(205,166,19)" fg:x="44036" fg:w="42"/><text x="75.6877%" y="223.50"></text></g><g><title>__futex_hash.constprop.0 (20 samples, 0.03%)</title><rect x="75.5730%" y="197" width="0.0343%" height="15" fill="rgb(244,198,16)" fg:x="44115" fg:w="20"/><text x="75.8230%" y="207.50"></text></g><g><title>__futex_queue (12 samples, 0.02%)</title><rect x="75.6073%" y="197" width="0.0206%" height="15" fill="rgb(219,69,12)" fg:x="44135" fg:w="12"/><text x="75.8573%" y="207.50"></text></g><g><title>plist_add (11 samples, 0.02%)</title><rect x="75.6090%" y="181" width="0.0188%" height="15" fill="rgb(245,30,7)" fg:x="44136" fg:w="11"/><text x="75.8590%" y="191.50"></text></g><g><title>_raw_spin_lock (11 samples, 0.02%)</title><rect x="75.6278%" y="197" width="0.0188%" height="15" fill="rgb(218,221,48)" fg:x="44147" fg:w="11"/><text x="75.8778%" y="207.50"></text></g><g><title>futex_q_lock (75 samples, 0.13%)</title><rect x="75.6467%" y="197" width="0.1285%" height="15" fill="rgb(216,66,15)" fg:x="44158" fg:w="75"/><text x="75.8967%" y="207.50"></text></g><g><title>__x64_sys_futex (1,639 samples, 2.81%)</title><rect x="73.0000%" y="277" width="2.8078%" height="15" fill="rgb(226,122,50)" fg:x="42613" fg:w="1639"/><text x="73.2500%" y="287.50">__..</text></g><g><title>do_futex (1,636 samples, 2.80%)</title><rect x="73.0051%" y="261" width="2.8026%" height="15" fill="rgb(239,156,16)" fg:x="42616" fg:w="1636"/><text x="73.2551%" y="271.50">do..</text></g><g><title>futex_wait (1,627 samples, 2.79%)</title><rect x="73.0205%" y="245" width="2.7872%" height="15" fill="rgb(224,27,38)" fg:x="42625" fg:w="1627"/><text x="73.2705%" y="255.50">fu..</text></g><g><title>__futex_wait (1,571 samples, 2.69%)</title><rect x="73.1165%" y="229" width="2.6913%" height="15" fill="rgb(224,39,27)" fg:x="42681" fg:w="1571"/><text x="73.3665%" y="239.50">__..</text></g><g><title>futex_wait_setup (174 samples, 0.30%)</title><rect x="75.5096%" y="213" width="0.2981%" height="15" fill="rgb(215,92,29)" fg:x="44078" fg:w="174"/><text x="75.7596%" y="223.50"></text></g><g><title>get_futex_key (19 samples, 0.03%)</title><rect x="75.7752%" y="197" width="0.0325%" height="15" fill="rgb(207,159,16)" fg:x="44233" fg:w="19"/><text x="76.0252%" y="207.50"></text></g><g><title>arch_exit_to_user_mode_prepare.isra.0 (44 samples, 0.08%)</title><rect x="75.8077%" y="277" width="0.0754%" height="15" fill="rgb(238,163,47)" fg:x="44252" fg:w="44"/><text x="76.0577%" y="287.50"></text></g><g><title>switch_fpu_return (24 samples, 0.04%)</title><rect x="75.8420%" y="261" width="0.0411%" height="15" fill="rgb(219,91,49)" fg:x="44272" fg:w="24"/><text x="76.0920%" y="271.50"></text></g><g><title>__put_user_8 (23 samples, 0.04%)</title><rect x="75.9962%" y="229" width="0.0394%" height="15" fill="rgb(227,167,31)" fg:x="44362" fg:w="23"/><text x="76.2462%" y="239.50"></text></g><g><title>rseq_ip_fixup (73 samples, 0.13%)</title><rect x="75.9688%" y="245" width="0.1251%" height="15" fill="rgb(234,80,54)" fg:x="44346" fg:w="73"/><text x="76.2188%" y="255.50"></text></g><g><title>rseq_get_rseq_cs.isra.0 (34 samples, 0.06%)</title><rect x="76.0356%" y="229" width="0.0582%" height="15" fill="rgb(212,114,2)" fg:x="44385" fg:w="34"/><text x="76.2856%" y="239.50"></text></g><g><title>__get_user_8 (24 samples, 0.04%)</title><rect x="76.0527%" y="213" width="0.0411%" height="15" fill="rgb(234,50,24)" fg:x="44395" fg:w="24"/><text x="76.3027%" y="223.50"></text></g><g><title>__rseq_handle_notify_resume (107 samples, 0.18%)</title><rect x="75.9602%" y="261" width="0.1833%" height="15" fill="rgb(221,68,8)" fg:x="44341" fg:w="107"/><text x="76.2102%" y="271.50"></text></g><g><title>rseq_update_cpu_node_id (29 samples, 0.05%)</title><rect x="76.0938%" y="245" width="0.0497%" height="15" fill="rgb(254,180,31)" fg:x="44419" fg:w="29"/><text x="76.3438%" y="255.50"></text></g><g><title>exit_to_user_mode_loop (160 samples, 0.27%)</title><rect x="75.8848%" y="277" width="0.2741%" height="15" fill="rgb(247,130,50)" fg:x="44297" fg:w="160"/><text x="76.1348%" y="287.50"></text></g><g><title>mem_cgroup_handle_over_high (8 samples, 0.01%)</title><rect x="76.1452%" y="261" width="0.0137%" height="15" fill="rgb(211,109,4)" fg:x="44449" fg:w="8"/><text x="76.3952%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,865 samples, 3.19%)</title><rect x="72.9811%" y="309" width="3.1949%" height="15" fill="rgb(238,50,21)" fg:x="42602" fg:w="1865"/><text x="73.2311%" y="319.50">ent..</text></g><g><title>do_syscall_64 (1,863 samples, 3.19%)</title><rect x="72.9845%" y="293" width="3.1915%" height="15" fill="rgb(225,57,45)" fg:x="42604" fg:w="1863"/><text x="73.2345%" y="303.50">do_..</text></g><g><title>x64_sys_call (10 samples, 0.02%)</title><rect x="76.1589%" y="277" width="0.0171%" height="15" fill="rgb(209,196,50)" fg:x="44457" fg:w="10"/><text x="76.4089%" y="287.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (8 samples, 0.01%)</title><rect x="76.1760%" y="309" width="0.0137%" height="15" fill="rgb(242,140,13)" fg:x="44467" fg:w="8"/><text x="76.4260%" y="319.50"></text></g><g><title>std::thread::Thread::park (2,038 samples, 3.49%)</title><rect x="72.7122%" y="373" width="3.4913%" height="15" fill="rgb(217,111,7)" fg:x="42445" fg:w="2038"/><text x="72.9622%" y="383.50">std..</text></g><g><title>std::sys::sync::thread_parking::futex::Parker::park (2,038 samples, 3.49%)</title><rect x="72.7122%" y="357" width="3.4913%" height="15" fill="rgb(253,193,51)" fg:x="42445" fg:w="2038"/><text x="72.9622%" y="367.50">std..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (1,966 samples, 3.37%)</title><rect x="72.8355%" y="341" width="3.3679%" height="15" fill="rgb(252,70,29)" fg:x="42517" fg:w="1966"/><text x="73.0855%" y="351.50">std..</text></g><g><title>syscall (1,960 samples, 3.36%)</title><rect x="72.8458%" y="325" width="3.3577%" height="15" fill="rgb(232,127,12)" fg:x="42523" fg:w="1960"/><text x="73.0958%" y="335.50">sys..</text></g><g><title>syscall_return_via_sysret (8 samples, 0.01%)</title><rect x="76.1897%" y="309" width="0.0137%" height="15" fill="rgb(211,180,21)" fg:x="44475" fg:w="8"/><text x="76.4397%" y="319.50"></text></g><g><title>&lt;std::thread::Thread as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="76.2052%" y="357" width="0.0120%" height="15" fill="rgb(229,72,13)" fg:x="44484" fg:w="7"/><text x="76.4552%" y="367.50"></text></g><g><title>&lt;core::pin::Pin&lt;Ptr&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="76.2052%" y="341" width="0.0120%" height="15" fill="rgb(240,211,49)" fg:x="44484" fg:w="7"/><text x="76.4552%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="76.2052%" y="325" width="0.0120%" height="15" fill="rgb(219,149,40)" fg:x="44484" fg:w="7"/><text x="76.4552%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.01%)</title><rect x="76.2052%" y="309" width="0.0120%" height="15" fill="rgb(210,127,46)" fg:x="44484" fg:w="7"/><text x="76.4552%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.01%)</title><rect x="76.2052%" y="293" width="0.0120%" height="15" fill="rgb(220,106,7)" fg:x="44484" fg:w="7"/><text x="76.4552%" y="303.50"></text></g><g><title>flume::signal::SyncSignal::wait (2,059 samples, 3.53%)</title><rect x="72.6916%" y="405" width="3.5273%" height="15" fill="rgb(249,31,22)" fg:x="42433" fg:w="2059"/><text x="72.9416%" y="415.50">flu..</text></g><g><title>std::thread::park (2,056 samples, 3.52%)</title><rect x="72.6967%" y="389" width="3.5221%" height="15" fill="rgb(253,1,49)" fg:x="42436" fg:w="2056"/><text x="72.9467%" y="399.50">std..</text></g><g><title>std::thread::current::current (9 samples, 0.02%)</title><rect x="76.2034%" y="373" width="0.0154%" height="15" fill="rgb(227,144,33)" fg:x="44483" fg:w="9"/><text x="76.4534%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="76.2223%" y="405" width="0.0120%" height="15" fill="rgb(249,163,44)" fg:x="44494" fg:w="7"/><text x="76.4723%" y="415.50"></text></g><g><title>smallvec::SmallVecData&lt;A&gt;::inline (12 samples, 0.02%)</title><rect x="76.2788%" y="405" width="0.0206%" height="15" fill="rgb(234,15,39)" fg:x="44527" fg:w="12"/><text x="76.5288%" y="415.50"></text></g><g><title>sqlite3ErrStr (32 samples, 0.05%)</title><rect x="76.3097%" y="405" width="0.0548%" height="15" fill="rgb(207,66,16)" fg:x="44545" fg:w="32"/><text x="76.5597%" y="415.50"></text></g><g><title>sqlx_sqlite::connection::worker::ConnectionWorker::establish::{{closure}}::{{closure}} (31 samples, 0.05%)</title><rect x="76.3114%" y="389" width="0.0531%" height="15" fill="rgb(233,112,24)" fg:x="44546" fg:w="31"/><text x="76.5614%" y="399.50"></text></g><g><title>tracing::span::Span::enter (7 samples, 0.01%)</title><rect x="76.3525%" y="373" width="0.0120%" height="15" fill="rgb(230,90,22)" fg:x="44570" fg:w="7"/><text x="76.6025%" y="383.50"></text></g><g><title>tracing::span::Span::do_enter (7 samples, 0.01%)</title><rect x="76.3525%" y="357" width="0.0120%" height="15" fill="rgb(229,61,13)" fg:x="44570" fg:w="7"/><text x="76.6025%" y="367.50"></text></g><g><title>sqlite3OsShmLock (14 samples, 0.02%)</title><rect x="76.3645%" y="405" width="0.0240%" height="15" fill="rgb(225,57,24)" fg:x="44577" fg:w="14"/><text x="76.6145%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (14 samples, 0.02%)</title><rect x="76.3645%" y="389" width="0.0240%" height="15" fill="rgb(208,169,48)" fg:x="44577" fg:w="14"/><text x="76.6145%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.02%)</title><rect x="76.3645%" y="373" width="0.0240%" height="15" fill="rgb(244,218,51)" fg:x="44577" fg:w="14"/><text x="76.6145%" y="383.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (14 samples, 0.02%)</title><rect x="76.3645%" y="357" width="0.0240%" height="15" fill="rgb(214,148,10)" fg:x="44577" fg:w="14"/><text x="76.6145%" y="367.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (14 samples, 0.02%)</title><rect x="76.3645%" y="341" width="0.0240%" height="15" fill="rgb(225,174,27)" fg:x="44577" fg:w="14"/><text x="76.6145%" y="351.50"></text></g><g><title>core::ptr::read (14 samples, 0.02%)</title><rect x="76.3645%" y="325" width="0.0240%" height="15" fill="rgb(230,96,26)" fg:x="44577" fg:w="14"/><text x="76.6145%" y="335.50"></text></g><g><title>sqlx_sqlite::arguments::SqliteArgumentValue::bind (14 samples, 0.02%)</title><rect x="76.4159%" y="405" width="0.0240%" height="15" fill="rgb(232,10,30)" fg:x="44607" fg:w="14"/><text x="76.6659%" y="415.50"></text></g><g><title>sqlx_sqlite::statement::handle::StatementHandle::bind_parameter_name (8 samples, 0.01%)</title><rect x="76.4416%" y="405" width="0.0137%" height="15" fill="rgb(222,8,50)" fg:x="44622" fg:w="8"/><text x="76.6916%" y="415.50"></text></g><g><title>sqlx_sqlite::statement::virtual::VirtualStatement::reset (12 samples, 0.02%)</title><rect x="76.4570%" y="405" width="0.0206%" height="15" fill="rgb(213,81,27)" fg:x="44631" fg:w="12"/><text x="76.7070%" y="415.50"></text></g><g><title>std::sync::poison::map_result (10 samples, 0.02%)</title><rect x="76.4775%" y="405" width="0.0171%" height="15" fill="rgb(245,50,10)" fg:x="44643" fg:w="10"/><text x="76.7275%" y="415.50"></text></g><g><title>vms_complete_munmap_vmas (7 samples, 0.01%)</title><rect x="76.5032%" y="229" width="0.0120%" height="15" fill="rgb(216,100,18)" fg:x="44658" fg:w="7"/><text x="76.7532%" y="239.50"></text></g><g><title>vms_clear_ptes (7 samples, 0.01%)</title><rect x="76.5032%" y="213" width="0.0120%" height="15" fill="rgb(236,147,54)" fg:x="44658" fg:w="7"/><text x="76.7532%" y="223.50"></text></g><g><title>do_vmi_munmap (11 samples, 0.02%)</title><rect x="76.4998%" y="261" width="0.0188%" height="15" fill="rgb(205,143,26)" fg:x="44656" fg:w="11"/><text x="76.7498%" y="271.50"></text></g><g><title>do_vmi_align_munmap (11 samples, 0.02%)</title><rect x="76.4998%" y="245" width="0.0188%" height="15" fill="rgb(236,26,9)" fg:x="44656" fg:w="11"/><text x="76.7498%" y="255.50"></text></g><g><title>__munmap (16 samples, 0.03%)</title><rect x="76.4998%" y="341" width="0.0274%" height="15" fill="rgb(221,165,53)" fg:x="44656" fg:w="16"/><text x="76.7498%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.03%)</title><rect x="76.4998%" y="325" width="0.0274%" height="15" fill="rgb(214,110,17)" fg:x="44656" fg:w="16"/><text x="76.7498%" y="335.50"></text></g><g><title>do_syscall_64 (16 samples, 0.03%)</title><rect x="76.4998%" y="309" width="0.0274%" height="15" fill="rgb(237,197,12)" fg:x="44656" fg:w="16"/><text x="76.7498%" y="319.50"></text></g><g><title>__x64_sys_munmap (16 samples, 0.03%)</title><rect x="76.4998%" y="293" width="0.0274%" height="15" fill="rgb(205,84,17)" fg:x="44656" fg:w="16"/><text x="76.7498%" y="303.50"></text></g><g><title>__vm_munmap (16 samples, 0.03%)</title><rect x="76.4998%" y="277" width="0.0274%" height="15" fill="rgb(237,18,45)" fg:x="44656" fg:w="16"/><text x="76.7498%" y="287.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (17 samples, 0.03%)</title><rect x="76.4998%" y="405" width="0.0291%" height="15" fill="rgb(221,87,14)" fg:x="44656" fg:w="17"/><text x="76.7498%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::stack_overflow::Handler&gt; (17 samples, 0.03%)</title><rect x="76.4998%" y="389" width="0.0291%" height="15" fill="rgb(238,186,15)" fg:x="44656" fg:w="17"/><text x="76.7498%" y="399.50"></text></g><g><title>&lt;std::sys::pal::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="76.4998%" y="373" width="0.0291%" height="15" fill="rgb(208,115,11)" fg:x="44656" fg:w="17"/><text x="76.7498%" y="383.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::drop_handler (17 samples, 0.03%)</title><rect x="76.4998%" y="357" width="0.0291%" height="15" fill="rgb(254,175,0)" fg:x="44656" fg:w="17"/><text x="76.7498%" y="367.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7 samples, 0.01%)</title><rect x="76.5289%" y="405" width="0.0120%" height="15" fill="rgb(227,24,42)" fg:x="44673" fg:w="7"/><text x="76.7789%" y="415.50"></text></g><g><title>std::thread::park (8 samples, 0.01%)</title><rect x="76.5461%" y="405" width="0.0137%" height="15" fill="rgb(223,211,37)" fg:x="44683" fg:w="8"/><text x="76.7961%" y="415.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (7 samples, 0.01%)</title><rect x="76.5632%" y="405" width="0.0120%" height="15" fill="rgb(235,49,27)" fg:x="44693" fg:w="7"/><text x="76.8132%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (6 samples, 0.01%)</title><rect x="76.5649%" y="389" width="0.0103%" height="15" fill="rgb(254,97,51)" fg:x="44694" fg:w="6"/><text x="76.8149%" y="399.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (13 samples, 0.02%)</title><rect x="76.5838%" y="405" width="0.0223%" height="15" fill="rgb(249,51,40)" fg:x="44705" fg:w="13"/><text x="76.8338%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.02%)</title><rect x="76.5838%" y="389" width="0.0223%" height="15" fill="rgb(210,128,45)" fg:x="44705" fg:w="13"/><text x="76.8338%" y="399.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::from_raw (7 samples, 0.01%)</title><rect x="76.6146%" y="389" width="0.0120%" height="15" fill="rgb(224,137,50)" fg:x="44723" fg:w="7"/><text x="76.8646%" y="399.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (6 samples, 0.01%)</title><rect x="76.6163%" y="373" width="0.0103%" height="15" fill="rgb(242,15,9)" fg:x="44724" fg:w="6"/><text x="76.8663%" y="383.50"></text></g><g><title>__GI___clone3 (3,977 samples, 6.81%)</title><rect x="69.8205%" y="437" width="6.8130%" height="15" fill="rgb(233,187,41)" fg:x="40757" fg:w="3977"/><text x="70.0705%" y="447.50">__GI___cl..</text></g><g><title>start_thread (3,977 samples, 6.81%)</title><rect x="69.8205%" y="421" width="6.8130%" height="15" fill="rgb(227,2,29)" fg:x="40757" fg:w="3977"/><text x="70.0705%" y="431.50">start_thr..</text></g><g><title>tokio::runtime::task::waker::wake_by_val (11 samples, 0.02%)</title><rect x="76.6146%" y="405" width="0.0188%" height="15" fill="rgb(222,70,3)" fg:x="44723" fg:w="11"/><text x="76.8646%" y="415.50"></text></g><g><title>sqlite3_mutex_enter (7 samples, 0.01%)</title><rect x="76.6848%" y="309" width="0.0120%" height="15" fill="rgb(213,11,42)" fg:x="44764" fg:w="7"/><text x="76.9348%" y="319.50"></text></g><g><title>pthreadMutexEnter (6 samples, 0.01%)</title><rect x="76.6865%" y="293" width="0.0103%" height="15" fill="rgb(225,150,9)" fg:x="44765" fg:w="6"/><text x="76.9365%" y="303.50"></text></g><g><title>_copy_from_user (7 samples, 0.01%)</title><rect x="76.7277%" y="197" width="0.0120%" height="15" fill="rgb(230,162,45)" fg:x="44789" fg:w="7"/><text x="76.9777%" y="207.50"></text></g><g><title>kmem_cache_alloc_noprof (7 samples, 0.01%)</title><rect x="76.7568%" y="181" width="0.0120%" height="15" fill="rgb(222,14,52)" fg:x="44806" fg:w="7"/><text x="77.0068%" y="191.50"></text></g><g><title>kmem_cache_alloc_noprof (13 samples, 0.02%)</title><rect x="76.7876%" y="165" width="0.0223%" height="15" fill="rgb(254,198,14)" fg:x="44824" fg:w="13"/><text x="77.0376%" y="175.50"></text></g><g><title>__pi_memset (7 samples, 0.01%)</title><rect x="76.7979%" y="149" width="0.0120%" height="15" fill="rgb(220,217,30)" fg:x="44830" fg:w="7"/><text x="77.0479%" y="159.50"></text></g><g><title>kmem_cache_free (13 samples, 0.02%)</title><rect x="76.8099%" y="165" width="0.0223%" height="15" fill="rgb(215,146,41)" fg:x="44837" fg:w="13"/><text x="77.0599%" y="175.50"></text></g><g><title>locks_dispose_list (7 samples, 0.01%)</title><rect x="76.8322%" y="165" width="0.0120%" height="15" fill="rgb(217,27,36)" fg:x="44850" fg:w="7"/><text x="77.0822%" y="175.50"></text></g><g><title>kmem_cache_free (6 samples, 0.01%)</title><rect x="76.8339%" y="149" width="0.0103%" height="15" fill="rgb(219,218,39)" fg:x="44851" fg:w="6"/><text x="77.0839%" y="159.50"></text></g><g><title>posix_lock_inode (52 samples, 0.09%)</title><rect x="76.7722%" y="181" width="0.0891%" height="15" fill="rgb(219,4,42)" fg:x="44815" fg:w="52"/><text x="77.0222%" y="191.50"></text></g><g><title>locks_unlink_lock_ctx (9 samples, 0.02%)</title><rect x="76.8459%" y="165" width="0.0154%" height="15" fill="rgb(249,119,36)" fg:x="44858" fg:w="9"/><text x="77.0959%" y="175.50"></text></g><g><title>do_fcntl (82 samples, 0.14%)</title><rect x="76.7277%" y="213" width="0.1405%" height="15" fill="rgb(209,23,33)" fg:x="44789" fg:w="82"/><text x="76.9777%" y="223.50"></text></g><g><title>fcntl_setlk (75 samples, 0.13%)</title><rect x="76.7396%" y="197" width="0.1285%" height="15" fill="rgb(211,10,0)" fg:x="44796" fg:w="75"/><text x="76.9896%" y="207.50"></text></g><g><title>fdget_raw (9 samples, 0.02%)</title><rect x="76.8681%" y="213" width="0.0154%" height="15" fill="rgb(208,99,37)" fg:x="44871" fg:w="9"/><text x="77.1181%" y="223.50"></text></g><g><title>fput (6 samples, 0.01%)</title><rect x="76.8835%" y="213" width="0.0103%" height="15" fill="rgb(213,132,31)" fg:x="44880" fg:w="6"/><text x="77.1335%" y="223.50"></text></g><g><title>__x64_sys_fcntl (104 samples, 0.18%)</title><rect x="76.7277%" y="229" width="0.1782%" height="15" fill="rgb(243,129,40)" fg:x="44789" fg:w="104"/><text x="76.9777%" y="239.50"></text></g><g><title>security_file_fcntl (7 samples, 0.01%)</title><rect x="76.8938%" y="213" width="0.0120%" height="15" fill="rgb(210,66,33)" fg:x="44886" fg:w="7"/><text x="77.1438%" y="223.50"></text></g><g><title>file_has_perm (6 samples, 0.01%)</title><rect x="76.8955%" y="197" width="0.0103%" height="15" fill="rgb(209,189,4)" fg:x="44887" fg:w="6"/><text x="77.1455%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (110 samples, 0.19%)</title><rect x="76.7259%" y="261" width="0.1884%" height="15" fill="rgb(214,107,37)" fg:x="44788" fg:w="110"/><text x="76.9759%" y="271.50"></text></g><g><title>do_syscall_64 (110 samples, 0.19%)</title><rect x="76.7259%" y="245" width="0.1884%" height="15" fill="rgb(245,88,54)" fg:x="44788" fg:w="110"/><text x="76.9759%" y="255.50"></text></g><g><title>aWindowFuncs.38 (150 samples, 0.26%)</title><rect x="76.6608%" y="437" width="0.2570%" height="15" fill="rgb(205,146,20)" fg:x="44750" fg:w="150"/><text x="76.9108%" y="447.50"></text></g><g><title>pagerUnlockIfUnused (150 samples, 0.26%)</title><rect x="76.6608%" y="421" width="0.2570%" height="15" fill="rgb(220,161,25)" fg:x="44750" fg:w="150"/><text x="76.9108%" y="431.50"></text></g><g><title>pagerUnlockAndRollback (150 samples, 0.26%)</title><rect x="76.6608%" y="405" width="0.2570%" height="15" fill="rgb(215,152,15)" fg:x="44750" fg:w="150"/><text x="76.9108%" y="415.50"></text></g><g><title>pager_unlock (150 samples, 0.26%)</title><rect x="76.6608%" y="389" width="0.2570%" height="15" fill="rgb(233,192,44)" fg:x="44750" fg:w="150"/><text x="76.9108%" y="399.50"></text></g><g><title>sqlite3WalEndReadTransaction (145 samples, 0.25%)</title><rect x="76.6694%" y="373" width="0.2484%" height="15" fill="rgb(240,170,46)" fg:x="44755" fg:w="145"/><text x="76.9194%" y="383.50"></text></g><g><title>walUnlockShared (142 samples, 0.24%)</title><rect x="76.6745%" y="357" width="0.2433%" height="15" fill="rgb(207,104,33)" fg:x="44758" fg:w="142"/><text x="76.9245%" y="367.50"></text></g><g><title>sqlite3OsShmLock (142 samples, 0.24%)</title><rect x="76.6745%" y="341" width="0.2433%" height="15" fill="rgb(219,21,39)" fg:x="44758" fg:w="142"/><text x="76.9245%" y="351.50"></text></g><g><title>unixShmLock (142 samples, 0.24%)</title><rect x="76.6745%" y="325" width="0.2433%" height="15" fill="rgb(214,133,29)" fg:x="44758" fg:w="142"/><text x="76.9245%" y="335.50"></text></g><g><title>unixShmSystemLock (126 samples, 0.22%)</title><rect x="76.7020%" y="309" width="0.2158%" height="15" fill="rgb(226,93,6)" fg:x="44774" fg:w="126"/><text x="76.9520%" y="319.50"></text></g><g><title>__libc_fcntl64 (126 samples, 0.22%)</title><rect x="76.7020%" y="293" width="0.2158%" height="15" fill="rgb(252,222,34)" fg:x="44774" fg:w="126"/><text x="76.9520%" y="303.50"></text></g><g><title>__fcntl64_nocancel_adjusted (125 samples, 0.21%)</title><rect x="76.7037%" y="277" width="0.2141%" height="15" fill="rgb(252,92,48)" fg:x="44775" fg:w="125"/><text x="76.9537%" y="287.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="76.9452%" y="389" width="0.0188%" height="15" fill="rgb(245,223,24)" fg:x="44916" fg:w="11"/><text x="77.1952%" y="399.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.05%)</title><rect x="76.9178%" y="421" width="0.0480%" height="15" fill="rgb(205,176,3)" fg:x="44900" fg:w="28"/><text x="77.1678%" y="431.50"></text></g><g><title>malloc (27 samples, 0.05%)</title><rect x="76.9195%" y="405" width="0.0463%" height="15" fill="rgb(235,151,15)" fg:x="44901" fg:w="27"/><text x="77.1695%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.05%)</title><rect x="76.9178%" y="437" width="0.0497%" height="15" fill="rgb(237,209,11)" fg:x="44900" fg:w="29"/><text x="77.1678%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.03%)</title><rect x="76.9675%" y="437" width="0.0274%" height="15" fill="rgb(243,227,24)" fg:x="44929" fg:w="16"/><text x="77.2175%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (11 samples, 0.02%)</title><rect x="77.0120%" y="437" width="0.0188%" height="15" fill="rgb(239,193,16)" fg:x="44955" fg:w="11"/><text x="77.2620%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (11 samples, 0.02%)</title><rect x="77.0309%" y="437" width="0.0188%" height="15" fill="rgb(231,27,9)" fg:x="44966" fg:w="11"/><text x="77.2809%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back_mut (13 samples, 0.02%)</title><rect x="77.0497%" y="437" width="0.0223%" height="15" fill="rgb(219,169,10)" fg:x="44977" fg:w="13"/><text x="77.2997%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (62 samples, 0.11%)</title><rect x="77.0908%" y="437" width="0.1062%" height="15" fill="rgb(244,229,43)" fg:x="45001" fg:w="62"/><text x="77.3408%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (55 samples, 0.09%)</title><rect x="77.1028%" y="421" width="0.0942%" height="15" fill="rgb(254,38,20)" fg:x="45008" fg:w="55"/><text x="77.3528%" y="431.50"></text></g><g><title>malloc (54 samples, 0.09%)</title><rect x="77.1045%" y="405" width="0.0925%" height="15" fill="rgb(250,47,30)" fg:x="45009" fg:w="54"/><text x="77.3545%" y="415.50"></text></g><g><title>_int_malloc (31 samples, 0.05%)</title><rect x="77.1439%" y="389" width="0.0531%" height="15" fill="rgb(224,124,36)" fg:x="45032" fg:w="31"/><text x="77.3939%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.01%)</title><rect x="77.2005%" y="437" width="0.0120%" height="15" fill="rgb(246,68,51)" fg:x="45065" fg:w="7"/><text x="77.4505%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (16 samples, 0.03%)</title><rect x="77.2176%" y="437" width="0.0274%" height="15" fill="rgb(253,43,49)" fg:x="45075" fg:w="16"/><text x="77.4676%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.01%)</title><rect x="77.2330%" y="421" width="0.0120%" height="15" fill="rgb(219,54,36)" fg:x="45084" fg:w="7"/><text x="77.4830%" y="431.50"></text></g><g><title>alloc::sync::data_offset_align (7 samples, 0.01%)</title><rect x="77.2450%" y="437" width="0.0120%" height="15" fill="rgb(227,133,34)" fg:x="45091" fg:w="7"/><text x="77.4950%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (22 samples, 0.04%)</title><rect x="77.2604%" y="437" width="0.0377%" height="15" fill="rgb(247,227,15)" fg:x="45100" fg:w="22"/><text x="77.5104%" y="447.50"></text></g><g><title>core::ptr::read (15 samples, 0.03%)</title><rect x="77.2724%" y="421" width="0.0257%" height="15" fill="rgb(229,96,14)" fg:x="45107" fg:w="15"/><text x="77.5224%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (9 samples, 0.02%)</title><rect x="77.2981%" y="437" width="0.0154%" height="15" fill="rgb(220,79,17)" fg:x="45122" fg:w="9"/><text x="77.5481%" y="447.50"></text></g><g><title>core::char::methods::encode_utf8_raw (9 samples, 0.02%)</title><rect x="77.3289%" y="437" width="0.0154%" height="15" fill="rgb(205,131,53)" fg:x="45140" fg:w="9"/><text x="77.5789%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (9 samples, 0.02%)</title><rect x="77.3803%" y="421" width="0.0154%" height="15" fill="rgb(209,50,29)" fg:x="45170" fg:w="9"/><text x="77.6303%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::le (28 samples, 0.05%)</title><rect x="77.3495%" y="437" width="0.0480%" height="15" fill="rgb(245,86,46)" fg:x="45152" fg:w="28"/><text x="77.5995%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (7 samples, 0.01%)</title><rect x="77.3975%" y="437" width="0.0120%" height="15" fill="rgb(235,66,46)" fg:x="45180" fg:w="7"/><text x="77.6475%" y="447.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for i32&gt;::try_from (7 samples, 0.01%)</title><rect x="77.4146%" y="437" width="0.0120%" height="15" fill="rgb(232,148,31)" fg:x="45190" fg:w="7"/><text x="77.6646%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.01%)</title><rect x="77.4283%" y="437" width="0.0120%" height="15" fill="rgb(217,149,8)" fg:x="45198" fg:w="7"/><text x="77.6783%" y="447.50"></text></g><g><title>core::ptr::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="77.4300%" y="421" width="0.0103%" height="15" fill="rgb(209,183,11)" fg:x="45199" fg:w="6"/><text x="77.6800%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.01%)</title><rect x="77.4437%" y="437" width="0.0103%" height="15" fill="rgb(208,55,20)" fg:x="45207" fg:w="6"/><text x="77.6937%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.01%)</title><rect x="77.4437%" y="421" width="0.0103%" height="15" fill="rgb(218,39,14)" fg:x="45207" fg:w="6"/><text x="77.6937%" y="431.50"></text></g><g><title>core::ffi::c_str::CStr::from_ptr (6 samples, 0.01%)</title><rect x="77.4540%" y="437" width="0.0103%" height="15" fill="rgb(216,169,33)" fg:x="45213" fg:w="6"/><text x="77.7040%" y="447.50"></text></g><g><title>core::mem::drop (24 samples, 0.04%)</title><rect x="77.4677%" y="437" width="0.0411%" height="15" fill="rgb(233,80,24)" fg:x="45221" fg:w="24"/><text x="77.7177%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_sqlite::connection::execute::ExecuteIter&gt; (11 samples, 0.02%)</title><rect x="77.4900%" y="421" width="0.0188%" height="15" fill="rgb(213,179,31)" fg:x="45234" fg:w="11"/><text x="77.7400%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_sqlite::arguments::SqliteArguments&gt; (8 samples, 0.01%)</title><rect x="77.4951%" y="405" width="0.0137%" height="15" fill="rgb(209,19,5)" fg:x="45237" fg:w="8"/><text x="77.7451%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="77.5088%" y="437" width="0.0103%" height="15" fill="rgb(219,18,35)" fg:x="45245" fg:w="6"/><text x="77.7588%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (19 samples, 0.03%)</title><rect x="77.5242%" y="437" width="0.0325%" height="15" fill="rgb(209,169,16)" fg:x="45254" fg:w="19"/><text x="77.7742%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (7 samples, 0.01%)</title><rect x="77.5568%" y="437" width="0.0120%" height="15" fill="rgb(245,90,51)" fg:x="45273" fg:w="7"/><text x="77.8068%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (7 samples, 0.01%)</title><rect x="77.5688%" y="437" width="0.0120%" height="15" fill="rgb(220,99,45)" fg:x="45280" fg:w="7"/><text x="77.8188%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.03%)</title><rect x="77.5808%" y="437" width="0.0343%" height="15" fill="rgb(249,89,25)" fg:x="45287" fg:w="20"/><text x="77.8308%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (47 samples, 0.08%)</title><rect x="77.6202%" y="437" width="0.0805%" height="15" fill="rgb(239,193,0)" fg:x="45310" fg:w="47"/><text x="77.8702%" y="447.50"></text></g><g><title>core::mem::replace (39 samples, 0.07%)</title><rect x="77.6339%" y="421" width="0.0668%" height="15" fill="rgb(231,126,1)" fg:x="45318" fg:w="39"/><text x="77.8839%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (29 samples, 0.05%)</title><rect x="77.6510%" y="405" width="0.0497%" height="15" fill="rgb(243,166,3)" fg:x="45328" fg:w="29"/><text x="77.9010%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;flume::Hook&lt;(sqlx_sqlite::connection::worker::Command,tracing::span::Span),flume::signal::SyncSignal&gt;,&amp;alloc::alloc::Global&gt;&gt; (25 samples, 0.04%)</title><rect x="77.7367%" y="437" width="0.0428%" height="15" fill="rgb(223,22,34)" fg:x="45378" fg:w="25"/><text x="77.9867%" y="447.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.04%)</title><rect x="77.7418%" y="421" width="0.0377%" height="15" fill="rgb(251,52,51)" fg:x="45381" fg:w="22"/><text x="77.9918%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.02%)</title><rect x="77.7624%" y="405" width="0.0171%" height="15" fill="rgb(221,165,28)" fg:x="45393" fg:w="10"/><text x="78.0124%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.02%)</title><rect x="77.7641%" y="389" width="0.0154%" height="15" fill="rgb(218,121,47)" fg:x="45394" fg:w="9"/><text x="78.0141%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;flume::Hook&lt;core::result::Result&lt;either::Either&lt;sqlx_sqlite::query_result::SqliteQueryResult,sqlx_sqlite::row::SqliteRow&gt;,sqlx_core::error::Error&gt;,dyn flume::signal::Signal&gt;&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="77.7812%" y="437" width="0.0171%" height="15" fill="rgb(209,120,9)" fg:x="45404" fg:w="10"/><text x="78.0312%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;flume::Hook&lt;core::result::Result&lt;either::Either&lt;sqlx_sqlite::query_result::SqliteQueryResult,sqlx_sqlite::row::SqliteRow&gt;,sqlx_core::error::Error&gt;,dyn flume::signal::Signal&gt;&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="77.7881%" y="421" width="0.0103%" height="15" fill="rgb(236,68,12)" fg:x="45408" fg:w="6"/><text x="78.0381%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::signal::SyncSignal&gt; (8 samples, 0.01%)</title><rect x="77.8206%" y="437" width="0.0137%" height="15" fill="rgb(225,194,26)" fg:x="45427" fg:w="8"/><text x="78.0706%" y="447.50"></text></g><g><title>do_vmi_align_munmap (7 samples, 0.01%)</title><rect x="77.8754%" y="149" width="0.0120%" height="15" fill="rgb(231,84,39)" fg:x="45459" fg:w="7"/><text x="78.1254%" y="159.50"></text></g><g><title>vms_complete_munmap_vmas (7 samples, 0.01%)</title><rect x="77.8754%" y="133" width="0.0120%" height="15" fill="rgb(210,11,45)" fg:x="45459" fg:w="7"/><text x="78.1254%" y="143.50"></text></g><g><title>vms_clear_ptes (7 samples, 0.01%)</title><rect x="77.8754%" y="117" width="0.0120%" height="15" fill="rgb(224,54,52)" fg:x="45459" fg:w="7"/><text x="78.1254%" y="127.50"></text></g><g><title>do_vmi_munmap (8 samples, 0.01%)</title><rect x="77.8754%" y="165" width="0.0137%" height="15" fill="rgb(238,102,14)" fg:x="45459" fg:w="8"/><text x="78.1254%" y="175.50"></text></g><g><title>__munmap (9 samples, 0.02%)</title><rect x="77.8754%" y="245" width="0.0154%" height="15" fill="rgb(243,160,52)" fg:x="45459" fg:w="9"/><text x="78.1254%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="77.8754%" y="229" width="0.0154%" height="15" fill="rgb(216,114,19)" fg:x="45459" fg:w="9"/><text x="78.1254%" y="239.50"></text></g><g><title>do_syscall_64 (9 samples, 0.02%)</title><rect x="77.8754%" y="213" width="0.0154%" height="15" fill="rgb(244,166,37)" fg:x="45459" fg:w="9"/><text x="78.1254%" y="223.50"></text></g><g><title>__x64_sys_munmap (9 samples, 0.02%)</title><rect x="77.8754%" y="197" width="0.0154%" height="15" fill="rgb(246,29,44)" fg:x="45459" fg:w="9"/><text x="78.1254%" y="207.50"></text></g><g><title>__vm_munmap (9 samples, 0.02%)</title><rect x="77.8754%" y="181" width="0.0154%" height="15" fill="rgb(215,56,53)" fg:x="45459" fg:w="9"/><text x="78.1254%" y="191.50"></text></g><g><title>sqlite3PagerClose (32 samples, 0.05%)</title><rect x="77.8446%" y="341" width="0.0548%" height="15" fill="rgb(217,60,2)" fg:x="45441" fg:w="32"/><text x="78.0946%" y="351.50"></text></g><g><title>sqlite3WalClose (24 samples, 0.04%)</title><rect x="77.8583%" y="325" width="0.0411%" height="15" fill="rgb(207,26,24)" fg:x="45449" fg:w="24"/><text x="78.1083%" y="335.50"></text></g><g><title>walIndexClose (17 samples, 0.03%)</title><rect x="77.8703%" y="309" width="0.0291%" height="15" fill="rgb(252,210,15)" fg:x="45456" fg:w="17"/><text x="78.1203%" y="319.50"></text></g><g><title>sqlite3OsShmUnmap (17 samples, 0.03%)</title><rect x="77.8703%" y="293" width="0.0291%" height="15" fill="rgb(253,209,26)" fg:x="45456" fg:w="17"/><text x="78.1203%" y="303.50"></text></g><g><title>unixShmUnmap (17 samples, 0.03%)</title><rect x="77.8703%" y="277" width="0.0291%" height="15" fill="rgb(238,170,14)" fg:x="45456" fg:w="17"/><text x="78.1203%" y="287.50"></text></g><g><title>unixShmPurge (14 samples, 0.02%)</title><rect x="77.8754%" y="261" width="0.0240%" height="15" fill="rgb(216,178,15)" fg:x="45459" fg:w="14"/><text x="78.1254%" y="271.50"></text></g><g><title>sqlite3BtreeClose (35 samples, 0.06%)</title><rect x="77.8429%" y="357" width="0.0600%" height="15" fill="rgb(250,197,2)" fg:x="45440" fg:w="35"/><text x="78.0929%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_intrusive::sync::mutex::GenericMutex&lt;parking_lot::raw_mutex::RawMutex,sqlx_sqlite::connection::ConnectionState&gt;&gt; (45 samples, 0.08%)</title><rect x="77.8377%" y="437" width="0.0771%" height="15" fill="rgb(212,70,42)" fg:x="45437" fg:w="45"/><text x="78.0877%" y="447.50"></text></g><g><title>&lt;sqlx_sqlite::connection::handle::ConnectionHandle as core::ops::drop::Drop&gt;::drop (45 samples, 0.08%)</title><rect x="77.8377%" y="421" width="0.0771%" height="15" fill="rgb(227,213,9)" fg:x="45437" fg:w="45"/><text x="78.0877%" y="431.50"></text></g><g><title>sqlite3_close (44 samples, 0.08%)</title><rect x="77.8394%" y="405" width="0.0754%" height="15" fill="rgb(245,99,25)" fg:x="45438" fg:w="44"/><text x="78.0894%" y="415.50"></text></g><g><title>sqlite3Close (44 samples, 0.08%)</title><rect x="77.8394%" y="389" width="0.0754%" height="15" fill="rgb(250,82,29)" fg:x="45438" fg:w="44"/><text x="78.0894%" y="399.50"></text></g><g><title>sqlite3LeaveMutexAndCloseZombie (44 samples, 0.08%)</title><rect x="77.8394%" y="373" width="0.0754%" height="15" fill="rgb(241,226,54)" fg:x="45438" fg:w="44"/><text x="78.0894%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (6 samples, 0.01%)</title><rect x="77.9337%" y="437" width="0.0103%" height="15" fill="rgb(221,99,41)" fg:x="45493" fg:w="6"/><text x="78.1837%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (12 samples, 0.02%)</title><rect x="77.9439%" y="437" width="0.0206%" height="15" fill="rgb(213,90,21)" fg:x="45499" fg:w="12"/><text x="78.1939%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (11 samples, 0.02%)</title><rect x="77.9679%" y="437" width="0.0188%" height="15" fill="rgb(205,208,24)" fg:x="45513" fg:w="11"/><text x="78.2179%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (6 samples, 0.01%)</title><rect x="77.9765%" y="421" width="0.0103%" height="15" fill="rgb(246,31,12)" fg:x="45518" fg:w="6"/><text x="78.2265%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (11 samples, 0.02%)</title><rect x="77.9868%" y="437" width="0.0188%" height="15" fill="rgb(213,154,6)" fg:x="45524" fg:w="11"/><text x="78.2368%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (17 samples, 0.03%)</title><rect x="78.0176%" y="437" width="0.0291%" height="15" fill="rgb(222,163,29)" fg:x="45542" fg:w="17"/><text x="78.2676%" y="447.50"></text></g><g><title>sqlx_core::logger::QueryLogger::new (9 samples, 0.02%)</title><rect x="78.0313%" y="421" width="0.0154%" height="15" fill="rgb(227,201,8)" fg:x="45550" fg:w="9"/><text x="78.2813%" y="431.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (9 samples, 0.02%)</title><rect x="78.0313%" y="405" width="0.0154%" height="15" fill="rgb(233,9,32)" fg:x="45550" fg:w="9"/><text x="78.2813%" y="415.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (9 samples, 0.02%)</title><rect x="78.0313%" y="389" width="0.0154%" height="15" fill="rgb(217,54,24)" fg:x="45550" fg:w="9"/><text x="78.2813%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (19 samples, 0.03%)</title><rect x="78.0467%" y="437" width="0.0325%" height="15" fill="rgb(235,192,0)" fg:x="45559" fg:w="19"/><text x="78.2967%" y="447.50"></text></g><g><title>core::str::&lt;impl str&gt;::strip_prefix (6 samples, 0.01%)</title><rect x="78.1101%" y="437" width="0.0103%" height="15" fill="rgb(235,45,9)" fg:x="45596" fg:w="6"/><text x="78.3601%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (11 samples, 0.02%)</title><rect x="78.1238%" y="437" width="0.0188%" height="15" fill="rgb(246,42,40)" fg:x="45604" fg:w="11"/><text x="78.3738%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (13 samples, 0.02%)</title><rect x="78.1495%" y="437" width="0.0223%" height="15" fill="rgb(248,111,24)" fg:x="45619" fg:w="13"/><text x="78.3995%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (12 samples, 0.02%)</title><rect x="78.1512%" y="421" width="0.0206%" height="15" fill="rgb(249,65,22)" fg:x="45620" fg:w="12"/><text x="78.4012%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (6 samples, 0.01%)</title><rect x="78.1735%" y="437" width="0.0103%" height="15" fill="rgb(238,111,51)" fg:x="45633" fg:w="6"/><text x="78.4235%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (18 samples, 0.03%)</title><rect x="78.1855%" y="437" width="0.0308%" height="15" fill="rgb(250,118,22)" fg:x="45640" fg:w="18"/><text x="78.4355%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.02%)</title><rect x="78.1923%" y="421" width="0.0240%" height="15" fill="rgb(234,84,26)" fg:x="45644" fg:w="14"/><text x="78.4423%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.02%)</title><rect x="78.2232%" y="437" width="0.0206%" height="15" fill="rgb(243,172,12)" fg:x="45662" fg:w="12"/><text x="78.4732%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.02%)</title><rect x="78.2232%" y="421" width="0.0206%" height="15" fill="rgb(236,150,49)" fg:x="45662" fg:w="12"/><text x="78.4732%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.04%)</title><rect x="78.2455%" y="437" width="0.0411%" height="15" fill="rgb(225,197,26)" fg:x="45675" fg:w="24"/><text x="78.4955%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.03%)</title><rect x="78.2523%" y="421" width="0.0343%" height="15" fill="rgb(214,17,42)" fg:x="45679" fg:w="20"/><text x="78.5023%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.03%)</title><rect x="78.2866%" y="437" width="0.0274%" height="15" fill="rgb(224,165,40)" fg:x="45699" fg:w="16"/><text x="78.5366%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.02%)</title><rect x="78.2934%" y="421" width="0.0206%" height="15" fill="rgb(246,100,4)" fg:x="45703" fg:w="12"/><text x="78.5434%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (26 samples, 0.04%)</title><rect x="78.3243%" y="437" width="0.0445%" height="15" fill="rgb(222,103,0)" fg:x="45721" fg:w="26"/><text x="78.5743%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (26 samples, 0.04%)</title><rect x="78.3243%" y="421" width="0.0445%" height="15" fill="rgb(227,189,26)" fg:x="45721" fg:w="26"/><text x="78.5743%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (46 samples, 0.08%)</title><rect x="78.3688%" y="437" width="0.0788%" height="15" fill="rgb(214,202,17)" fg:x="45747" fg:w="46"/><text x="78.6188%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (191 samples, 0.33%)</title><rect x="78.4476%" y="437" width="0.3272%" height="15" fill="rgb(229,111,3)" fg:x="45793" fg:w="191"/><text x="78.6976%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (158 samples, 0.27%)</title><rect x="78.7748%" y="437" width="0.2707%" height="15" fill="rgb(229,172,15)" fg:x="45984" fg:w="158"/><text x="79.0248%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_store (53 samples, 0.09%)</title><rect x="79.0455%" y="437" width="0.0908%" height="15" fill="rgb(230,224,35)" fg:x="46142" fg:w="53"/><text x="79.2955%" y="447.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (25 samples, 0.04%)</title><rect x="79.1585%" y="437" width="0.0428%" height="15" fill="rgb(251,141,6)" fg:x="46208" fg:w="25"/><text x="79.4085%" y="447.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (22 samples, 0.04%)</title><rect x="79.2065%" y="437" width="0.0377%" height="15" fill="rgb(225,208,6)" fg:x="46236" fg:w="22"/><text x="79.4565%" y="447.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::slot (9 samples, 0.02%)</title><rect x="79.2665%" y="437" width="0.0154%" height="15" fill="rgb(246,181,16)" fg:x="46271" fg:w="9"/><text x="79.5165%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="79.3281%" y="421" width="0.0103%" height="15" fill="rgb(227,129,36)" fg:x="46307" fg:w="6"/><text x="79.5781%" y="431.50"></text></g><g><title>flume::Hook&lt;T,flume::signal::SyncSignal&gt;::wait_recv (37 samples, 0.06%)</title><rect x="79.2819%" y="437" width="0.0634%" height="15" fill="rgb(248,117,24)" fg:x="46280" fg:w="37"/><text x="79.5319%" y="447.50"></text></g><g><title>flume::Shared&lt;T&gt;::disconnect_all (8 samples, 0.01%)</title><rect x="79.3470%" y="437" width="0.0137%" height="15" fill="rgb(214,185,35)" fg:x="46318" fg:w="8"/><text x="79.5970%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (11 samples, 0.02%)</title><rect x="79.4172%" y="421" width="0.0188%" height="15" fill="rgb(236,150,34)" fg:x="46359" fg:w="11"/><text x="79.6672%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="79.4206%" y="405" width="0.0154%" height="15" fill="rgb(243,228,27)" fg:x="46361" fg:w="9"/><text x="79.6706%" y="415.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (49 samples, 0.08%)</title><rect x="79.3658%" y="437" width="0.0839%" height="15" fill="rgb(245,77,44)" fg:x="46329" fg:w="49"/><text x="79.6158%" y="447.50"></text></g><g><title>syscall (8 samples, 0.01%)</title><rect x="79.4361%" y="421" width="0.0137%" height="15" fill="rgb(235,214,42)" fg:x="46370" fg:w="8"/><text x="79.6861%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.01%)</title><rect x="79.4361%" y="405" width="0.0137%" height="15" fill="rgb(221,74,3)" fg:x="46370" fg:w="8"/><text x="79.6861%" y="415.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (6 samples, 0.01%)</title><rect x="79.4498%" y="437" width="0.0103%" height="15" fill="rgb(206,121,29)" fg:x="46378" fg:w="6"/><text x="79.6998%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.04%)</title><rect x="79.4823%" y="421" width="0.0360%" height="15" fill="rgb(249,131,53)" fg:x="46397" fg:w="21"/><text x="79.7323%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.03%)</title><rect x="79.4909%" y="405" width="0.0274%" height="15" fill="rgb(236,170,29)" fg:x="46402" fg:w="16"/><text x="79.7409%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.03%)</title><rect x="79.4909%" y="389" width="0.0274%" height="15" fill="rgb(247,96,15)" fg:x="46402" fg:w="16"/><text x="79.7409%" y="399.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync::{{closure}} (40 samples, 0.07%)</title><rect x="79.4600%" y="437" width="0.0685%" height="15" fill="rgb(211,210,7)" fg:x="46384" fg:w="40"/><text x="79.7100%" y="447.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (25 samples, 0.04%)</title><rect x="79.5286%" y="437" width="0.0428%" height="15" fill="rgb(240,88,50)" fg:x="46424" fg:w="25"/><text x="79.7786%" y="447.50"></text></g><g><title>flume::Shared&lt;T&gt;::send::{{closure}} (7 samples, 0.01%)</title><rect x="79.5714%" y="437" width="0.0120%" height="15" fill="rgb(209,229,26)" fg:x="46449" fg:w="7"/><text x="79.8214%" y="447.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (7 samples, 0.01%)</title><rect x="79.5834%" y="437" width="0.0120%" height="15" fill="rgb(210,68,23)" fg:x="46456" fg:w="7"/><text x="79.8334%" y="447.50"></text></g><g><title>flume::signal::SyncSignal::wait (7 samples, 0.01%)</title><rect x="79.5971%" y="437" width="0.0120%" height="15" fill="rgb(229,180,13)" fg:x="46464" fg:w="7"/><text x="79.8471%" y="447.50"></text></g><g><title>flume::wait_lock (9 samples, 0.02%)</title><rect x="79.6091%" y="437" width="0.0154%" height="15" fill="rgb(236,53,44)" fg:x="46471" fg:w="9"/><text x="79.8591%" y="447.50"></text></g><g><title>foldhash::hash_bytes_medium (22 samples, 0.04%)</title><rect x="79.6296%" y="437" width="0.0377%" height="15" fill="rgb(244,214,29)" fg:x="46483" fg:w="22"/><text x="79.8796%" y="447.50"></text></g><g><title>futures_channel::lock::Lock&lt;T&gt;::try_lock (16 samples, 0.03%)</title><rect x="79.6673%" y="437" width="0.0274%" height="15" fill="rgb(220,75,29)" fg:x="46505" fg:w="16"/><text x="79.9173%" y="447.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::send (14 samples, 0.02%)</title><rect x="79.7016%" y="437" width="0.0240%" height="15" fill="rgb(214,183,37)" fg:x="46525" fg:w="14"/><text x="79.9516%" y="447.50"></text></g><g><title>futures_channel::oneshot::Sender&lt;T&gt;::send (9 samples, 0.02%)</title><rect x="79.7256%" y="437" width="0.0154%" height="15" fill="rgb(239,117,29)" fg:x="46539" fg:w="9"/><text x="79.9756%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="79.7787%" y="437" width="0.0171%" height="15" fill="rgb(237,171,35)" fg:x="46570" fg:w="10"/><text x="80.0287%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (8 samples, 0.01%)</title><rect x="79.7821%" y="421" width="0.0137%" height="15" fill="rgb(229,178,53)" fg:x="46572" fg:w="8"/><text x="80.0321%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.02%)</title><rect x="79.7958%" y="437" width="0.0188%" height="15" fill="rgb(210,102,19)" fg:x="46580" fg:w="11"/><text x="80.0458%" y="447.50"></text></g><g><title>hashbrown::table::HashTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="79.8198%" y="437" width="0.0103%" height="15" fill="rgb(235,127,22)" fg:x="46594" fg:w="6"/><text x="80.0698%" y="447.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilder&lt;K,V,S&gt;::from_key (11 samples, 0.02%)</title><rect x="79.8438%" y="437" width="0.0188%" height="15" fill="rgb(244,31,31)" fg:x="46608" fg:w="11"/><text x="80.0938%" y="447.50"></text></g><g><title>core::hash::Hasher::write_str (6 samples, 0.01%)</title><rect x="79.8523%" y="421" width="0.0103%" height="15" fill="rgb(231,43,21)" fg:x="46613" fg:w="6"/><text x="80.1023%" y="431.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::capacity (7 samples, 0.01%)</title><rect x="79.8952%" y="437" width="0.0120%" height="15" fill="rgb(217,131,35)" fg:x="46638" fg:w="7"/><text x="80.1452%" y="447.50"></text></g><g><title>pcache1FetchNoMutex (15 samples, 0.03%)</title><rect x="79.9448%" y="325" width="0.0257%" height="15" fill="rgb(221,149,4)" fg:x="46667" fg:w="15"/><text x="80.1948%" y="335.50"></text></g><g><title>sqlite3PcacheFetch (37 samples, 0.06%)</title><rect x="79.9397%" y="373" width="0.0634%" height="15" fill="rgb(232,170,28)" fg:x="46664" fg:w="37"/><text x="80.1897%" y="383.50"></text></g><g><title>pcache1Fetch (34 samples, 0.06%)</title><rect x="79.9448%" y="357" width="0.0582%" height="15" fill="rgb(238,56,10)" fg:x="46667" fg:w="34"/><text x="80.1948%" y="367.50"></text></g><g><title>pcache1FetchWithMutex (34 samples, 0.06%)</title><rect x="79.9448%" y="341" width="0.0582%" height="15" fill="rgb(235,196,14)" fg:x="46667" fg:w="34"/><text x="80.1948%" y="351.50"></text></g><g><title>sqlite3_mutex_leave (17 samples, 0.03%)</title><rect x="79.9740%" y="325" width="0.0291%" height="15" fill="rgb(216,45,48)" fg:x="46684" fg:w="17"/><text x="80.2240%" y="335.50"></text></g><g><title>pthreadMutexLeave (17 samples, 0.03%)</title><rect x="79.9740%" y="309" width="0.0291%" height="15" fill="rgb(238,213,17)" fg:x="46684" fg:w="17"/><text x="80.2240%" y="319.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.03%)</title><rect x="79.9774%" y="293" width="0.0257%" height="15" fill="rgb(212,13,2)" fg:x="46686" fg:w="15"/><text x="80.2274%" y="303.50"></text></g><g><title>moveToChild (43 samples, 0.07%)</title><rect x="79.9311%" y="437" width="0.0737%" height="15" fill="rgb(240,114,20)" fg:x="46659" fg:w="43"/><text x="80.1811%" y="447.50"></text></g><g><title>getAndInitPage (43 samples, 0.07%)</title><rect x="79.9311%" y="421" width="0.0737%" height="15" fill="rgb(228,41,40)" fg:x="46659" fg:w="43"/><text x="80.1811%" y="431.50"></text></g><g><title>sqlite3PagerGet (42 samples, 0.07%)</title><rect x="79.9328%" y="405" width="0.0719%" height="15" fill="rgb(244,132,35)" fg:x="46660" fg:w="42"/><text x="80.1828%" y="415.50"></text></g><g><title>getPageNormal (41 samples, 0.07%)</title><rect x="79.9346%" y="389" width="0.0702%" height="15" fill="rgb(253,189,4)" fg:x="46661" fg:w="41"/><text x="80.1846%" y="399.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (6 samples, 0.01%)</title><rect x="80.0168%" y="437" width="0.0103%" height="15" fill="rgb(224,37,19)" fg:x="46709" fg:w="6"/><text x="80.2668%" y="447.50"></text></g><g><title>[[vdso]] (22 samples, 0.04%)</title><rect x="80.0767%" y="389" width="0.0377%" height="15" fill="rgb(235,223,18)" fg:x="46744" fg:w="22"/><text x="80.3267%" y="399.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (38 samples, 0.07%)</title><rect x="80.0511%" y="405" width="0.0651%" height="15" fill="rgb(235,163,25)" fg:x="46729" fg:w="38"/><text x="80.3011%" y="415.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (47 samples, 0.08%)</title><rect x="80.0373%" y="437" width="0.0805%" height="15" fill="rgb(217,145,28)" fg:x="46721" fg:w="47"/><text x="80.2873%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (46 samples, 0.08%)</title><rect x="80.0391%" y="421" width="0.0788%" height="15" fill="rgb(223,223,32)" fg:x="46722" fg:w="46"/><text x="80.2891%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (14 samples, 0.02%)</title><rect x="80.1179%" y="437" width="0.0240%" height="15" fill="rgb(227,189,39)" fg:x="46768" fg:w="14"/><text x="80.3679%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (34 samples, 0.06%)</title><rect x="80.1487%" y="437" width="0.0582%" height="15" fill="rgb(248,10,22)" fg:x="46786" fg:w="34"/><text x="80.3987%" y="447.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (6 samples, 0.01%)</title><rect x="80.2326%" y="437" width="0.0103%" height="15" fill="rgb(248,46,39)" fg:x="46835" fg:w="6"/><text x="80.4826%" y="447.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::inline_capacity (10 samples, 0.02%)</title><rect x="80.2532%" y="437" width="0.0171%" height="15" fill="rgb(248,113,48)" fg:x="46847" fg:w="10"/><text x="80.5032%" y="447.50"></text></g><g><title>sqlite3BtreeBeginTrans (7 samples, 0.01%)</title><rect x="80.2806%" y="149" width="0.0120%" height="15" fill="rgb(245,16,25)" fg:x="46863" fg:w="7"/><text x="80.5306%" y="159.50"></text></g><g><title>btreeBeginTrans (7 samples, 0.01%)</title><rect x="80.2806%" y="133" width="0.0120%" height="15" fill="rgb(249,152,16)" fg:x="46863" fg:w="7"/><text x="80.5306%" y="143.50"></text></g><g><title>lockBtree (7 samples, 0.01%)</title><rect x="80.2806%" y="117" width="0.0120%" height="15" fill="rgb(250,16,1)" fg:x="46863" fg:w="7"/><text x="80.5306%" y="127.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (14 samples, 0.02%)</title><rect x="80.2806%" y="437" width="0.0240%" height="15" fill="rgb(249,138,3)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="447.50"></text></g><g><title>sqlx_sqlite::statement::virtual::prepare (14 samples, 0.02%)</title><rect x="80.2806%" y="421" width="0.0240%" height="15" fill="rgb(227,71,41)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="431.50"></text></g><g><title>sqlite3_prepare_v3 (14 samples, 0.02%)</title><rect x="80.2806%" y="405" width="0.0240%" height="15" fill="rgb(209,184,23)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="415.50"></text></g><g><title>sqlite3LockAndPrepare (14 samples, 0.02%)</title><rect x="80.2806%" y="389" width="0.0240%" height="15" fill="rgb(223,215,31)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="399.50"></text></g><g><title>sqlite3Prepare (14 samples, 0.02%)</title><rect x="80.2806%" y="373" width="0.0240%" height="15" fill="rgb(210,146,28)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="383.50"></text></g><g><title>sqlite3RunParser (14 samples, 0.02%)</title><rect x="80.2806%" y="357" width="0.0240%" height="15" fill="rgb(209,183,41)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="367.50"></text></g><g><title>sqlite3Parser (14 samples, 0.02%)</title><rect x="80.2806%" y="341" width="0.0240%" height="15" fill="rgb(209,224,45)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="351.50"></text></g><g><title>yy_reduce (14 samples, 0.02%)</title><rect x="80.2806%" y="325" width="0.0240%" height="15" fill="rgb(224,209,51)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="335.50"></text></g><g><title>sqlite3Select (14 samples, 0.02%)</title><rect x="80.2806%" y="309" width="0.0240%" height="15" fill="rgb(223,17,39)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="319.50"></text></g><g><title>sqlite3SelectPrep (14 samples, 0.02%)</title><rect x="80.2806%" y="293" width="0.0240%" height="15" fill="rgb(234,204,37)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="303.50"></text></g><g><title>sqlite3SelectExpand (14 samples, 0.02%)</title><rect x="80.2806%" y="277" width="0.0240%" height="15" fill="rgb(236,120,5)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="287.50"></text></g><g><title>sqlite3WalkSelect (14 samples, 0.02%)</title><rect x="80.2806%" y="261" width="0.0240%" height="15" fill="rgb(248,97,27)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="271.50"></text></g><g><title>selectExpander (14 samples, 0.02%)</title><rect x="80.2806%" y="245" width="0.0240%" height="15" fill="rgb(240,66,17)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="255.50"></text></g><g><title>sqlite3LocateTableItem (14 samples, 0.02%)</title><rect x="80.2806%" y="229" width="0.0240%" height="15" fill="rgb(210,79,3)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="239.50"></text></g><g><title>sqlite3LocateTable (14 samples, 0.02%)</title><rect x="80.2806%" y="213" width="0.0240%" height="15" fill="rgb(214,176,27)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="223.50"></text></g><g><title>sqlite3ReadSchema (14 samples, 0.02%)</title><rect x="80.2806%" y="197" width="0.0240%" height="15" fill="rgb(235,185,3)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="207.50"></text></g><g><title>sqlite3Init (14 samples, 0.02%)</title><rect x="80.2806%" y="181" width="0.0240%" height="15" fill="rgb(227,24,12)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="191.50"></text></g><g><title>sqlite3InitOne (14 samples, 0.02%)</title><rect x="80.2806%" y="165" width="0.0240%" height="15" fill="rgb(252,169,48)" fg:x="46863" fg:w="14"/><text x="80.5306%" y="175.50"></text></g><g><title>sqlite3_exec (6 samples, 0.01%)</title><rect x="80.2943%" y="149" width="0.0103%" height="15" fill="rgb(212,65,1)" fg:x="46871" fg:w="6"/><text x="80.5443%" y="159.50"></text></g><g><title>smallvec::SmallVecData&lt;A&gt;::inline_mut (9 samples, 0.02%)</title><rect x="80.3149%" y="437" width="0.0154%" height="15" fill="rgb(242,39,24)" fg:x="46883" fg:w="9"/><text x="80.5649%" y="447.50"></text></g><g><title>sqlite3MallocSize (8 samples, 0.01%)</title><rect x="80.3423%" y="405" width="0.0137%" height="15" fill="rgb(249,32,23)" fg:x="46899" fg:w="8"/><text x="80.5923%" y="415.50"></text></g><g><title>sqlite3MemSize (8 samples, 0.01%)</title><rect x="80.3423%" y="389" width="0.0137%" height="15" fill="rgb(251,195,23)" fg:x="46899" fg:w="8"/><text x="80.5923%" y="399.50"></text></g><g><title>sqlite3Malloc (60 samples, 0.10%)</title><rect x="80.3371%" y="437" width="0.1028%" height="15" fill="rgb(236,174,8)" fg:x="46896" fg:w="60"/><text x="80.5871%" y="447.50"></text></g><g><title>mallocWithAlarm (60 samples, 0.10%)</title><rect x="80.3371%" y="421" width="0.1028%" height="15" fill="rgb(220,197,8)" fg:x="46896" fg:w="60"/><text x="80.5871%" y="431.50"></text></g><g><title>sqlite3MemMalloc (49 samples, 0.08%)</title><rect x="80.3560%" y="405" width="0.0839%" height="15" fill="rgb(240,108,37)" fg:x="46907" fg:w="49"/><text x="80.6060%" y="415.50"></text></g><g><title>malloc (45 samples, 0.08%)</title><rect x="80.3628%" y="389" width="0.0771%" height="15" fill="rgb(232,176,24)" fg:x="46911" fg:w="45"/><text x="80.6128%" y="399.50"></text></g><g><title>_int_malloc (32 samples, 0.05%)</title><rect x="80.3851%" y="373" width="0.0548%" height="15" fill="rgb(243,35,29)" fg:x="46924" fg:w="32"/><text x="80.6351%" y="383.50"></text></g><g><title>_copy_to_user (8 samples, 0.01%)</title><rect x="80.4845%" y="325" width="0.0137%" height="15" fill="rgb(210,37,18)" fg:x="46982" fg:w="8"/><text x="80.7345%" y="335.50"></text></g><g><title>cp_new_stat (17 samples, 0.03%)</title><rect x="80.4793%" y="341" width="0.0291%" height="15" fill="rgb(224,184,40)" fg:x="46979" fg:w="17"/><text x="80.7293%" y="351.50"></text></g><g><title>fdget_raw (7 samples, 0.01%)</title><rect x="80.5084%" y="325" width="0.0120%" height="15" fill="rgb(236,39,29)" fg:x="46996" fg:w="7"/><text x="80.7584%" y="335.50"></text></g><g><title>security_inode_getattr (11 samples, 0.02%)</title><rect x="80.5222%" y="325" width="0.0188%" height="15" fill="rgb(232,48,39)" fg:x="47004" fg:w="11"/><text x="80.7722%" y="335.50"></text></g><g><title>selinux_inode_getattr (8 samples, 0.01%)</title><rect x="80.5273%" y="309" width="0.0137%" height="15" fill="rgb(236,34,42)" fg:x="47007" fg:w="8"/><text x="80.7773%" y="319.50"></text></g><g><title>ovl_path_real (11 samples, 0.02%)</title><rect x="80.5872%" y="293" width="0.0188%" height="15" fill="rgb(243,106,37)" fg:x="47042" fg:w="11"/><text x="80.8372%" y="303.50"></text></g><g><title>__do_sys_newfstat (128 samples, 0.22%)</title><rect x="80.4656%" y="357" width="0.2193%" height="15" fill="rgb(218,96,6)" fg:x="46971" fg:w="128"/><text x="80.7156%" y="367.50"></text></g><g><title>vfs_fstat (103 samples, 0.18%)</title><rect x="80.5084%" y="341" width="0.1764%" height="15" fill="rgb(235,130,12)" fg:x="46996" fg:w="103"/><text x="80.7584%" y="351.50"></text></g><g><title>vfs_getattr_nosec (84 samples, 0.14%)</title><rect x="80.5410%" y="325" width="0.1439%" height="15" fill="rgb(231,95,0)" fg:x="47015" fg:w="84"/><text x="80.7910%" y="335.50"></text></g><g><title>ovl_getattr (80 samples, 0.14%)</title><rect x="80.5478%" y="309" width="0.1370%" height="15" fill="rgb(228,12,23)" fg:x="47019" fg:w="80"/><text x="80.7978%" y="319.50"></text></g><g><title>vfs_getattr_nosec (45 samples, 0.08%)</title><rect x="80.6078%" y="293" width="0.0771%" height="15" fill="rgb(216,12,1)" fg:x="47054" fg:w="45"/><text x="80.8578%" y="303.50"></text></g><g><title>xfs_vn_getattr (24 samples, 0.04%)</title><rect x="80.6438%" y="277" width="0.0411%" height="15" fill="rgb(219,59,3)" fg:x="47075" fg:w="24"/><text x="80.8938%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (136 samples, 0.23%)</title><rect x="80.4622%" y="389" width="0.2330%" height="15" fill="rgb(215,208,46)" fg:x="46969" fg:w="136"/><text x="80.7122%" y="399.50"></text></g><g><title>do_syscall_64 (136 samples, 0.23%)</title><rect x="80.4622%" y="373" width="0.2330%" height="15" fill="rgb(254,224,29)" fg:x="46969" fg:w="136"/><text x="80.7122%" y="383.50"></text></g><g><title>sqlite3OsFileSize (151 samples, 0.26%)</title><rect x="80.4399%" y="437" width="0.2587%" height="15" fill="rgb(232,14,29)" fg:x="46956" fg:w="151"/><text x="80.6899%" y="447.50"></text></g><g><title>unixFileSize (151 samples, 0.26%)</title><rect x="80.4399%" y="421" width="0.2587%" height="15" fill="rgb(208,45,52)" fg:x="46956" fg:w="151"/><text x="80.6899%" y="431.50"></text></g><g><title>__fstat64 (148 samples, 0.25%)</title><rect x="80.4451%" y="405" width="0.2535%" height="15" fill="rgb(234,191,28)" fg:x="46959" fg:w="148"/><text x="80.6951%" y="415.50"></text></g><g><title>sqlx_core::logger::QueryLogger::finish (21 samples, 0.04%)</title><rect x="80.7226%" y="437" width="0.0360%" height="15" fill="rgb(244,67,43)" fg:x="47121" fg:w="21"/><text x="80.9726%" y="447.50"></text></g><g><title>std::time::Instant::elapsed (10 samples, 0.02%)</title><rect x="80.7414%" y="421" width="0.0171%" height="15" fill="rgb(236,189,24)" fg:x="47132" fg:w="10"/><text x="80.9914%" y="431.50"></text></g><g><title>std::time::Instant::now (9 samples, 0.02%)</title><rect x="80.7431%" y="405" width="0.0154%" height="15" fill="rgb(239,214,33)" fg:x="47133" fg:w="9"/><text x="80.9931%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (9 samples, 0.02%)</title><rect x="80.7431%" y="389" width="0.0154%" height="15" fill="rgb(226,176,41)" fg:x="47133" fg:w="9"/><text x="80.9931%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (9 samples, 0.02%)</title><rect x="80.7431%" y="373" width="0.0154%" height="15" fill="rgb(248,47,8)" fg:x="47133" fg:w="9"/><text x="80.9931%" y="383.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (8 samples, 0.01%)</title><rect x="80.7449%" y="357" width="0.0137%" height="15" fill="rgb(218,81,44)" fg:x="47134" fg:w="8"/><text x="80.9949%" y="367.50"></text></g><g><title>[[vdso]] (6 samples, 0.01%)</title><rect x="80.7483%" y="341" width="0.0103%" height="15" fill="rgb(213,98,6)" fg:x="47136" fg:w="6"/><text x="80.9983%" y="351.50"></text></g><g><title>sqlx_sqlite::arguments::SqliteArguments::bind (13 samples, 0.02%)</title><rect x="80.7603%" y="437" width="0.0223%" height="15" fill="rgb(222,85,22)" fg:x="47143" fg:w="13"/><text x="81.0103%" y="447.50"></text></g><g><title>sqlx_sqlite::connection::Statements::get (11 samples, 0.02%)</title><rect x="80.7825%" y="437" width="0.0188%" height="15" fill="rgb(239,46,39)" fg:x="47156" fg:w="11"/><text x="81.0325%" y="447.50"></text></g><g><title>sqlx_sqlite::connection::execute::iter (9 samples, 0.02%)</title><rect x="80.8031%" y="437" width="0.0154%" height="15" fill="rgb(237,12,29)" fg:x="47168" fg:w="9"/><text x="81.0531%" y="447.50"></text></g><g><title>sqlx_sqlite::connection::worker::ConnectionWorker::establish::{{closure}}::{{closure}} (22 samples, 0.04%)</title><rect x="80.8185%" y="437" width="0.0377%" height="15" fill="rgb(214,77,8)" fg:x="47177" fg:w="22"/><text x="81.0685%" y="447.50"></text></g><g><title>sqlx_sqlite::row::SqliteRow::current (10 samples, 0.02%)</title><rect x="80.8596%" y="437" width="0.0171%" height="15" fill="rgb(217,168,37)" fg:x="47201" fg:w="10"/><text x="81.1096%" y="447.50"></text></g><g><title>sqlite3_clear_bindings (13 samples, 0.02%)</title><rect x="80.8853%" y="421" width="0.0223%" height="15" fill="rgb(221,217,23)" fg:x="47216" fg:w="13"/><text x="81.1353%" y="431.50"></text></g><g><title>sqlx_sqlite::statement::handle::StatementHandle::clear_bindings (14 samples, 0.02%)</title><rect x="80.8853%" y="437" width="0.0240%" height="15" fill="rgb(243,229,36)" fg:x="47216" fg:w="14"/><text x="81.1353%" y="447.50"></text></g><g><title>sqlx_sqlite::statement::handle::StatementHandle::column_value (18 samples, 0.03%)</title><rect x="80.9127%" y="437" width="0.0308%" height="15" fill="rgb(251,163,40)" fg:x="47232" fg:w="18"/><text x="81.1627%" y="447.50"></text></g><g><title>sqlite3_column_value (17 samples, 0.03%)</title><rect x="80.9144%" y="421" width="0.0291%" height="15" fill="rgb(237,222,12)" fg:x="47233" fg:w="17"/><text x="81.1644%" y="431.50"></text></g><g><title>columnMem (12 samples, 0.02%)</title><rect x="80.9230%" y="405" width="0.0206%" height="15" fill="rgb(248,132,6)" fg:x="47238" fg:w="12"/><text x="81.1730%" y="415.50"></text></g><g><title>btreeReleaseAllCursorPages (38 samples, 0.07%)</title><rect x="81.0481%" y="309" width="0.0651%" height="15" fill="rgb(227,167,50)" fg:x="47311" fg:w="38"/><text x="81.2981%" y="319.50"></text></g><g><title>releasePageNotNull (36 samples, 0.06%)</title><rect x="81.0515%" y="293" width="0.0617%" height="15" fill="rgb(242,84,37)" fg:x="47313" fg:w="36"/><text x="81.3015%" y="303.50"></text></g><g><title>sqlite3PagerUnrefNotNull (35 samples, 0.06%)</title><rect x="81.0532%" y="277" width="0.0600%" height="15" fill="rgb(212,4,50)" fg:x="47314" fg:w="35"/><text x="81.3032%" y="287.50"></text></g><g><title>sqlite3PcacheRelease (31 samples, 0.05%)</title><rect x="81.0601%" y="261" width="0.0531%" height="15" fill="rgb(230,228,32)" fg:x="47318" fg:w="31"/><text x="81.3101%" y="271.50"></text></g><g><title>pcacheUnpin (29 samples, 0.05%)</title><rect x="81.0635%" y="245" width="0.0497%" height="15" fill="rgb(248,217,23)" fg:x="47320" fg:w="29"/><text x="81.3135%" y="255.50"></text></g><g><title>pcache1Unpin (27 samples, 0.05%)</title><rect x="81.0669%" y="229" width="0.0463%" height="15" fill="rgb(238,197,32)" fg:x="47322" fg:w="27"/><text x="81.3169%" y="239.50"></text></g><g><title>sqlite3_mutex_leave (15 samples, 0.03%)</title><rect x="81.0875%" y="213" width="0.0257%" height="15" fill="rgb(236,106,1)" fg:x="47334" fg:w="15"/><text x="81.3375%" y="223.50"></text></g><g><title>pthreadMutexLeave (12 samples, 0.02%)</title><rect x="81.0926%" y="197" width="0.0206%" height="15" fill="rgb(219,228,13)" fg:x="47337" fg:w="12"/><text x="81.3426%" y="207.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (10 samples, 0.02%)</title><rect x="81.0960%" y="181" width="0.0171%" height="15" fill="rgb(238,30,35)" fg:x="47339" fg:w="10"/><text x="81.3460%" y="191.50"></text></g><g><title>closeCursorsInFrame (46 samples, 0.08%)</title><rect x="81.0361%" y="357" width="0.0788%" height="15" fill="rgb(236,70,23)" fg:x="47304" fg:w="46"/><text x="81.2861%" y="367.50"></text></g><g><title>sqlite3VdbeFreeCursorNN (43 samples, 0.07%)</title><rect x="81.0412%" y="341" width="0.0737%" height="15" fill="rgb(249,104,48)" fg:x="47307" fg:w="43"/><text x="81.2912%" y="351.50"></text></g><g><title>sqlite3BtreeCloseCursor (40 samples, 0.07%)</title><rect x="81.0464%" y="325" width="0.0685%" height="15" fill="rgb(254,117,50)" fg:x="47310" fg:w="40"/><text x="81.2964%" y="335.50"></text></g><g><title>releaseMemArray (9 samples, 0.02%)</title><rect x="81.1149%" y="357" width="0.0154%" height="15" fill="rgb(223,152,4)" fg:x="47350" fg:w="9"/><text x="81.3649%" y="367.50"></text></g><g><title>closeAllCursors (58 samples, 0.10%)</title><rect x="81.0327%" y="373" width="0.0994%" height="15" fill="rgb(245,6,2)" fg:x="47302" fg:w="58"/><text x="81.2827%" y="383.50"></text></g><g><title>enterMutex (11 samples, 0.02%)</title><rect x="81.1457%" y="357" width="0.0188%" height="15" fill="rgb(249,150,24)" fg:x="47368" fg:w="11"/><text x="81.3957%" y="367.50"></text></g><g><title>sqlite3_mutex_enter (6 samples, 0.01%)</title><rect x="81.1543%" y="341" width="0.0103%" height="15" fill="rgb(228,185,42)" fg:x="47373" fg:w="6"/><text x="81.4043%" y="351.50"></text></g><g><title>pthreadMutexEnter (6 samples, 0.01%)</title><rect x="81.1543%" y="325" width="0.0103%" height="15" fill="rgb(226,39,33)" fg:x="47373" fg:w="6"/><text x="81.4043%" y="335.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (6 samples, 0.01%)</title><rect x="81.1543%" y="309" width="0.0103%" height="15" fill="rgb(221,166,19)" fg:x="47373" fg:w="6"/><text x="81.4043%" y="319.50"></text></g><g><title>sqlite3ConnectionUnlocked (17 samples, 0.03%)</title><rect x="81.1406%" y="373" width="0.0291%" height="15" fill="rgb(209,109,2)" fg:x="47365" fg:w="17"/><text x="81.3906%" y="383.50"></text></g><g><title>btreeEndTransaction (19 samples, 0.03%)</title><rect x="81.2262%" y="341" width="0.0325%" height="15" fill="rgb(252,216,26)" fg:x="47415" fg:w="19"/><text x="81.4762%" y="351.50"></text></g><g><title>unlockBtreeIfUnused (14 samples, 0.02%)</title><rect x="81.2348%" y="325" width="0.0240%" height="15" fill="rgb(227,173,36)" fg:x="47420" fg:w="14"/><text x="81.4848%" y="335.50"></text></g><g><title>releasePageOne (12 samples, 0.02%)</title><rect x="81.2382%" y="309" width="0.0206%" height="15" fill="rgb(209,90,7)" fg:x="47422" fg:w="12"/><text x="81.4882%" y="319.50"></text></g><g><title>sqlite3PagerUnrefPageOne (11 samples, 0.02%)</title><rect x="81.2399%" y="293" width="0.0188%" height="15" fill="rgb(250,194,11)" fg:x="47423" fg:w="11"/><text x="81.4899%" y="303.50"></text></g><g><title>sqlite3PcacheRelease (9 samples, 0.02%)</title><rect x="81.2434%" y="277" width="0.0154%" height="15" fill="rgb(220,72,50)" fg:x="47425" fg:w="9"/><text x="81.4934%" y="287.50"></text></g><g><title>pcacheUnpin (8 samples, 0.01%)</title><rect x="81.2451%" y="261" width="0.0137%" height="15" fill="rgb(222,106,48)" fg:x="47426" fg:w="8"/><text x="81.4951%" y="271.50"></text></g><g><title>pcache1Unpin (8 samples, 0.01%)</title><rect x="81.2451%" y="245" width="0.0137%" height="15" fill="rgb(216,220,45)" fg:x="47426" fg:w="8"/><text x="81.4951%" y="255.50"></text></g><g><title>sqlite3BtreeCommitPhaseTwo (20 samples, 0.03%)</title><rect x="81.2262%" y="357" width="0.0343%" height="15" fill="rgb(234,112,18)" fg:x="47415" fg:w="20"/><text x="81.4762%" y="367.50"></text></g><g><title>sqlite3VdbeReset (169 samples, 0.29%)</title><rect x="80.9933%" y="405" width="0.2895%" height="15" fill="rgb(206,179,9)" fg:x="47279" fg:w="169"/><text x="81.2433%" y="415.50"></text></g><g><title>sqlite3VdbeHalt (163 samples, 0.28%)</title><rect x="81.0035%" y="389" width="0.2792%" height="15" fill="rgb(215,115,40)" fg:x="47285" fg:w="163"/><text x="81.2535%" y="399.50"></text></g><g><title>vdbeCommit (55 samples, 0.09%)</title><rect x="81.1885%" y="373" width="0.0942%" height="15" fill="rgb(222,69,34)" fg:x="47393" fg:w="55"/><text x="81.4385%" y="383.50"></text></g><g><title>sqlx_sqlite::statement::handle::StatementHandle::reset (202 samples, 0.35%)</title><rect x="80.9436%" y="437" width="0.3460%" height="15" fill="rgb(209,161,10)" fg:x="47250" fg:w="202"/><text x="81.1936%" y="447.50"></text></g><g><title>sqlite3_reset (194 samples, 0.33%)</title><rect x="80.9573%" y="421" width="0.3323%" height="15" fill="rgb(217,6,38)" fg:x="47258" fg:w="194"/><text x="81.2073%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="81.6168%" y="373" width="0.0120%" height="15" fill="rgb(229,229,48)" fg:x="47643" fg:w="7"/><text x="81.8668%" y="383.50"></text></g><g><title>allocateCursor (16 samples, 0.03%)</title><rect x="81.6288%" y="373" width="0.0274%" height="15" fill="rgb(225,21,28)" fg:x="47650" fg:w="16"/><text x="81.8788%" y="383.50"></text></g><g><title>pcache1FetchNoMutex (13 samples, 0.02%)</title><rect x="81.7316%" y="229" width="0.0223%" height="15" fill="rgb(206,33,13)" fg:x="47710" fg:w="13"/><text x="81.9816%" y="239.50"></text></g><g><title>sqlite3_mutex_enter (13 samples, 0.02%)</title><rect x="81.7539%" y="229" width="0.0223%" height="15" fill="rgb(242,178,17)" fg:x="47723" fg:w="13"/><text x="82.0039%" y="239.50"></text></g><g><title>pthreadMutexEnter (13 samples, 0.02%)</title><rect x="81.7539%" y="213" width="0.0223%" height="15" fill="rgb(220,162,5)" fg:x="47723" fg:w="13"/><text x="82.0039%" y="223.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (13 samples, 0.02%)</title><rect x="81.7539%" y="197" width="0.0223%" height="15" fill="rgb(210,33,43)" fg:x="47723" fg:w="13"/><text x="82.0039%" y="207.50"></text></g><g><title>sqlite3PcacheFetch (45 samples, 0.08%)</title><rect x="81.7179%" y="277" width="0.0771%" height="15" fill="rgb(216,116,54)" fg:x="47702" fg:w="45"/><text x="81.9679%" y="287.50"></text></g><g><title>pcache1Fetch (43 samples, 0.07%)</title><rect x="81.7213%" y="261" width="0.0737%" height="15" fill="rgb(249,92,24)" fg:x="47704" fg:w="43"/><text x="81.9713%" y="271.50"></text></g><g><title>pcache1FetchWithMutex (37 samples, 0.06%)</title><rect x="81.7316%" y="245" width="0.0634%" height="15" fill="rgb(231,189,14)" fg:x="47710" fg:w="37"/><text x="81.9816%" y="255.50"></text></g><g><title>sqlite3_mutex_leave (11 samples, 0.02%)</title><rect x="81.7761%" y="229" width="0.0188%" height="15" fill="rgb(230,8,41)" fg:x="47736" fg:w="11"/><text x="82.0261%" y="239.50"></text></g><g><title>pthreadMutexLeave (11 samples, 0.02%)</title><rect x="81.7761%" y="213" width="0.0188%" height="15" fill="rgb(249,7,27)" fg:x="47736" fg:w="11"/><text x="82.0261%" y="223.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.02%)</title><rect x="81.7761%" y="197" width="0.0188%" height="15" fill="rgb(232,86,5)" fg:x="47736" fg:w="11"/><text x="82.0261%" y="207.50"></text></g><g><title>btreeGetPage (62 samples, 0.11%)</title><rect x="81.6956%" y="325" width="0.1062%" height="15" fill="rgb(224,175,18)" fg:x="47689" fg:w="62"/><text x="81.9456%" y="335.50"></text></g><g><title>sqlite3PagerGet (58 samples, 0.10%)</title><rect x="81.7025%" y="309" width="0.0994%" height="15" fill="rgb(220,129,12)" fg:x="47693" fg:w="58"/><text x="81.9525%" y="319.50"></text></g><g><title>getPageNormal (56 samples, 0.10%)</title><rect x="81.7059%" y="293" width="0.0959%" height="15" fill="rgb(210,19,36)" fg:x="47695" fg:w="56"/><text x="81.9559%" y="303.50"></text></g><g><title>sqlite3Get4byte (6 samples, 0.01%)</title><rect x="81.8035%" y="325" width="0.0103%" height="15" fill="rgb(219,96,14)" fg:x="47752" fg:w="6"/><text x="82.0535%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="81.8635%" y="213" width="0.0120%" height="15" fill="rgb(249,106,1)" fg:x="47787" fg:w="7"/><text x="82.1135%" y="223.50"></text></g><g><title>walIndexReadHdr (36 samples, 0.06%)</title><rect x="81.8515%" y="245" width="0.0617%" height="15" fill="rgb(249,155,20)" fg:x="47780" fg:w="36"/><text x="82.1015%" y="255.50"></text></g><g><title>walIndexTryHdr (30 samples, 0.05%)</title><rect x="81.8618%" y="229" width="0.0514%" height="15" fill="rgb(244,168,9)" fg:x="47786" fg:w="30"/><text x="82.1118%" y="239.50"></text></g><g><title>walShmBarrier (20 samples, 0.03%)</title><rect x="81.8789%" y="213" width="0.0343%" height="15" fill="rgb(216,23,50)" fg:x="47796" fg:w="20"/><text x="82.1289%" y="223.50"></text></g><g><title>sqlite3OsShmBarrier (19 samples, 0.03%)</title><rect x="81.8806%" y="197" width="0.0325%" height="15" fill="rgb(224,219,20)" fg:x="47797" fg:w="19"/><text x="82.1306%" y="207.50"></text></g><g><title>unixShmBarrier (18 samples, 0.03%)</title><rect x="81.8823%" y="181" width="0.0308%" height="15" fill="rgb(222,156,15)" fg:x="47798" fg:w="18"/><text x="82.1323%" y="191.50"></text></g><g><title>unixEnterMutex (14 samples, 0.02%)</title><rect x="81.8892%" y="165" width="0.0240%" height="15" fill="rgb(231,97,17)" fg:x="47802" fg:w="14"/><text x="82.1392%" y="175.50"></text></g><g><title>sqlite3_mutex_enter (13 samples, 0.02%)</title><rect x="81.8909%" y="149" width="0.0223%" height="15" fill="rgb(218,70,48)" fg:x="47803" fg:w="13"/><text x="82.1409%" y="159.50"></text></g><g><title>pthreadMutexEnter (12 samples, 0.02%)</title><rect x="81.8926%" y="133" width="0.0206%" height="15" fill="rgb(212,196,52)" fg:x="47804" fg:w="12"/><text x="82.1426%" y="143.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (12 samples, 0.02%)</title><rect x="81.8926%" y="117" width="0.0206%" height="15" fill="rgb(243,203,18)" fg:x="47804" fg:w="12"/><text x="82.1426%" y="127.50"></text></g><g><title>sqlite3_mutex_enter (11 samples, 0.02%)</title><rect x="81.9355%" y="197" width="0.0188%" height="15" fill="rgb(252,125,41)" fg:x="47829" fg:w="11"/><text x="82.1855%" y="207.50"></text></g><g><title>pthreadMutexEnter (11 samples, 0.02%)</title><rect x="81.9355%" y="181" width="0.0188%" height="15" fill="rgb(223,180,33)" fg:x="47829" fg:w="11"/><text x="82.1855%" y="191.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (9 samples, 0.02%)</title><rect x="81.9389%" y="165" width="0.0154%" height="15" fill="rgb(254,159,46)" fg:x="47831" fg:w="9"/><text x="82.1889%" y="175.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.01%)</title><rect x="82.0228%" y="69" width="0.0137%" height="15" fill="rgb(254,38,10)" fg:x="47880" fg:w="8"/><text x="82.2728%" y="79.50"></text></g><g><title>kmem_cache_alloc_noprof (21 samples, 0.04%)</title><rect x="82.0399%" y="69" width="0.0360%" height="15" fill="rgb(208,217,32)" fg:x="47890" fg:w="21"/><text x="82.2899%" y="79.50"></text></g><g><title>__pi_memset (6 samples, 0.01%)</title><rect x="82.0656%" y="53" width="0.0103%" height="15" fill="rgb(221,120,13)" fg:x="47905" fg:w="6"/><text x="82.3156%" y="63.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.02%)</title><rect x="82.1033%" y="53" width="0.0154%" height="15" fill="rgb(246,54,52)" fg:x="47927" fg:w="9"/><text x="82.3533%" y="63.50"></text></g><g><title>kmem_cache_alloc_noprof (19 samples, 0.03%)</title><rect x="82.1205%" y="53" width="0.0325%" height="15" fill="rgb(242,34,25)" fg:x="47937" fg:w="19"/><text x="82.3705%" y="63.50"></text></g><g><title>__pi_memset (7 samples, 0.01%)</title><rect x="82.1410%" y="37" width="0.0120%" height="15" fill="rgb(247,209,9)" fg:x="47949" fg:w="7"/><text x="82.3910%" y="47.50"></text></g><g><title>posix_lock_inode (48 samples, 0.08%)</title><rect x="82.0776%" y="69" width="0.0822%" height="15" fill="rgb(228,71,26)" fg:x="47912" fg:w="48"/><text x="82.3276%" y="79.50"></text></g><g><title>file_has_perm (7 samples, 0.01%)</title><rect x="82.1667%" y="53" width="0.0120%" height="15" fill="rgb(222,145,49)" fg:x="47964" fg:w="7"/><text x="82.4167%" y="63.50"></text></g><g><title>avc_has_perm (6 samples, 0.01%)</title><rect x="82.1684%" y="37" width="0.0103%" height="15" fill="rgb(218,121,17)" fg:x="47965" fg:w="6"/><text x="82.4184%" y="47.50"></text></g><g><title>do_fcntl (103 samples, 0.18%)</title><rect x="82.0040%" y="101" width="0.1764%" height="15" fill="rgb(244,50,7)" fg:x="47869" fg:w="103"/><text x="82.2540%" y="111.50"></text></g><g><title>fcntl_setlk (98 samples, 0.17%)</title><rect x="82.0125%" y="85" width="0.1679%" height="15" fill="rgb(246,229,37)" fg:x="47874" fg:w="98"/><text x="82.2625%" y="95.50"></text></g><g><title>security_file_lock (12 samples, 0.02%)</title><rect x="82.1599%" y="69" width="0.0206%" height="15" fill="rgb(225,18,5)" fg:x="47960" fg:w="12"/><text x="82.4099%" y="79.50"></text></g><g><title>fdget_raw (17 samples, 0.03%)</title><rect x="82.1804%" y="101" width="0.0291%" height="15" fill="rgb(213,204,8)" fg:x="47972" fg:w="17"/><text x="82.4304%" y="111.50"></text></g><g><title>__x64_sys_fcntl (132 samples, 0.23%)</title><rect x="81.9988%" y="117" width="0.2261%" height="15" fill="rgb(238,103,6)" fg:x="47866" fg:w="132"/><text x="82.2488%" y="127.50"></text></g><g><title>security_file_fcntl (7 samples, 0.01%)</title><rect x="82.2130%" y="101" width="0.0120%" height="15" fill="rgb(222,25,35)" fg:x="47991" fg:w="7"/><text x="82.4630%" y="111.50"></text></g><g><title>file_has_perm (6 samples, 0.01%)</title><rect x="82.2147%" y="85" width="0.0103%" height="15" fill="rgb(213,203,35)" fg:x="47992" fg:w="6"/><text x="82.4647%" y="95.50"></text></g><g><title>arch_exit_to_user_mode_prepare.isra.0 (6 samples, 0.01%)</title><rect x="82.2250%" y="117" width="0.0103%" height="15" fill="rgb(221,79,53)" fg:x="47998" fg:w="6"/><text x="82.4750%" y="127.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (146 samples, 0.25%)</title><rect x="81.9903%" y="149" width="0.2501%" height="15" fill="rgb(243,200,35)" fg:x="47861" fg:w="146"/><text x="82.2403%" y="159.50"></text></g><g><title>do_syscall_64 (144 samples, 0.25%)</title><rect x="81.9937%" y="133" width="0.2467%" height="15" fill="rgb(248,60,25)" fg:x="47863" fg:w="144"/><text x="82.2437%" y="143.50"></text></g><g><title>walLockShared (192 samples, 0.33%)</title><rect x="81.9132%" y="245" width="0.3289%" height="15" fill="rgb(227,53,46)" fg:x="47816" fg:w="192"/><text x="82.1632%" y="255.50"></text></g><g><title>sqlite3OsShmLock (190 samples, 0.33%)</title><rect x="81.9166%" y="229" width="0.3255%" height="15" fill="rgb(216,120,32)" fg:x="47818" fg:w="190"/><text x="82.1666%" y="239.50"></text></g><g><title>unixShmLock (188 samples, 0.32%)</title><rect x="81.9200%" y="213" width="0.3221%" height="15" fill="rgb(220,134,1)" fg:x="47820" fg:w="188"/><text x="82.1700%" y="223.50"></text></g><g><title>unixShmSystemLock (165 samples, 0.28%)</title><rect x="81.9594%" y="197" width="0.2827%" height="15" fill="rgb(237,168,5)" fg:x="47843" fg:w="165"/><text x="82.2094%" y="207.50"></text></g><g><title>__libc_fcntl64 (163 samples, 0.28%)</title><rect x="81.9629%" y="181" width="0.2792%" height="15" fill="rgb(231,100,33)" fg:x="47845" fg:w="163"/><text x="82.2129%" y="191.50"></text></g><g><title>__fcntl64_nocancel_adjusted (161 samples, 0.28%)</title><rect x="81.9663%" y="165" width="0.2758%" height="15" fill="rgb(236,177,47)" fg:x="47847" fg:w="161"/><text x="82.2163%" y="175.50"></text></g><g><title>sqlite3WalBeginReadTransaction (245 samples, 0.42%)</title><rect x="81.8327%" y="293" width="0.4197%" height="15" fill="rgb(235,7,49)" fg:x="47769" fg:w="245"/><text x="82.0827%" y="303.50"></text></g><g><title>walBeginReadTransaction (244 samples, 0.42%)</title><rect x="81.8344%" y="277" width="0.4180%" height="15" fill="rgb(232,119,22)" fg:x="47770" fg:w="244"/><text x="82.0844%" y="287.50"></text></g><g><title>walTryBeginRead (239 samples, 0.41%)</title><rect x="81.8429%" y="261" width="0.4094%" height="15" fill="rgb(254,73,53)" fg:x="47775" fg:w="239"/><text x="82.0929%" y="271.50"></text></g><g><title>walShmBarrier (6 samples, 0.01%)</title><rect x="82.2421%" y="245" width="0.0103%" height="15" fill="rgb(251,35,20)" fg:x="48008" fg:w="6"/><text x="82.4921%" y="255.50"></text></g><g><title>sqlite3OsShmBarrier (6 samples, 0.01%)</title><rect x="82.2421%" y="229" width="0.0103%" height="15" fill="rgb(241,119,20)" fg:x="48008" fg:w="6"/><text x="82.4921%" y="239.50"></text></g><g><title>pagerBeginReadTransaction (252 samples, 0.43%)</title><rect x="81.8292%" y="309" width="0.4317%" height="15" fill="rgb(207,102,14)" fg:x="47767" fg:w="252"/><text x="82.0792%" y="319.50"></text></g><g><title>pagerPagecount (10 samples, 0.02%)</title><rect x="82.2609%" y="309" width="0.0171%" height="15" fill="rgb(248,201,50)" fg:x="48019" fg:w="10"/><text x="82.5109%" y="319.50"></text></g><g><title>lockBtree (351 samples, 0.60%)</title><rect x="81.6819%" y="341" width="0.6013%" height="15" fill="rgb(222,185,44)" fg:x="47681" fg:w="351"/><text x="81.9319%" y="351.50"></text></g><g><title>sqlite3PagerSharedLock (272 samples, 0.47%)</title><rect x="81.8172%" y="325" width="0.4660%" height="15" fill="rgb(218,107,18)" fg:x="47760" fg:w="272"/><text x="82.0672%" y="335.50"></text></g><g><title>btreeBeginTrans (359 samples, 0.61%)</title><rect x="81.6716%" y="357" width="0.6150%" height="15" fill="rgb(237,177,39)" fg:x="47675" fg:w="359"/><text x="81.9216%" y="367.50"></text></g><g><title>sqlite3BtreeBeginTrans (369 samples, 0.63%)</title><rect x="81.6648%" y="373" width="0.6321%" height="15" fill="rgb(246,69,6)" fg:x="47671" fg:w="369"/><text x="81.9148%" y="383.50"></text></g><g><title>sqlite3BtreeIntegerKey (9 samples, 0.02%)</title><rect x="82.3158%" y="373" width="0.0154%" height="15" fill="rgb(234,208,37)" fg:x="48051" fg:w="9"/><text x="82.5658%" y="383.50"></text></g><g><title>getCellInfo (6 samples, 0.01%)</title><rect x="82.3209%" y="357" width="0.0103%" height="15" fill="rgb(225,4,6)" fg:x="48054" fg:w="6"/><text x="82.5709%" y="367.50"></text></g><g><title>pcache1FetchNoMutex (15 samples, 0.03%)</title><rect x="82.4203%" y="245" width="0.0257%" height="15" fill="rgb(233,45,0)" fg:x="48112" fg:w="15"/><text x="82.6703%" y="255.50"></text></g><g><title>sqlite3PcacheFetch (25 samples, 0.04%)</title><rect x="82.4168%" y="293" width="0.0428%" height="15" fill="rgb(226,136,5)" fg:x="48110" fg:w="25"/><text x="82.6668%" y="303.50"></text></g><g><title>pcache1Fetch (24 samples, 0.04%)</title><rect x="82.4185%" y="277" width="0.0411%" height="15" fill="rgb(211,91,47)" fg:x="48111" fg:w="24"/><text x="82.6685%" y="287.50"></text></g><g><title>pcache1FetchWithMutex (23 samples, 0.04%)</title><rect x="82.4203%" y="261" width="0.0394%" height="15" fill="rgb(242,88,51)" fg:x="48112" fg:w="23"/><text x="82.6703%" y="271.50"></text></g><g><title>sqlite3_mutex_leave (7 samples, 0.01%)</title><rect x="82.4477%" y="245" width="0.0120%" height="15" fill="rgb(230,91,28)" fg:x="48128" fg:w="7"/><text x="82.6977%" y="255.50"></text></g><g><title>pthreadMutexLeave (7 samples, 0.01%)</title><rect x="82.4477%" y="229" width="0.0120%" height="15" fill="rgb(254,186,29)" fg:x="48128" fg:w="7"/><text x="82.6977%" y="239.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (7 samples, 0.01%)</title><rect x="82.4477%" y="213" width="0.0120%" height="15" fill="rgb(238,6,4)" fg:x="48128" fg:w="7"/><text x="82.6977%" y="223.50"></text></g><g><title>moveToRoot (29 samples, 0.05%)</title><rect x="82.4117%" y="357" width="0.0497%" height="15" fill="rgb(221,151,16)" fg:x="48107" fg:w="29"/><text x="82.6617%" y="367.50"></text></g><g><title>getAndInitPage (28 samples, 0.05%)</title><rect x="82.4134%" y="341" width="0.0480%" height="15" fill="rgb(251,143,52)" fg:x="48108" fg:w="28"/><text x="82.6634%" y="351.50"></text></g><g><title>sqlite3PagerGet (27 samples, 0.05%)</title><rect x="82.4151%" y="325" width="0.0463%" height="15" fill="rgb(206,90,15)" fg:x="48109" fg:w="27"/><text x="82.6651%" y="335.50"></text></g><g><title>getPageNormal (26 samples, 0.04%)</title><rect x="82.4168%" y="309" width="0.0445%" height="15" fill="rgb(218,35,8)" fg:x="48110" fg:w="26"/><text x="82.6668%" y="319.50"></text></g><g><title>sqlite3BtreeTableMoveto (85 samples, 0.15%)</title><rect x="82.3346%" y="373" width="0.1456%" height="15" fill="rgb(239,215,6)" fg:x="48062" fg:w="85"/><text x="82.5846%" y="383.50"></text></g><g><title>sqlite3GetVarint (11 samples, 0.02%)</title><rect x="82.4614%" y="357" width="0.0188%" height="15" fill="rgb(245,116,39)" fg:x="48136" fg:w="11"/><text x="82.7114%" y="367.50"></text></g><g><title>sqlite3VdbeMemGrow (7 samples, 0.01%)</title><rect x="82.4819%" y="373" width="0.0120%" height="15" fill="rgb(242,65,28)" fg:x="48148" fg:w="7"/><text x="82.7319%" y="383.50"></text></g><g><title>sqlite3DbMallocRaw (6 samples, 0.01%)</title><rect x="82.4836%" y="357" width="0.0103%" height="15" fill="rgb(252,132,53)" fg:x="48149" fg:w="6"/><text x="82.7336%" y="367.50"></text></g><g><title>sqlite3VdbeExec (702 samples, 1.20%)</title><rect x="81.3170%" y="389" width="1.2026%" height="15" fill="rgb(224,159,50)" fg:x="47468" fg:w="702"/><text x="81.5670%" y="399.50"></text></g><g><title>sqlite3Step (716 samples, 1.23%)</title><rect x="81.2948%" y="405" width="1.2266%" height="15" fill="rgb(224,93,4)" fg:x="47455" fg:w="716"/><text x="81.5448%" y="415.50"></text></g><g><title>sqlx_sqlite::statement::handle::StatementHandle::step (723 samples, 1.24%)</title><rect x="81.2896%" y="437" width="1.2386%" height="15" fill="rgb(208,81,34)" fg:x="47452" fg:w="723"/><text x="81.5396%" y="447.50"></text></g><g><title>sqlite3_step (723 samples, 1.24%)</title><rect x="81.2896%" y="421" width="1.2386%" height="15" fill="rgb(233,92,54)" fg:x="47452" fg:w="723"/><text x="81.5396%" y="431.50"></text></g><g><title>sqlx_sqlite::statement::virtual::VirtualStatement::reset (15 samples, 0.03%)</title><rect x="82.5316%" y="437" width="0.0257%" height="15" fill="rgb(237,21,14)" fg:x="48177" fg:w="15"/><text x="82.7816%" y="447.50"></text></g><g><title>sqlite3VdbeMemMakeWriteable (9 samples, 0.02%)</title><rect x="82.6053%" y="405" width="0.0154%" height="15" fill="rgb(249,128,51)" fg:x="48220" fg:w="9"/><text x="82.8553%" y="415.50"></text></g><g><title>vdbeMemAddTerminator (7 samples, 0.01%)</title><rect x="82.6087%" y="389" width="0.0120%" height="15" fill="rgb(223,129,24)" fg:x="48222" fg:w="7"/><text x="82.8587%" y="399.50"></text></g><g><title>sqlite3VdbeMemGrow (7 samples, 0.01%)</title><rect x="82.6087%" y="373" width="0.0120%" height="15" fill="rgb(231,168,25)" fg:x="48222" fg:w="7"/><text x="82.8587%" y="383.50"></text></g><g><title>sqlite3DbMallocRaw (6 samples, 0.01%)</title><rect x="82.6104%" y="357" width="0.0103%" height="15" fill="rgb(224,39,20)" fg:x="48223" fg:w="6"/><text x="82.8604%" y="367.50"></text></g><g><title>sqlite3_mutex_enter (17 samples, 0.03%)</title><rect x="82.6327%" y="373" width="0.0291%" height="15" fill="rgb(225,152,53)" fg:x="48236" fg:w="17"/><text x="82.8827%" y="383.50"></text></g><g><title>pthreadMutexEnter (17 samples, 0.03%)</title><rect x="82.6327%" y="357" width="0.0291%" height="15" fill="rgb(252,17,24)" fg:x="48236" fg:w="17"/><text x="82.8827%" y="367.50"></text></g><g><title>pthread_mutex_lock@@GLIBC_2.2.5 (17 samples, 0.03%)</title><rect x="82.6327%" y="341" width="0.0291%" height="15" fill="rgb(250,114,30)" fg:x="48236" fg:w="17"/><text x="82.8827%" y="351.50"></text></g><g><title>sqlite3Malloc (31 samples, 0.05%)</title><rect x="82.6310%" y="389" width="0.0531%" height="15" fill="rgb(229,5,4)" fg:x="48235" fg:w="31"/><text x="82.8810%" y="399.50"></text></g><g><title>sqlite3_mutex_leave (13 samples, 0.02%)</title><rect x="82.6618%" y="373" width="0.0223%" height="15" fill="rgb(225,176,49)" fg:x="48253" fg:w="13"/><text x="82.9118%" y="383.50"></text></g><g><title>pthreadMutexLeave (12 samples, 0.02%)</title><rect x="82.6635%" y="357" width="0.0206%" height="15" fill="rgb(224,221,49)" fg:x="48254" fg:w="12"/><text x="82.9135%" y="367.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.02%)</title><rect x="82.6635%" y="341" width="0.0206%" height="15" fill="rgb(253,169,27)" fg:x="48254" fg:w="12"/><text x="82.9135%" y="351.50"></text></g><g><title>sqlx_sqlite::value::SqliteValue::new (87 samples, 0.15%)</title><rect x="82.5573%" y="437" width="0.1490%" height="15" fill="rgb(211,206,16)" fg:x="48192" fg:w="87"/><text x="82.8073%" y="447.50"></text></g><g><title>sqlite3_value_dup (81 samples, 0.14%)</title><rect x="82.5676%" y="421" width="0.1388%" height="15" fill="rgb(244,87,35)" fg:x="48198" fg:w="81"/><text x="82.8176%" y="431.50"></text></g><g><title>sqlite3_malloc (46 samples, 0.08%)</title><rect x="82.6275%" y="405" width="0.0788%" height="15" fill="rgb(246,28,10)" fg:x="48233" fg:w="46"/><text x="82.8775%" y="415.50"></text></g><g><title>sqlite3_initialize (9 samples, 0.02%)</title><rect x="82.6909%" y="389" width="0.0154%" height="15" fill="rgb(229,12,44)" fg:x="48270" fg:w="9"/><text x="82.9409%" y="399.50"></text></g><g><title>sqlite3MemoryBarrier (6 samples, 0.01%)</title><rect x="82.6961%" y="373" width="0.0103%" height="15" fill="rgb(210,145,37)" fg:x="48273" fg:w="6"/><text x="82.9461%" y="383.50"></text></g><g><title>std::sync::poison::Flag::done (7 samples, 0.01%)</title><rect x="82.7081%" y="437" width="0.0120%" height="15" fill="rgb(227,112,52)" fg:x="48280" fg:w="7"/><text x="82.9581%" y="447.50"></text></g><g><title>std::sync::poison::Flag::guard (9 samples, 0.02%)</title><rect x="82.7200%" y="437" width="0.0154%" height="15" fill="rgb(238,155,34)" fg:x="48287" fg:w="9"/><text x="82.9700%" y="447.50"></text></g><g><title>std::sync::poison::map_result (11 samples, 0.02%)</title><rect x="82.7355%" y="437" width="0.0188%" height="15" fill="rgb(239,226,36)" fg:x="48296" fg:w="11"/><text x="82.9855%" y="447.50"></text></g><g><title>syscall (12 samples, 0.02%)</title><rect x="82.7646%" y="437" width="0.0206%" height="15" fill="rgb(230,16,23)" fg:x="48313" fg:w="12"/><text x="83.0146%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.01%)</title><rect x="82.7732%" y="421" width="0.0120%" height="15" fill="rgb(236,171,36)" fg:x="48318" fg:w="7"/><text x="83.0232%" y="431.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (9 samples, 0.02%)</title><rect x="82.7971%" y="437" width="0.0154%" height="15" fill="rgb(221,22,14)" fg:x="48332" fg:w="9"/><text x="83.0471%" y="447.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (14 samples, 0.02%)</title><rect x="82.8126%" y="437" width="0.0240%" height="15" fill="rgb(242,43,11)" fg:x="48341" fg:w="14"/><text x="83.0626%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (7 samples, 0.01%)</title><rect x="82.8571%" y="437" width="0.0120%" height="15" fill="rgb(232,69,23)" fg:x="48367" fg:w="7"/><text x="83.1071%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="82.8588%" y="421" width="0.0103%" height="15" fill="rgb(216,180,54)" fg:x="48368" fg:w="6"/><text x="83.1088%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_remote (11 samples, 0.02%)</title><rect x="82.8691%" y="437" width="0.0188%" height="15" fill="rgb(216,5,24)" fg:x="48374" fg:w="11"/><text x="83.1191%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (8 samples, 0.01%)</title><rect x="82.8999%" y="437" width="0.0137%" height="15" fill="rgb(225,89,9)" fg:x="48392" fg:w="8"/><text x="83.1499%" y="447.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (8 samples, 0.01%)</title><rect x="82.9239%" y="437" width="0.0137%" height="15" fill="rgb(243,75,33)" fg:x="48406" fg:w="8"/><text x="83.1739%" y="447.50"></text></g><g><title>sqlx-sqlite-wor (9,285 samples, 15.91%)</title><rect x="67.0812%" y="453" width="15.9061%" height="15" fill="rgb(247,141,45)" fg:x="39158" fg:w="9285"/><text x="67.3312%" y="463.50">sqlx-sqlite-wor</text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="82.9941%" y="421" width="0.0154%" height="15" fill="rgb(232,177,36)" fg:x="48447" fg:w="9"/><text x="83.2441%" y="431.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (12 samples, 0.02%)</title><rect x="82.9924%" y="437" width="0.0206%" height="15" fill="rgb(219,125,36)" fg:x="48446" fg:w="12"/><text x="83.2424%" y="447.50"></text></g><g><title>_int_free_merge_chunk (26 samples, 0.04%)</title><rect x="83.1192%" y="373" width="0.0445%" height="15" fill="rgb(227,94,9)" fg:x="48520" fg:w="26"/><text x="83.3692%" y="383.50"></text></g><g><title>unlink_chunk.isra.0 (8 samples, 0.01%)</title><rect x="83.1500%" y="357" width="0.0137%" height="15" fill="rgb(240,34,52)" fg:x="48538" fg:w="8"/><text x="83.4000%" y="367.50"></text></g><g><title>cfree@GLIBC_2.2.5 (86 samples, 0.15%)</title><rect x="83.0181%" y="405" width="0.1473%" height="15" fill="rgb(216,45,12)" fg:x="48461" fg:w="86"/><text x="83.2681%" y="415.50"></text></g><g><title>_int_free_chunk (60 samples, 0.10%)</title><rect x="83.0627%" y="389" width="0.1028%" height="15" fill="rgb(246,21,19)" fg:x="48487" fg:w="60"/><text x="83.3127%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (90 samples, 0.15%)</title><rect x="83.0164%" y="421" width="0.1542%" height="15" fill="rgb(213,98,42)" fg:x="48460" fg:w="90"/><text x="83.2664%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.16%)</title><rect x="83.0130%" y="437" width="0.1627%" height="15" fill="rgb(250,136,47)" fg:x="48458" fg:w="95"/><text x="83.2630%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="83.1757%" y="437" width="0.0154%" height="15" fill="rgb(251,124,27)" fg:x="48553" fg:w="9"/><text x="83.4257%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (123 samples, 0.21%)</title><rect x="83.1911%" y="437" width="0.2107%" height="15" fill="rgb(229,180,14)" fg:x="48562" fg:w="123"/><text x="83.4411%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (61 samples, 0.10%)</title><rect x="83.2974%" y="421" width="0.1045%" height="15" fill="rgb(245,216,25)" fg:x="48624" fg:w="61"/><text x="83.5474%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (61 samples, 0.10%)</title><rect x="83.2974%" y="405" width="0.1045%" height="15" fill="rgb(251,43,5)" fg:x="48624" fg:w="61"/><text x="83.5474%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="83.4019%" y="437" width="0.0120%" height="15" fill="rgb(250,128,24)" fg:x="48685" fg:w="7"/><text x="83.6519%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="83.4036%" y="421" width="0.0103%" height="15" fill="rgb(217,117,27)" fg:x="48686" fg:w="6"/><text x="83.6536%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="83.4036%" y="405" width="0.0103%" height="15" fill="rgb(245,147,4)" fg:x="48686" fg:w="6"/><text x="83.6536%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (27 samples, 0.05%)</title><rect x="83.4241%" y="437" width="0.0463%" height="15" fill="rgb(242,201,35)" fg:x="48698" fg:w="27"/><text x="83.6741%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.02%)</title><rect x="83.4755%" y="437" width="0.0188%" height="15" fill="rgb(218,181,1)" fg:x="48728" fg:w="11"/><text x="83.7255%" y="447.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="83.4995%" y="437" width="0.0103%" height="15" fill="rgb(222,6,29)" fg:x="48742" fg:w="6"/><text x="83.7495%" y="447.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.03%)</title><rect x="83.5115%" y="437" width="0.0343%" height="15" fill="rgb(208,186,3)" fg:x="48749" fg:w="20"/><text x="83.7615%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (7 samples, 0.01%)</title><rect x="83.5338%" y="421" width="0.0120%" height="15" fill="rgb(216,36,26)" fg:x="48762" fg:w="7"/><text x="83.7838%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (15 samples, 0.03%)</title><rect x="83.5458%" y="437" width="0.0257%" height="15" fill="rgb(248,201,23)" fg:x="48769" fg:w="15"/><text x="83.7958%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56 samples, 0.10%)</title><rect x="83.5715%" y="437" width="0.0959%" height="15" fill="rgb(251,170,31)" fg:x="48784" fg:w="56"/><text x="83.8215%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (17 samples, 0.03%)</title><rect x="83.7085%" y="421" width="0.0291%" height="15" fill="rgb(207,110,25)" fg:x="48864" fg:w="17"/><text x="83.9585%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.07%)</title><rect x="83.6674%" y="437" width="0.0719%" height="15" fill="rgb(250,54,15)" fg:x="48840" fg:w="42"/><text x="83.9174%" y="447.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.02%)</title><rect x="83.7393%" y="437" width="0.0154%" height="15" fill="rgb(227,68,33)" fg:x="48882" fg:w="9"/><text x="83.9893%" y="447.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (13 samples, 0.02%)</title><rect x="83.7548%" y="437" width="0.0223%" height="15" fill="rgb(238,34,41)" fg:x="48891" fg:w="13"/><text x="84.0048%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="83.7667%" y="421" width="0.0103%" height="15" fill="rgb(220,11,15)" fg:x="48898" fg:w="6"/><text x="84.0167%" y="431.50"></text></g><g><title>&lt;flume::async::SendFut&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.03%)</title><rect x="83.7805%" y="437" width="0.0308%" height="15" fill="rgb(246,111,35)" fg:x="48906" fg:w="18"/><text x="84.0305%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (25 samples, 0.04%)</title><rect x="83.8181%" y="437" width="0.0428%" height="15" fill="rgb(209,88,53)" fg:x="48928" fg:w="25"/><text x="84.0681%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (48 samples, 0.08%)</title><rect x="83.8610%" y="437" width="0.0822%" height="15" fill="rgb(231,185,47)" fg:x="48953" fg:w="48"/><text x="84.1110%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (28 samples, 0.05%)</title><rect x="83.8952%" y="421" width="0.0480%" height="15" fill="rgb(233,154,1)" fg:x="48973" fg:w="28"/><text x="84.1452%" y="431.50"></text></g><g><title>__futex_hash.constprop.0 (15 samples, 0.03%)</title><rect x="84.1128%" y="325" width="0.0257%" height="15" fill="rgb(225,15,46)" fg:x="49100" fg:w="15"/><text x="84.3628%" y="335.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.01%)</title><rect x="84.1385%" y="325" width="0.0137%" height="15" fill="rgb(211,135,41)" fg:x="49115" fg:w="8"/><text x="84.3885%" y="335.50"></text></g><g><title>futex_wake_mark (41 samples, 0.07%)</title><rect x="84.1539%" y="325" width="0.0702%" height="15" fill="rgb(208,54,0)" fg:x="49124" fg:w="41"/><text x="84.4039%" y="335.50"></text></g><g><title>get_futex_key (13 samples, 0.02%)</title><rect x="84.2241%" y="325" width="0.0223%" height="15" fill="rgb(244,136,14)" fg:x="49165" fg:w="13"/><text x="84.4741%" y="335.50"></text></g><g><title>__raw_spin_lock_irqsave (15 samples, 0.03%)</title><rect x="84.2772%" y="293" width="0.0257%" height="15" fill="rgb(241,56,14)" fg:x="49196" fg:w="15"/><text x="84.5272%" y="303.50"></text></g><g><title>__task_rq_lock (8 samples, 0.01%)</title><rect x="84.3029%" y="293" width="0.0137%" height="15" fill="rgb(205,80,24)" fg:x="49211" fg:w="8"/><text x="84.5529%" y="303.50"></text></g><g><title>raw_spin_rq_lock_nested (8 samples, 0.01%)</title><rect x="84.3029%" y="277" width="0.0137%" height="15" fill="rgb(220,57,4)" fg:x="49211" fg:w="8"/><text x="84.5529%" y="287.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.01%)</title><rect x="84.3029%" y="261" width="0.0137%" height="15" fill="rgb(226,193,50)" fg:x="49211" fg:w="8"/><text x="84.5529%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (8 samples, 0.01%)</title><rect x="84.3029%" y="245" width="0.0137%" height="15" fill="rgb(231,168,22)" fg:x="49211" fg:w="8"/><text x="84.5529%" y="255.50"></text></g><g><title>select_idle_sibling (33 samples, 0.06%)</title><rect x="84.3680%" y="261" width="0.0565%" height="15" fill="rgb(254,215,14)" fg:x="49249" fg:w="33"/><text x="84.6180%" y="271.50"></text></g><g><title>select_task_rq (83 samples, 0.14%)</title><rect x="84.3166%" y="293" width="0.1422%" height="15" fill="rgb(211,115,16)" fg:x="49219" fg:w="83"/><text x="84.5666%" y="303.50"></text></g><g><title>select_task_rq_fair (71 samples, 0.12%)</title><rect x="84.3372%" y="277" width="0.1216%" height="15" fill="rgb(236,210,16)" fg:x="49231" fg:w="71"/><text x="84.5872%" y="287.50"></text></g><g><title>wake_affine (20 samples, 0.03%)</title><rect x="84.4246%" y="261" width="0.0343%" height="15" fill="rgb(221,94,12)" fg:x="49282" fg:w="20"/><text x="84.6746%" y="271.50"></text></g><g><title>available_idle_cpu (19 samples, 0.03%)</title><rect x="84.4263%" y="245" width="0.0325%" height="15" fill="rgb(235,218,49)" fg:x="49283" fg:w="19"/><text x="84.6763%" y="255.50"></text></g><g><title>__smp_call_single_queue (187 samples, 0.32%)</title><rect x="84.5034%" y="277" width="0.3203%" height="15" fill="rgb(217,114,14)" fg:x="49328" fg:w="187"/><text x="84.7534%" y="287.50"></text></g><g><title>call_function_single_prep_ipi (176 samples, 0.30%)</title><rect x="84.5222%" y="261" width="0.3015%" height="15" fill="rgb(216,145,22)" fg:x="49339" fg:w="176"/><text x="84.7722%" y="271.50"></text></g><g><title>__x64_sys_futex (477 samples, 0.82%)</title><rect x="84.0083%" y="373" width="0.8171%" height="15" fill="rgb(217,112,39)" fg:x="49039" fg:w="477"/><text x="84.2583%" y="383.50"></text></g><g><title>do_futex (477 samples, 0.82%)</title><rect x="84.0083%" y="357" width="0.8171%" height="15" fill="rgb(225,85,32)" fg:x="49039" fg:w="477"/><text x="84.2583%" y="367.50"></text></g><g><title>futex_wake (476 samples, 0.82%)</title><rect x="84.0100%" y="341" width="0.8154%" height="15" fill="rgb(245,209,47)" fg:x="49040" fg:w="476"/><text x="84.2600%" y="351.50"></text></g><g><title>wake_up_q (333 samples, 0.57%)</title><rect x="84.2550%" y="325" width="0.5705%" height="15" fill="rgb(218,220,15)" fg:x="49183" fg:w="333"/><text x="84.5050%" y="335.50"></text></g><g><title>try_to_wake_up (324 samples, 0.56%)</title><rect x="84.2704%" y="309" width="0.5550%" height="15" fill="rgb(222,202,31)" fg:x="49192" fg:w="324"/><text x="84.5204%" y="319.50"></text></g><g><title>ttwu_queue_wakelist (214 samples, 0.37%)</title><rect x="84.4588%" y="293" width="0.3666%" height="15" fill="rgb(243,203,4)" fg:x="49302" fg:w="214"/><text x="84.7088%" y="303.50"></text></g><g><title>arch_exit_to_user_mode_prepare.isra.0 (10 samples, 0.02%)</title><rect x="84.8254%" y="373" width="0.0171%" height="15" fill="rgb(237,92,17)" fg:x="49516" fg:w="10"/><text x="85.0754%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (493 samples, 0.84%)</title><rect x="83.9997%" y="405" width="0.8446%" height="15" fill="rgb(231,119,7)" fg:x="49034" fg:w="493"/><text x="84.2497%" y="415.50"></text></g><g><title>do_syscall_64 (492 samples, 0.84%)</title><rect x="84.0014%" y="389" width="0.8428%" height="15" fill="rgb(237,82,41)" fg:x="49035" fg:w="492"/><text x="84.2514%" y="399.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (520 samples, 0.89%)</title><rect x="83.9638%" y="437" width="0.8908%" height="15" fill="rgb(226,81,48)" fg:x="49013" fg:w="520"/><text x="84.2138%" y="447.50"></text></g><g><title>syscall (520 samples, 0.89%)</title><rect x="83.9638%" y="421" width="0.8908%" height="15" fill="rgb(234,70,51)" fg:x="49013" fg:w="520"/><text x="84.2138%" y="431.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="84.8563%" y="437" width="0.0137%" height="15" fill="rgb(251,86,4)" fg:x="49534" fg:w="8"/><text x="85.1063%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (7 samples, 0.01%)</title><rect x="84.8580%" y="421" width="0.0120%" height="15" fill="rgb(244,144,28)" fg:x="49535" fg:w="7"/><text x="85.1080%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (6 samples, 0.01%)</title><rect x="84.8597%" y="405" width="0.0103%" height="15" fill="rgb(232,161,39)" fg:x="49536" fg:w="6"/><text x="85.1097%" y="415.50"></text></g><g><title>&lt;tokio::loom::std::atomic_u32::AtomicU32 as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="84.8734%" y="437" width="0.0137%" height="15" fill="rgb(247,34,51)" fg:x="49544" fg:w="8"/><text x="85.1234%" y="447.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="84.8871%" y="437" width="0.0103%" height="15" fill="rgb(225,132,2)" fg:x="49552" fg:w="6"/><text x="85.1371%" y="447.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="84.9111%" y="437" width="0.0240%" height="15" fill="rgb(209,159,44)" fg:x="49566" fg:w="14"/><text x="85.1611%" y="447.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="84.9351%" y="437" width="0.0137%" height="15" fill="rgb(251,214,1)" fg:x="49580" fg:w="8"/><text x="85.1851%" y="447.50"></text></g><g><title>&lt;usize as core::slice::cmp::SliceContains&gt;::slice_contains (12 samples, 0.02%)</title><rect x="84.9676%" y="437" width="0.0206%" height="15" fill="rgb(247,84,47)" fg:x="49599" fg:w="12"/><text x="85.2176%" y="447.50"></text></g><g><title>&lt;usize as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (42 samples, 0.07%)</title><rect x="84.9882%" y="437" width="0.0719%" height="15" fill="rgb(240,111,43)" fg:x="49611" fg:w="42"/><text x="85.2382%" y="447.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="85.0601%" y="421" width="0.0103%" height="15" fill="rgb(215,214,35)" fg:x="49653" fg:w="6"/><text x="85.3101%" y="431.50"></text></g><g><title>&lt;usize as core::slice::cmp::SliceContains&gt;::slice_contains (11 samples, 0.02%)</title><rect x="85.0601%" y="437" width="0.0188%" height="15" fill="rgb(248,207,23)" fg:x="49653" fg:w="11"/><text x="85.3101%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.06%)</title><rect x="85.0841%" y="405" width="0.0617%" height="15" fill="rgb(214,186,4)" fg:x="49667" fg:w="36"/><text x="85.3341%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (35 samples, 0.06%)</title><rect x="85.0858%" y="389" width="0.0600%" height="15" fill="rgb(220,133,22)" fg:x="49668" fg:w="35"/><text x="85.3358%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (33 samples, 0.06%)</title><rect x="85.0893%" y="373" width="0.0565%" height="15" fill="rgb(239,134,19)" fg:x="49670" fg:w="33"/><text x="85.3393%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.02%)</title><rect x="85.1458%" y="405" width="0.0188%" height="15" fill="rgb(250,140,9)" fg:x="49703" fg:w="11"/><text x="85.3958%" y="415.50"></text></g><g><title>&lt;core::num::nonzero::NonZero&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.02%)</title><rect x="85.1646%" y="405" width="0.0154%" height="15" fill="rgb(225,59,14)" fg:x="49714" fg:w="9"/><text x="85.4146%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.01%)</title><rect x="85.1800%" y="405" width="0.0120%" height="15" fill="rgb(214,152,51)" fg:x="49723" fg:w="7"/><text x="85.4300%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (6 samples, 0.01%)</title><rect x="85.2023%" y="405" width="0.0103%" height="15" fill="rgb(251,227,43)" fg:x="49736" fg:w="6"/><text x="85.4523%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="85.2177%" y="405" width="0.0188%" height="15" fill="rgb(241,96,17)" fg:x="49745" fg:w="11"/><text x="85.4677%" y="415.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 0.01%)</title><rect x="85.2537%" y="405" width="0.0103%" height="15" fill="rgb(234,198,43)" fg:x="49766" fg:w="6"/><text x="85.5037%" y="415.50"></text></g><g><title>&lt;usize as core::slice::cmp::SliceContains&gt;::slice_contains (6 samples, 0.01%)</title><rect x="85.2708%" y="405" width="0.0103%" height="15" fill="rgb(220,108,29)" fg:x="49776" fg:w="6"/><text x="85.5208%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.02%)</title><rect x="85.3394%" y="389" width="0.0188%" height="15" fill="rgb(226,163,33)" fg:x="49816" fg:w="11"/><text x="85.5894%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 0.02%)</title><rect x="85.3411%" y="373" width="0.0171%" height="15" fill="rgb(205,194,45)" fg:x="49817" fg:w="10"/><text x="85.5911%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.06%)</title><rect x="85.3582%" y="389" width="0.0634%" height="15" fill="rgb(206,143,44)" fg:x="49827" fg:w="37"/><text x="85.6082%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.02%)</title><rect x="85.4216%" y="389" width="0.0206%" height="15" fill="rgb(236,136,36)" fg:x="49864" fg:w="12"/><text x="85.6716%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (41 samples, 0.07%)</title><rect x="85.4421%" y="389" width="0.0702%" height="15" fill="rgb(249,172,42)" fg:x="49876" fg:w="41"/><text x="85.6921%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.02%)</title><rect x="85.5501%" y="389" width="0.0240%" height="15" fill="rgb(216,139,23)" fg:x="49939" fg:w="14"/><text x="85.8001%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (6 samples, 0.01%)</title><rect x="85.5638%" y="373" width="0.0103%" height="15" fill="rgb(207,166,20)" fg:x="49947" fg:w="6"/><text x="85.8138%" y="383.50"></text></g><g><title>syscall (8 samples, 0.01%)</title><rect x="85.5741%" y="389" width="0.0137%" height="15" fill="rgb(210,209,22)" fg:x="49953" fg:w="8"/><text x="85.8241%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.01%)</title><rect x="85.5741%" y="373" width="0.0137%" height="15" fill="rgb(232,118,20)" fg:x="49953" fg:w="8"/><text x="85.8241%" y="383.50"></text></g><g><title>[sqlite_single_row_lookup_sqlx-ad447b01e569b511] (184 samples, 0.32%)</title><rect x="85.2880%" y="405" width="0.3152%" height="15" fill="rgb(238,113,42)" fg:x="49786" fg:w="184"/><text x="85.5380%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 0.03%)</title><rect x="85.6237%" y="389" width="0.0325%" height="15" fill="rgb(231,42,5)" fg:x="49982" fg:w="19"/><text x="85.8737%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="85.6563%" y="389" width="0.0171%" height="15" fill="rgb(243,166,24)" fg:x="50001" fg:w="10"/><text x="85.9063%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.02%)</title><rect x="85.6563%" y="373" width="0.0171%" height="15" fill="rgb(237,226,12)" fg:x="50001" fg:w="10"/><text x="85.9063%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 0.02%)</title><rect x="85.6563%" y="357" width="0.0171%" height="15" fill="rgb(229,133,24)" fg:x="50001" fg:w="10"/><text x="85.9063%" y="367.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="85.6734%" y="389" width="0.0120%" height="15" fill="rgb(238,33,43)" fg:x="50011" fg:w="7"/><text x="85.9234%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 0.02%)</title><rect x="85.6871%" y="389" width="0.0171%" height="15" fill="rgb(227,59,38)" fg:x="50019" fg:w="10"/><text x="85.9371%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.01%)</title><rect x="85.7094%" y="389" width="0.0120%" height="15" fill="rgb(230,97,0)" fg:x="50032" fg:w="7"/><text x="85.9594%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (28 samples, 0.05%)</title><rect x="85.7282%" y="389" width="0.0480%" height="15" fill="rgb(250,173,50)" fg:x="50043" fg:w="28"/><text x="85.9782%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="85.8002%" y="373" width="0.0103%" height="15" fill="rgb(240,15,50)" fg:x="50085" fg:w="6"/><text x="86.0502%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.04%)</title><rect x="85.7762%" y="389" width="0.0394%" height="15" fill="rgb(221,93,22)" fg:x="50071" fg:w="23"/><text x="86.0262%" y="399.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="85.8156%" y="389" width="0.0103%" height="15" fill="rgb(245,180,53)" fg:x="50094" fg:w="6"/><text x="86.0656%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (9 samples, 0.02%)</title><rect x="85.8430%" y="389" width="0.0154%" height="15" fill="rgb(231,88,51)" fg:x="50110" fg:w="9"/><text x="86.0930%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (8 samples, 0.01%)</title><rect x="85.8447%" y="373" width="0.0137%" height="15" fill="rgb(240,58,21)" fg:x="50111" fg:w="8"/><text x="86.0947%" y="383.50"></text></g><g><title>&lt;parking_lot_core::parking_lot::ParkResult as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="85.8584%" y="389" width="0.0103%" height="15" fill="rgb(237,21,10)" fg:x="50119" fg:w="6"/><text x="86.1084%" y="399.50"></text></g><g><title>&lt;tokio::task::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="85.8961%" y="389" width="0.0120%" height="15" fill="rgb(218,43,11)" fg:x="50141" fg:w="7"/><text x="86.1461%" y="399.50"></text></g><g><title>&lt;tokio::util::wake_list::WakeList::wake_all::DropGuard as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="85.9081%" y="389" width="0.0103%" height="15" fill="rgb(218,221,29)" fg:x="50148" fg:w="6"/><text x="86.1581%" y="399.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7 samples, 0.01%)</title><rect x="85.9184%" y="389" width="0.0120%" height="15" fill="rgb(214,118,42)" fg:x="50154" fg:w="7"/><text x="86.1684%" y="399.50"></text></g><g><title>alloc::alloc::alloc (48 samples, 0.08%)</title><rect x="85.9458%" y="373" width="0.0822%" height="15" fill="rgb(251,200,26)" fg:x="50170" fg:w="48"/><text x="86.1958%" y="383.50"></text></g><g><title>malloc (46 samples, 0.08%)</title><rect x="85.9492%" y="357" width="0.0788%" height="15" fill="rgb(237,101,39)" fg:x="50172" fg:w="46"/><text x="86.1992%" y="367.50"></text></g><g><title>_int_malloc (12 samples, 0.02%)</title><rect x="86.0075%" y="341" width="0.0206%" height="15" fill="rgb(251,117,11)" fg:x="50206" fg:w="12"/><text x="86.2575%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (52 samples, 0.09%)</title><rect x="85.9424%" y="389" width="0.0891%" height="15" fill="rgb(216,223,23)" fg:x="50168" fg:w="52"/><text x="86.1924%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (6 samples, 0.01%)</title><rect x="86.0400%" y="389" width="0.0103%" height="15" fill="rgb(251,54,12)" fg:x="50225" fg:w="6"/><text x="86.2900%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::len (17 samples, 0.03%)</title><rect x="86.0726%" y="373" width="0.0291%" height="15" fill="rgb(254,176,54)" fg:x="50244" fg:w="17"/><text x="86.3226%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="86.1634%" y="357" width="0.0137%" height="15" fill="rgb(210,32,8)" fg:x="50297" fg:w="8"/><text x="86.4134%" y="367.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (68 samples, 0.12%)</title><rect x="86.0623%" y="389" width="0.1165%" height="15" fill="rgb(235,52,38)" fg:x="50238" fg:w="68"/><text x="86.3123%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (45 samples, 0.08%)</title><rect x="86.1017%" y="373" width="0.0771%" height="15" fill="rgb(231,4,44)" fg:x="50261" fg:w="45"/><text x="86.3517%" y="383.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8 samples, 0.01%)</title><rect x="86.1788%" y="389" width="0.0137%" height="15" fill="rgb(249,2,32)" fg:x="50306" fg:w="8"/><text x="86.4288%" y="399.50"></text></g><g><title>core::cmp::Ord::min (29 samples, 0.05%)</title><rect x="86.1976%" y="389" width="0.0497%" height="15" fill="rgb(224,65,26)" fg:x="50317" fg:w="29"/><text x="86.4476%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (19 samples, 0.03%)</title><rect x="86.2524%" y="389" width="0.0325%" height="15" fill="rgb(250,73,40)" fg:x="50349" fg:w="19"/><text x="86.5024%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.03%)</title><rect x="86.2867%" y="389" width="0.0274%" height="15" fill="rgb(253,177,16)" fg:x="50369" fg:w="16"/><text x="86.5367%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (7 samples, 0.01%)</title><rect x="86.3244%" y="389" width="0.0120%" height="15" fill="rgb(217,32,34)" fg:x="50391" fg:w="7"/><text x="86.5744%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (8 samples, 0.01%)</title><rect x="86.3381%" y="389" width="0.0137%" height="15" fill="rgb(212,7,10)" fg:x="50399" fg:w="8"/><text x="86.5881%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="86.3569%" y="389" width="0.0154%" height="15" fill="rgb(245,89,8)" fg:x="50410" fg:w="9"/><text x="86.6069%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.01%)</title><rect x="86.4015%" y="389" width="0.0103%" height="15" fill="rgb(237,16,53)" fg:x="50436" fg:w="6"/><text x="86.6515%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (6 samples, 0.01%)</title><rect x="86.4118%" y="389" width="0.0103%" height="15" fill="rgb(250,204,30)" fg:x="50442" fg:w="6"/><text x="86.6618%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (15 samples, 0.03%)</title><rect x="86.4220%" y="389" width="0.0257%" height="15" fill="rgb(208,77,27)" fg:x="50448" fg:w="15"/><text x="86.6720%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (9 samples, 0.02%)</title><rect x="86.4323%" y="373" width="0.0154%" height="15" fill="rgb(250,204,28)" fg:x="50454" fg:w="9"/><text x="86.6823%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (9 samples, 0.02%)</title><rect x="86.4563%" y="389" width="0.0154%" height="15" fill="rgb(244,63,21)" fg:x="50468" fg:w="9"/><text x="86.7063%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (14 samples, 0.02%)</title><rect x="86.4734%" y="389" width="0.0240%" height="15" fill="rgb(236,85,44)" fg:x="50478" fg:w="14"/><text x="86.7234%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (14 samples, 0.02%)</title><rect x="86.4991%" y="389" width="0.0240%" height="15" fill="rgb(215,98,4)" fg:x="50493" fg:w="14"/><text x="86.7491%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.01%)</title><rect x="86.5094%" y="373" width="0.0137%" height="15" fill="rgb(235,38,11)" fg:x="50499" fg:w="8"/><text x="86.7594%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.03%)</title><rect x="86.5402%" y="389" width="0.0308%" height="15" fill="rgb(254,186,25)" fg:x="50517" fg:w="18"/><text x="86.7902%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.02%)</title><rect x="86.5505%" y="373" width="0.0206%" height="15" fill="rgb(225,55,31)" fg:x="50523" fg:w="12"/><text x="86.8005%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.03%)</title><rect x="86.5711%" y="389" width="0.0325%" height="15" fill="rgb(211,15,21)" fg:x="50535" fg:w="19"/><text x="86.8211%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.03%)</title><rect x="86.5762%" y="373" width="0.0274%" height="15" fill="rgb(215,187,41)" fg:x="50538" fg:w="16"/><text x="86.8262%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (7 samples, 0.01%)</title><rect x="86.6105%" y="389" width="0.0120%" height="15" fill="rgb(248,69,32)" fg:x="50558" fg:w="7"/><text x="86.8605%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (51 samples, 0.09%)</title><rect x="86.6225%" y="389" width="0.0874%" height="15" fill="rgb(252,102,52)" fg:x="50565" fg:w="51"/><text x="86.8725%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.04%)</title><rect x="86.7098%" y="389" width="0.0360%" height="15" fill="rgb(253,140,32)" fg:x="50616" fg:w="21"/><text x="86.9598%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (325 samples, 0.56%)</title><rect x="86.7458%" y="389" width="0.5568%" height="15" fill="rgb(216,56,42)" fg:x="50637" fg:w="325"/><text x="86.9958%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_store (10 samples, 0.02%)</title><rect x="87.3026%" y="389" width="0.0171%" height="15" fill="rgb(216,184,14)" fg:x="50962" fg:w="10"/><text x="87.5526%" y="399.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (19 samples, 0.03%)</title><rect x="87.3197%" y="389" width="0.0325%" height="15" fill="rgb(237,187,27)" fg:x="50972" fg:w="19"/><text x="87.5697%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.02%)</title><rect x="87.3300%" y="373" width="0.0223%" height="15" fill="rgb(219,65,3)" fg:x="50978" fg:w="13"/><text x="87.5800%" y="383.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push_or_else (11 samples, 0.02%)</title><rect x="87.3540%" y="389" width="0.0188%" height="15" fill="rgb(245,83,25)" fg:x="50992" fg:w="11"/><text x="87.6040%" y="399.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (10 samples, 0.02%)</title><rect x="87.4054%" y="389" width="0.0171%" height="15" fill="rgb(214,205,45)" fg:x="51022" fg:w="10"/><text x="87.6554%" y="399.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (21 samples, 0.04%)</title><rect x="87.4225%" y="389" width="0.0360%" height="15" fill="rgb(241,20,18)" fg:x="51032" fg:w="21"/><text x="87.6725%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::park (12 samples, 0.02%)</title><rect x="87.4379%" y="373" width="0.0206%" height="15" fill="rgb(232,163,23)" fg:x="51041" fg:w="12"/><text x="87.6879%" y="383.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (7 samples, 0.01%)</title><rect x="87.4465%" y="357" width="0.0120%" height="15" fill="rgb(214,5,46)" fg:x="51046" fg:w="7"/><text x="87.6965%" y="367.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (12 samples, 0.02%)</title><rect x="87.4653%" y="389" width="0.0206%" height="15" fill="rgb(229,78,17)" fg:x="51057" fg:w="12"/><text x="87.7153%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (11 samples, 0.02%)</title><rect x="87.4927%" y="389" width="0.0188%" height="15" fill="rgb(248,89,10)" fg:x="51073" fg:w="11"/><text x="87.7427%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (29 samples, 0.05%)</title><rect x="87.5116%" y="389" width="0.0497%" height="15" fill="rgb(248,54,15)" fg:x="51084" fg:w="29"/><text x="87.7616%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::{{constant}}::{{closure}} (12 samples, 0.02%)</title><rect x="87.5612%" y="389" width="0.0206%" height="15" fill="rgb(223,116,6)" fg:x="51113" fg:w="12"/><text x="87.8112%" y="399.50"></text></g><g><title>sqlx_core::pool::connection::PoolConnection&lt;DB&gt;::return_to_pool::{{closure}} (41 samples, 0.07%)</title><rect x="87.6006%" y="389" width="0.0702%" height="15" fill="rgb(205,125,38)" fg:x="51136" fg:w="41"/><text x="87.8506%" y="399.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::return_to_pool::{{closure}} (18 samples, 0.03%)</title><rect x="87.6400%" y="373" width="0.0308%" height="15" fill="rgb(251,78,38)" fg:x="51159" fg:w="18"/><text x="87.8900%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.02%)</title><rect x="87.6555%" y="357" width="0.0154%" height="15" fill="rgb(253,78,28)" fg:x="51168" fg:w="9"/><text x="87.9055%" y="367.50"></text></g><g><title>sqlx_core::sync::AsyncSemaphore::release (6 samples, 0.01%)</title><rect x="87.6760%" y="389" width="0.0103%" height="15" fill="rgb(209,120,3)" fg:x="51180" fg:w="6"/><text x="87.9260%" y="399.50"></text></g><g><title>sqlx_sqlite::connection::worker::ConnectionWorker::oneshot_cmd::{{closure}} (11 samples, 0.02%)</title><rect x="87.6863%" y="389" width="0.0188%" height="15" fill="rgb(238,229,9)" fg:x="51186" fg:w="11"/><text x="87.9363%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::oneshot::Receiver&lt;()&gt;&gt; (6 samples, 0.01%)</title><rect x="87.6949%" y="373" width="0.0103%" height="15" fill="rgb(253,159,18)" fg:x="51191" fg:w="6"/><text x="87.9449%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="87.6949%" y="357" width="0.0103%" height="15" fill="rgb(244,42,34)" fg:x="51191" fg:w="6"/><text x="87.9449%" y="367.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="87.7154%" y="389" width="0.0154%" height="15" fill="rgb(224,8,7)" fg:x="51203" fg:w="9"/><text x="87.9654%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.03%)</title><rect x="87.7308%" y="389" width="0.0291%" height="15" fill="rgb(210,201,45)" fg:x="51212" fg:w="17"/><text x="87.9808%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (10 samples, 0.02%)</title><rect x="87.8011%" y="389" width="0.0171%" height="15" fill="rgb(252,185,21)" fg:x="51253" fg:w="10"/><text x="88.0511%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (7 samples, 0.01%)</title><rect x="87.8216%" y="389" width="0.0120%" height="15" fill="rgb(223,131,1)" fg:x="51265" fg:w="7"/><text x="88.0716%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (53 samples, 0.09%)</title><rect x="87.8439%" y="389" width="0.0908%" height="15" fill="rgb(245,141,16)" fg:x="51278" fg:w="53"/><text x="88.0939%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (15 samples, 0.03%)</title><rect x="87.9347%" y="389" width="0.0257%" height="15" fill="rgb(229,55,45)" fg:x="51331" fg:w="15"/><text x="88.1847%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (21 samples, 0.04%)</title><rect x="87.9741%" y="389" width="0.0360%" height="15" fill="rgb(208,92,15)" fg:x="51354" fg:w="21"/><text x="88.2241%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (52 samples, 0.09%)</title><rect x="88.0118%" y="389" width="0.0891%" height="15" fill="rgb(234,185,47)" fg:x="51376" fg:w="52"/><text x="88.2618%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (19 samples, 0.03%)</title><rect x="88.3818%" y="373" width="0.0325%" height="15" fill="rgb(253,104,50)" fg:x="51592" fg:w="19"/><text x="88.6318%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (175 samples, 0.30%)</title><rect x="88.1163%" y="389" width="0.2998%" height="15" fill="rgb(205,70,7)" fg:x="51437" fg:w="175"/><text x="88.3663%" y="399.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (16 samples, 0.03%)</title><rect x="88.4264%" y="389" width="0.0274%" height="15" fill="rgb(240,178,43)" fg:x="51618" fg:w="16"/><text x="88.6764%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.02%)</title><rect x="88.4315%" y="373" width="0.0223%" height="15" fill="rgb(214,112,2)" fg:x="51621" fg:w="13"/><text x="88.6815%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (10 samples, 0.02%)</title><rect x="88.4692%" y="389" width="0.0171%" height="15" fill="rgb(206,46,17)" fg:x="51643" fg:w="10"/><text x="88.7192%" y="399.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (6 samples, 0.01%)</title><rect x="88.5240%" y="389" width="0.0103%" height="15" fill="rgb(225,220,16)" fg:x="51675" fg:w="6"/><text x="88.7740%" y="399.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::last (9 samples, 0.02%)</title><rect x="88.5360%" y="389" width="0.0154%" height="15" fill="rgb(238,65,40)" fg:x="51682" fg:w="9"/><text x="88.7860%" y="399.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (17 samples, 0.03%)</title><rect x="88.5583%" y="389" width="0.0291%" height="15" fill="rgb(230,151,21)" fg:x="51695" fg:w="17"/><text x="88.8083%" y="399.50"></text></g><g><title>tokio::util::wake_list::WakeList::new (13 samples, 0.02%)</title><rect x="88.5874%" y="389" width="0.0223%" height="15" fill="rgb(218,58,49)" fg:x="51712" fg:w="13"/><text x="88.8374%" y="399.50"></text></g><g><title>[unknown] (1,758 samples, 3.01%)</title><rect x="85.6032%" y="405" width="3.0116%" height="15" fill="rgb(219,179,14)" fg:x="49970" fg:w="1758"/><text x="85.8532%" y="415.50">[un..</text></g><g><title>__rustc::__rdl_alloc (6 samples, 0.01%)</title><rect x="88.6302%" y="405" width="0.0103%" height="15" fill="rgb(223,72,1)" fg:x="51737" fg:w="6"/><text x="88.8802%" y="415.50"></text></g><g><title>_fini (6 samples, 0.01%)</title><rect x="88.6422%" y="405" width="0.0103%" height="15" fill="rgb(238,126,10)" fg:x="51744" fg:w="6"/><text x="88.8922%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.04%)</title><rect x="88.7142%" y="405" width="0.0377%" height="15" fill="rgb(224,206,38)" fg:x="51786" fg:w="22"/><text x="88.9642%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.03%)</title><rect x="88.7707%" y="389" width="0.0274%" height="15" fill="rgb(212,201,54)" fg:x="51819" fg:w="16"/><text x="89.0207%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::has_tasks (12 samples, 0.02%)</title><rect x="88.7981%" y="389" width="0.0206%" height="15" fill="rgb(218,154,48)" fg:x="51835" fg:w="12"/><text x="89.0481%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (114 samples, 0.20%)</title><rect x="88.7690%" y="405" width="0.1953%" height="15" fill="rgb(232,93,24)" fg:x="51818" fg:w="114"/><text x="89.0190%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (85 samples, 0.15%)</title><rect x="88.8187%" y="389" width="0.1456%" height="15" fill="rgb(245,30,21)" fg:x="51847" fg:w="85"/><text x="89.0687%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (26 samples, 0.04%)</title><rect x="89.0071%" y="405" width="0.0445%" height="15" fill="rgb(242,148,29)" fg:x="51957" fg:w="26"/><text x="89.2571%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (25 samples, 0.04%)</title><rect x="89.0088%" y="389" width="0.0428%" height="15" fill="rgb(244,153,54)" fg:x="51958" fg:w="25"/><text x="89.2588%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.02%)</title><rect x="89.0619%" y="405" width="0.0223%" height="15" fill="rgb(252,87,22)" fg:x="51989" fg:w="13"/><text x="89.3119%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.02%)</title><rect x="89.0619%" y="389" width="0.0223%" height="15" fill="rgb(210,51,29)" fg:x="51989" fg:w="13"/><text x="89.3119%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (79 samples, 0.14%)</title><rect x="89.0996%" y="405" width="0.1353%" height="15" fill="rgb(242,136,47)" fg:x="52011" fg:w="79"/><text x="89.3496%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.02%)</title><rect x="89.2349%" y="405" width="0.0240%" height="15" fill="rgb(238,68,4)" fg:x="52090" fg:w="14"/><text x="89.4849%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.02%)</title><rect x="89.2589%" y="405" width="0.0240%" height="15" fill="rgb(242,161,30)" fg:x="52104" fg:w="14"/><text x="89.5089%" y="415.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::return_to_pool::{{closure}} (8 samples, 0.01%)</title><rect x="89.3480%" y="405" width="0.0137%" height="15" fill="rgb(218,58,44)" fg:x="52156" fg:w="8"/><text x="89.5980%" y="415.50"></text></g><g><title>tokio::runtime::context::CONTEXT::{{constant}}::{{closure}} (6 samples, 0.01%)</title><rect x="89.4199%" y="389" width="0.0103%" height="15" fill="rgb(252,125,32)" fg:x="52198" fg:w="6"/><text x="89.6699%" y="399.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (9 samples, 0.02%)</title><rect x="89.4165%" y="405" width="0.0154%" height="15" fill="rgb(219,178,0)" fg:x="52196" fg:w="9"/><text x="89.6665%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::pop_n (7 samples, 0.01%)</title><rect x="89.4525%" y="405" width="0.0120%" height="15" fill="rgb(213,152,7)" fg:x="52217" fg:w="7"/><text x="89.7025%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_store (7 samples, 0.01%)</title><rect x="89.4525%" y="389" width="0.0120%" height="15" fill="rgb(249,109,34)" fg:x="52217" fg:w="7"/><text x="89.7025%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (23 samples, 0.04%)</title><rect x="89.4885%" y="405" width="0.0394%" height="15" fill="rgb(232,96,21)" fg:x="52238" fg:w="23"/><text x="89.7385%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (58 samples, 0.10%)</title><rect x="89.5467%" y="405" width="0.0994%" height="15" fill="rgb(228,27,39)" fg:x="52272" fg:w="58"/><text x="89.7967%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (11 samples, 0.02%)</title><rect x="89.6461%" y="405" width="0.0188%" height="15" fill="rgb(211,182,52)" fg:x="52330" fg:w="11"/><text x="89.8961%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (8 samples, 0.01%)</title><rect x="89.6649%" y="405" width="0.0137%" height="15" fill="rgb(234,178,38)" fg:x="52341" fg:w="8"/><text x="89.9149%" y="415.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (6 samples, 0.01%)</title><rect x="89.6889%" y="405" width="0.0103%" height="15" fill="rgb(221,111,3)" fg:x="52355" fg:w="6"/><text x="89.9389%" y="415.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (9 samples, 0.02%)</title><rect x="89.7386%" y="405" width="0.0154%" height="15" fill="rgb(228,175,21)" fg:x="52384" fg:w="9"/><text x="89.9886%" y="415.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.01%)</title><rect x="89.7540%" y="389" width="0.0103%" height="15" fill="rgb(228,174,43)" fg:x="52393" fg:w="6"/><text x="90.0040%" y="399.50"></text></g><g><title>tokio::runtime::task::waker::raw_waker (7 samples, 0.01%)</title><rect x="89.7540%" y="405" width="0.0120%" height="15" fill="rgb(211,191,0)" fg:x="52393" fg:w="7"/><text x="90.0040%" y="415.50"></text></g><g><title>__GI___clone3 (2,746 samples, 4.70%)</title><rect x="85.0824%" y="437" width="4.7041%" height="15" fill="rgb(253,117,3)" fg:x="49666" fg:w="2746"/><text x="85.3324%" y="447.50">__GI_..</text></g><g><title>start_thread (2,746 samples, 4.70%)</title><rect x="85.0824%" y="421" width="4.7041%" height="15" fill="rgb(241,127,19)" fg:x="49666" fg:w="2746"/><text x="85.3324%" y="431.50">start..</text></g><g><title>__rust_try (7 samples, 0.01%)</title><rect x="89.7865%" y="437" width="0.0120%" height="15" fill="rgb(218,103,12)" fg:x="52412" fg:w="7"/><text x="90.0365%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="89.7883%" y="421" width="0.0103%" height="15" fill="rgb(236,214,43)" fg:x="52413" fg:w="6"/><text x="90.0383%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (20 samples, 0.03%)</title><rect x="89.8157%" y="421" width="0.0343%" height="15" fill="rgb(244,144,19)" fg:x="52429" fg:w="20"/><text x="90.0657%" y="431.50"></text></g><g><title>core::ptr::read (20 samples, 0.03%)</title><rect x="89.8157%" y="405" width="0.0343%" height="15" fill="rgb(246,188,10)" fg:x="52429" fg:w="20"/><text x="90.0657%" y="415.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (24 samples, 0.04%)</title><rect x="89.8140%" y="437" width="0.0411%" height="15" fill="rgb(212,193,33)" fg:x="52428" fg:w="24"/><text x="90.0640%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (9 samples, 0.02%)</title><rect x="89.8705%" y="437" width="0.0154%" height="15" fill="rgb(241,51,29)" fg:x="52461" fg:w="9"/><text x="90.1205%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (13 samples, 0.02%)</title><rect x="89.8945%" y="437" width="0.0223%" height="15" fill="rgb(211,58,19)" fg:x="52475" fg:w="13"/><text x="90.1445%" y="447.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (11 samples, 0.02%)</title><rect x="89.9167%" y="437" width="0.0188%" height="15" fill="rgb(229,111,26)" fg:x="52488" fg:w="11"/><text x="90.1667%" y="447.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (18 samples, 0.03%)</title><rect x="89.9356%" y="437" width="0.0308%" height="15" fill="rgb(213,115,40)" fg:x="52499" fg:w="18"/><text x="90.1856%" y="447.50"></text></g><g><title>core::cell::BorrowRefMut::new (7 samples, 0.01%)</title><rect x="89.9921%" y="421" width="0.0120%" height="15" fill="rgb(209,56,44)" fg:x="52532" fg:w="7"/><text x="90.2421%" y="431.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (25 samples, 0.04%)</title><rect x="89.9664%" y="437" width="0.0428%" height="15" fill="rgb(230,108,32)" fg:x="52517" fg:w="25"/><text x="90.2164%" y="447.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;u128&gt; for u64&gt;::try_from (7 samples, 0.01%)</title><rect x="90.0247%" y="437" width="0.0120%" height="15" fill="rgb(216,165,31)" fg:x="52551" fg:w="7"/><text x="90.2747%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (21 samples, 0.04%)</title><rect x="90.0555%" y="437" width="0.0360%" height="15" fill="rgb(218,122,21)" fg:x="52569" fg:w="21"/><text x="90.3055%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (15 samples, 0.03%)</title><rect x="90.1000%" y="437" width="0.0257%" height="15" fill="rgb(223,224,47)" fg:x="52595" fg:w="15"/><text x="90.3500%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (7 samples, 0.01%)</title><rect x="90.1292%" y="437" width="0.0120%" height="15" fill="rgb(238,102,44)" fg:x="52612" fg:w="7"/><text x="90.3792%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="90.1412%" y="437" width="0.0137%" height="15" fill="rgb(236,46,40)" fg:x="52619" fg:w="8"/><text x="90.3912%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (8 samples, 0.01%)</title><rect x="90.1583%" y="437" width="0.0137%" height="15" fill="rgb(247,202,50)" fg:x="52629" fg:w="8"/><text x="90.4083%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (12 samples, 0.02%)</title><rect x="90.1720%" y="437" width="0.0206%" height="15" fill="rgb(209,99,20)" fg:x="52637" fg:w="12"/><text x="90.4220%" y="447.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="90.1823%" y="421" width="0.0103%" height="15" fill="rgb(252,27,34)" fg:x="52643" fg:w="6"/><text x="90.4323%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_sqlite::database::Sqlite&gt;::return_to_pool::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="90.2302%" y="437" width="0.0223%" height="15" fill="rgb(215,206,23)" fg:x="52671" fg:w="13"/><text x="90.4802%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.02%)</title><rect x="90.2337%" y="421" width="0.0188%" height="15" fill="rgb(212,135,36)" fg:x="52673" fg:w="11"/><text x="90.4837%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_sqlite::database::Sqlite&gt;::return_to_pool::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (23 samples, 0.04%)</title><rect x="90.3844%" y="421" width="0.0394%" height="15" fill="rgb(240,189,1)" fg:x="52761" fg:w="23"/><text x="90.6344%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.04%)</title><rect x="90.3844%" y="405" width="0.0394%" height="15" fill="rgb(242,56,20)" fg:x="52761" fg:w="23"/><text x="90.6344%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.04%)</title><rect x="90.3878%" y="389" width="0.0360%" height="15" fill="rgb(247,132,33)" fg:x="52763" fg:w="21"/><text x="90.6378%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (21 samples, 0.04%)</title><rect x="90.3878%" y="373" width="0.0360%" height="15" fill="rgb(208,149,11)" fg:x="52763" fg:w="21"/><text x="90.6378%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_sqlite::database::Sqlite&gt;::return_to_pool::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (30 samples, 0.05%)</title><rect x="90.3741%" y="437" width="0.0514%" height="15" fill="rgb(211,33,11)" fg:x="52755" fg:w="30"/><text x="90.6241%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_sqlite::database::Sqlite&gt;::return_to_pool::{{closure}}&gt;&gt; (9 samples, 0.02%)</title><rect x="90.4255%" y="437" width="0.0154%" height="15" fill="rgb(221,29,38)" fg:x="52785" fg:w="9"/><text x="90.6755%" y="447.50"></text></g><g><title>core::ptr::read (8 samples, 0.01%)</title><rect x="90.4821%" y="437" width="0.0137%" height="15" fill="rgb(206,182,49)" fg:x="52818" fg:w="8"/><text x="90.7321%" y="447.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.01%)</title><rect x="90.4958%" y="437" width="0.0103%" height="15" fill="rgb(216,140,1)" fg:x="52826" fg:w="6"/><text x="90.7458%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (14 samples, 0.02%)</title><rect x="90.5129%" y="437" width="0.0240%" height="15" fill="rgb(232,57,40)" fg:x="52836" fg:w="14"/><text x="90.7629%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (20 samples, 0.03%)</title><rect x="90.5386%" y="437" width="0.0343%" height="15" fill="rgb(224,186,18)" fg:x="52851" fg:w="20"/><text x="90.7886%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (21 samples, 0.04%)</title><rect x="90.5729%" y="437" width="0.0360%" height="15" fill="rgb(215,121,11)" fg:x="52871" fg:w="21"/><text x="90.8229%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (7 samples, 0.01%)</title><rect x="90.6260%" y="437" width="0.0120%" height="15" fill="rgb(245,147,10)" fg:x="52902" fg:w="7"/><text x="90.8760%" y="447.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.01%)</title><rect x="90.6277%" y="421" width="0.0103%" height="15" fill="rgb(238,153,13)" fg:x="52903" fg:w="6"/><text x="90.8777%" y="431.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (6 samples, 0.01%)</title><rect x="90.6380%" y="437" width="0.0103%" height="15" fill="rgb(233,108,0)" fg:x="52909" fg:w="6"/><text x="90.8880%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (15 samples, 0.03%)</title><rect x="90.6482%" y="437" width="0.0257%" height="15" fill="rgb(212,157,17)" fg:x="52915" fg:w="15"/><text x="90.8982%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="90.6637%" y="421" width="0.0103%" height="15" fill="rgb(225,213,38)" fg:x="52924" fg:w="6"/><text x="90.9137%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (17 samples, 0.03%)</title><rect x="90.6842%" y="437" width="0.0291%" height="15" fill="rgb(248,16,11)" fg:x="52936" fg:w="17"/><text x="90.9342%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (14 samples, 0.02%)</title><rect x="90.6893%" y="421" width="0.0240%" height="15" fill="rgb(241,33,4)" fg:x="52939" fg:w="14"/><text x="90.9393%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (12 samples, 0.02%)</title><rect x="90.7185%" y="437" width="0.0206%" height="15" fill="rgb(222,26,43)" fg:x="52956" fg:w="12"/><text x="90.9685%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (14 samples, 0.02%)</title><rect x="90.7390%" y="437" width="0.0240%" height="15" fill="rgb(243,29,36)" fg:x="52968" fg:w="14"/><text x="90.9890%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (46 samples, 0.08%)</title><rect x="90.7630%" y="437" width="0.0788%" height="15" fill="rgb(241,9,27)" fg:x="52982" fg:w="46"/><text x="91.0130%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (55 samples, 0.09%)</title><rect x="90.8452%" y="437" width="0.0942%" height="15" fill="rgb(205,117,26)" fg:x="53030" fg:w="55"/><text x="91.0952%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (47 samples, 0.08%)</title><rect x="90.8589%" y="421" width="0.0805%" height="15" fill="rgb(209,80,39)" fg:x="53038" fg:w="47"/><text x="91.1089%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (26 samples, 0.04%)</title><rect x="90.9566%" y="437" width="0.0445%" height="15" fill="rgb(239,155,6)" fg:x="53095" fg:w="26"/><text x="91.2066%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.04%)</title><rect x="90.9583%" y="421" width="0.0428%" height="15" fill="rgb(212,104,12)" fg:x="53096" fg:w="25"/><text x="91.2083%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (55 samples, 0.09%)</title><rect x="91.0011%" y="437" width="0.0942%" height="15" fill="rgb(234,204,3)" fg:x="53121" fg:w="55"/><text x="91.2511%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (47 samples, 0.08%)</title><rect x="91.0148%" y="421" width="0.0805%" height="15" fill="rgb(251,218,7)" fg:x="53129" fg:w="47"/><text x="91.2648%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.02%)</title><rect x="91.0954%" y="437" width="0.0171%" height="15" fill="rgb(221,81,32)" fg:x="53176" fg:w="10"/><text x="91.3454%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (19 samples, 0.03%)</title><rect x="91.1210%" y="437" width="0.0325%" height="15" fill="rgb(214,152,26)" fg:x="53191" fg:w="19"/><text x="91.3710%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (19 samples, 0.03%)</title><rect x="91.1210%" y="421" width="0.0325%" height="15" fill="rgb(223,22,3)" fg:x="53191" fg:w="19"/><text x="91.3710%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (191 samples, 0.33%)</title><rect x="91.1536%" y="437" width="0.3272%" height="15" fill="rgb(207,174,7)" fg:x="53210" fg:w="191"/><text x="91.4036%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (406 samples, 0.70%)</title><rect x="91.4808%" y="437" width="0.6955%" height="15" fill="rgb(224,19,52)" fg:x="53401" fg:w="406"/><text x="91.7308%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (311 samples, 0.53%)</title><rect x="92.1763%" y="437" width="0.5328%" height="15" fill="rgb(228,24,14)" fg:x="53807" fg:w="311"/><text x="92.4263%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_store (49 samples, 0.08%)</title><rect x="92.7091%" y="437" width="0.0839%" height="15" fill="rgb(230,153,43)" fg:x="54118" fg:w="49"/><text x="92.9591%" y="447.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push_or_else (6 samples, 0.01%)</title><rect x="92.8119%" y="437" width="0.0103%" height="15" fill="rgb(231,106,12)" fg:x="54178" fg:w="6"/><text x="93.0619%" y="447.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::new (9 samples, 0.02%)</title><rect x="92.8221%" y="437" width="0.0154%" height="15" fill="rgb(215,92,2)" fg:x="54184" fg:w="9"/><text x="93.0721%" y="447.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (19 samples, 0.03%)</title><rect x="92.8410%" y="437" width="0.0325%" height="15" fill="rgb(249,143,25)" fg:x="54195" fg:w="19"/><text x="93.0910%" y="447.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (26 samples, 0.04%)</title><rect x="92.8855%" y="437" width="0.0445%" height="15" fill="rgb(252,7,35)" fg:x="54221" fg:w="26"/><text x="93.1355%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;flume::Hook&lt;(sqlx_sqlite::connection::worker::Command,tracing::span::Span),dyn flume::signal::Signal&gt;&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="92.9112%" y="421" width="0.0188%" height="15" fill="rgb(216,69,40)" fg:x="54236" fg:w="11"/><text x="93.1612%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="92.9129%" y="405" width="0.0171%" height="15" fill="rgb(240,36,33)" fg:x="54237" fg:w="10"/><text x="93.1629%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="92.9198%" y="389" width="0.0103%" height="15" fill="rgb(231,128,14)" fg:x="54241" fg:w="6"/><text x="93.1698%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="92.9198%" y="373" width="0.0103%" height="15" fill="rgb(245,143,14)" fg:x="54241" fg:w="6"/><text x="93.1698%" y="383.50"></text></g><g><title>flume::async::&lt;impl flume::Sender&lt;T&gt;&gt;::send_async (14 samples, 0.02%)</title><rect x="92.9301%" y="437" width="0.0240%" height="15" fill="rgb(222,130,28)" fg:x="54247" fg:w="14"/><text x="93.1801%" y="447.50"></text></g><g><title>futures_channel::lock::Lock&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="92.9541%" y="437" width="0.0154%" height="15" fill="rgb(212,10,48)" fg:x="54261" fg:w="9"/><text x="93.2041%" y="447.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::recv (10 samples, 0.02%)</title><rect x="92.9849%" y="437" width="0.0171%" height="15" fill="rgb(254,118,45)" fg:x="54279" fg:w="10"/><text x="93.2349%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (9 samples, 0.02%)</title><rect x="93.0020%" y="437" width="0.0154%" height="15" fill="rgb(228,6,45)" fg:x="54289" fg:w="9"/><text x="93.2520%" y="447.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (14 samples, 0.02%)</title><rect x="93.0466%" y="437" width="0.0240%" height="15" fill="rgb(241,18,35)" fg:x="54315" fg:w="14"/><text x="93.2966%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_store (7 samples, 0.01%)</title><rect x="93.0586%" y="421" width="0.0120%" height="15" fill="rgb(227,214,53)" fg:x="54322" fg:w="7"/><text x="93.3086%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (20 samples, 0.03%)</title><rect x="93.0740%" y="437" width="0.0343%" height="15" fill="rgb(224,107,51)" fg:x="54331" fg:w="20"/><text x="93.3240%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (17 samples, 0.03%)</title><rect x="93.0791%" y="421" width="0.0291%" height="15" fill="rgb(248,60,28)" fg:x="54334" fg:w="17"/><text x="93.3291%" y="431.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (17 samples, 0.03%)</title><rect x="93.0791%" y="405" width="0.0291%" height="15" fill="rgb(249,101,23)" fg:x="54334" fg:w="17"/><text x="93.3291%" y="415.50"></text></g><g><title>[[vdso]] (15 samples, 0.03%)</title><rect x="93.0825%" y="389" width="0.0257%" height="15" fill="rgb(228,51,19)" fg:x="54336" fg:w="15"/><text x="93.3325%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::deadlock::release_resource (7 samples, 0.01%)</title><rect x="93.1082%" y="437" width="0.0120%" height="15" fill="rgb(213,20,6)" fg:x="54351" fg:w="7"/><text x="93.3582%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (11 samples, 0.02%)</title><rect x="93.1202%" y="437" width="0.0188%" height="15" fill="rgb(212,124,10)" fg:x="54358" fg:w="11"/><text x="93.3702%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.02%)</title><rect x="93.1219%" y="421" width="0.0171%" height="15" fill="rgb(248,3,40)" fg:x="54359" fg:w="10"/><text x="93.3719%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (14 samples, 0.02%)</title><rect x="93.1391%" y="437" width="0.0240%" height="15" fill="rgb(223,178,23)" fg:x="54369" fg:w="14"/><text x="93.3891%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (11 samples, 0.02%)</title><rect x="93.1631%" y="437" width="0.0188%" height="15" fill="rgb(240,132,45)" fg:x="54383" fg:w="11"/><text x="93.4131%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="93.1716%" y="421" width="0.0103%" height="15" fill="rgb(245,164,36)" fg:x="54388" fg:w="6"/><text x="93.4216%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (8 samples, 0.01%)</title><rect x="93.2179%" y="421" width="0.0137%" height="15" fill="rgb(231,188,53)" fg:x="54415" fg:w="8"/><text x="93.4679%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (33 samples, 0.06%)</title><rect x="93.1819%" y="437" width="0.0565%" height="15" fill="rgb(237,198,39)" fg:x="54394" fg:w="33"/><text x="93.4319%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::{{closure}} (6 samples, 0.01%)</title><rect x="93.2504%" y="437" width="0.0103%" height="15" fill="rgb(223,120,35)" fg:x="54434" fg:w="6"/><text x="93.5004%" y="447.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (18 samples, 0.03%)</title><rect x="93.2641%" y="437" width="0.0308%" height="15" fill="rgb(253,107,49)" fg:x="54442" fg:w="18"/><text x="93.5141%" y="447.50"></text></g><g><title>core::hint::spin_loop (13 samples, 0.02%)</title><rect x="93.2727%" y="421" width="0.0223%" height="15" fill="rgb(216,44,31)" fg:x="54447" fg:w="13"/><text x="93.5227%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (13 samples, 0.02%)</title><rect x="93.2727%" y="405" width="0.0223%" height="15" fill="rgb(253,87,21)" fg:x="54447" fg:w="13"/><text x="93.5227%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (39 samples, 0.07%)</title><rect x="93.3995%" y="405" width="0.0668%" height="15" fill="rgb(226,18,2)" fg:x="54521" fg:w="39"/><text x="93.6495%" y="415.50"></text></g><g><title>pick_next_task_fair (52 samples, 0.09%)</title><rect x="93.8980%" y="245" width="0.0891%" height="15" fill="rgb(216,8,46)" fg:x="54812" fg:w="52"/><text x="94.1480%" y="255.50"></text></g><g><title>sched_balance_newidle (30 samples, 0.05%)</title><rect x="93.9357%" y="229" width="0.0514%" height="15" fill="rgb(226,140,39)" fg:x="54834" fg:w="30"/><text x="94.1857%" y="239.50"></text></g><g><title>put_prev_task_fair (16 samples, 0.03%)</title><rect x="93.9870%" y="245" width="0.0274%" height="15" fill="rgb(221,194,54)" fg:x="54864" fg:w="16"/><text x="94.2370%" y="255.50"></text></g><g><title>put_prev_entity (10 samples, 0.02%)</title><rect x="93.9973%" y="229" width="0.0171%" height="15" fill="rgb(213,92,11)" fg:x="54870" fg:w="10"/><text x="94.2473%" y="239.50"></text></g><g><title>__pick_next_task (84 samples, 0.14%)</title><rect x="93.8740%" y="261" width="0.1439%" height="15" fill="rgb(229,162,46)" fg:x="54798" fg:w="84"/><text x="94.1240%" y="271.50"></text></g><g><title>__rcu_read_unlock (6 samples, 0.01%)</title><rect x="94.1618%" y="229" width="0.0103%" height="15" fill="rgb(214,111,36)" fg:x="54966" fg:w="6"/><text x="94.4118%" y="239.50"></text></g><g><title>perf_ctx_enable (11 samples, 0.02%)</title><rect x="94.1755%" y="229" width="0.0188%" height="15" fill="rgb(207,6,21)" fg:x="54974" fg:w="11"/><text x="94.4255%" y="239.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (11 samples, 0.02%)</title><rect x="94.1755%" y="213" width="0.0188%" height="15" fill="rgb(213,127,38)" fg:x="54974" fg:w="11"/><text x="94.4255%" y="223.50"></text></g><g><title>native_write_msr (11 samples, 0.02%)</title><rect x="94.1755%" y="197" width="0.0188%" height="15" fill="rgb(238,118,32)" fg:x="54974" fg:w="11"/><text x="94.4255%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (69 samples, 0.12%)</title><rect x="94.1429%" y="245" width="0.1182%" height="15" fill="rgb(240,139,39)" fg:x="54955" fg:w="69"/><text x="94.3929%" y="255.50"></text></g><g><title>perf_ctx_unlock (39 samples, 0.07%)</title><rect x="94.1943%" y="229" width="0.0668%" height="15" fill="rgb(235,10,37)" fg:x="54985" fg:w="39"/><text x="94.4443%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (145 samples, 0.25%)</title><rect x="94.0179%" y="261" width="0.2484%" height="15" fill="rgb(249,171,38)" fg:x="54882" fg:w="145"/><text x="94.2679%" y="271.50"></text></g><g><title>_raw_spin_lock (15 samples, 0.03%)</title><rect x="94.3142%" y="213" width="0.0257%" height="15" fill="rgb(242,144,32)" fg:x="55055" fg:w="15"/><text x="94.5642%" y="223.50"></text></g><g><title>prepare_task_switch (89 samples, 0.15%)</title><rect x="94.2714%" y="261" width="0.1525%" height="15" fill="rgb(217,117,21)" fg:x="55030" fg:w="89"/><text x="94.5214%" y="271.50"></text></g><g><title>__perf_event_task_sched_out (77 samples, 0.13%)</title><rect x="94.2920%" y="245" width="0.1319%" height="15" fill="rgb(249,87,1)" fg:x="55042" fg:w="77"/><text x="94.5420%" y="255.50"></text></g><g><title>perf_event_context_sched_out (70 samples, 0.12%)</title><rect x="94.3040%" y="229" width="0.1199%" height="15" fill="rgb(248,196,48)" fg:x="55049" fg:w="70"/><text x="94.5540%" y="239.50"></text></g><g><title>perf_ctx_disable (49 samples, 0.08%)</title><rect x="94.3399%" y="213" width="0.0839%" height="15" fill="rgb(251,206,33)" fg:x="55070" fg:w="49"/><text x="94.5899%" y="223.50"></text></g><g><title>record_times (27 samples, 0.05%)</title><rect x="94.4804%" y="245" width="0.0463%" height="15" fill="rgb(232,141,28)" fg:x="55152" fg:w="27"/><text x="94.7304%" y="255.50"></text></g><g><title>psi_account_irqtime (69 samples, 0.12%)</title><rect x="94.4239%" y="261" width="0.1182%" height="15" fill="rgb(209,167,14)" fg:x="55119" fg:w="69"/><text x="94.6739%" y="271.50"></text></g><g><title>sched_clock_cpu (9 samples, 0.02%)</title><rect x="94.5267%" y="245" width="0.0154%" height="15" fill="rgb(225,11,50)" fg:x="55179" fg:w="9"/><text x="94.7767%" y="255.50"></text></g><g><title>sched_clock (8 samples, 0.01%)</title><rect x="94.5284%" y="229" width="0.0137%" height="15" fill="rgb(209,50,20)" fg:x="55180" fg:w="8"/><text x="94.7784%" y="239.50"></text></g><g><title>native_sched_clock (8 samples, 0.01%)</title><rect x="94.5284%" y="213" width="0.0137%" height="15" fill="rgb(212,17,46)" fg:x="55180" fg:w="8"/><text x="94.7784%" y="223.50"></text></g><g><title>psi_group_change (44 samples, 0.08%)</title><rect x="94.5729%" y="245" width="0.0754%" height="15" fill="rgb(216,101,39)" fg:x="55206" fg:w="44"/><text x="94.8229%" y="255.50"></text></g><g><title>psi_task_switch (64 samples, 0.11%)</title><rect x="94.5421%" y="261" width="0.1096%" height="15" fill="rgb(212,228,48)" fg:x="55188" fg:w="64"/><text x="94.7921%" y="271.50"></text></g><g><title>raw_spin_rq_lock_nested (9 samples, 0.02%)</title><rect x="94.6517%" y="261" width="0.0154%" height="15" fill="rgb(250,6,50)" fg:x="55252" fg:w="9"/><text x="94.9017%" y="271.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.01%)</title><rect x="94.6534%" y="245" width="0.0137%" height="15" fill="rgb(250,160,48)" fg:x="55253" fg:w="8"/><text x="94.9034%" y="255.50"></text></g><g><title>__calc_delta.constprop.0 (13 samples, 0.02%)</title><rect x="95.0115%" y="181" width="0.0223%" height="15" fill="rgb(244,216,33)" fg:x="55462" fg:w="13"/><text x="95.2615%" y="191.50"></text></g><g><title>cpuacct_charge (64 samples, 0.11%)</title><rect x="95.0423%" y="181" width="0.1096%" height="15" fill="rgb(207,157,5)" fg:x="55480" fg:w="64"/><text x="95.2923%" y="191.50"></text></g><g><title>update_curr_se (18 samples, 0.03%)</title><rect x="95.1537%" y="181" width="0.0308%" height="15" fill="rgb(228,199,8)" fg:x="55545" fg:w="18"/><text x="95.4037%" y="191.50"></text></g><g><title>update_curr (181 samples, 0.31%)</title><rect x="94.8967%" y="197" width="0.3101%" height="15" fill="rgb(227,80,20)" fg:x="55395" fg:w="181"/><text x="95.1467%" y="207.50"></text></g><g><title>update_min_vruntime (13 samples, 0.02%)</title><rect x="95.1845%" y="181" width="0.0223%" height="15" fill="rgb(222,9,33)" fg:x="55563" fg:w="13"/><text x="95.4345%" y="191.50"></text></g><g><title>__calc_delta.constprop.0 (11 samples, 0.02%)</title><rect x="95.2256%" y="181" width="0.0188%" height="15" fill="rgb(239,44,28)" fg:x="55587" fg:w="11"/><text x="95.4756%" y="191.50"></text></g><g><title>update_entity_lag (52 samples, 0.09%)</title><rect x="95.2068%" y="197" width="0.0891%" height="15" fill="rgb(249,187,43)" fg:x="55576" fg:w="52"/><text x="95.4568%" y="207.50"></text></g><g><title>avg_vruntime (30 samples, 0.05%)</title><rect x="95.2445%" y="181" width="0.0514%" height="15" fill="rgb(216,141,28)" fg:x="55598" fg:w="30"/><text x="95.4945%" y="191.50"></text></g><g><title>__update_load_avg_cfs_rq (13 samples, 0.02%)</title><rect x="95.3387%" y="181" width="0.0223%" height="15" fill="rgb(230,154,53)" fg:x="55653" fg:w="13"/><text x="95.5887%" y="191.50"></text></g><g><title>__update_load_avg_se (23 samples, 0.04%)</title><rect x="95.3609%" y="181" width="0.0394%" height="15" fill="rgb(227,82,4)" fg:x="55666" fg:w="23"/><text x="95.6109%" y="191.50"></text></g><g><title>update_load_avg (63 samples, 0.11%)</title><rect x="95.2959%" y="197" width="0.1079%" height="15" fill="rgb(220,107,16)" fg:x="55628" fg:w="63"/><text x="95.5459%" y="207.50"></text></g><g><title>dequeue_entity (364 samples, 0.62%)</title><rect x="94.7956%" y="213" width="0.6236%" height="15" fill="rgb(207,187,2)" fg:x="55336" fg:w="364"/><text x="95.0456%" y="223.50"></text></g><g><title>vruntime_eligible (7 samples, 0.01%)</title><rect x="95.4072%" y="197" width="0.0120%" height="15" fill="rgb(210,162,52)" fg:x="55693" fg:w="7"/><text x="95.6572%" y="207.50"></text></g><g><title>__raw_spin_lock_irqsave (14 samples, 0.02%)</title><rect x="95.4329%" y="181" width="0.0240%" height="15" fill="rgb(217,216,49)" fg:x="55708" fg:w="14"/><text x="95.6829%" y="191.50"></text></g><g><title>ktime_get (19 samples, 0.03%)</title><rect x="95.4569%" y="181" width="0.0325%" height="15" fill="rgb(218,146,49)" fg:x="55722" fg:w="19"/><text x="95.7069%" y="191.50"></text></g><g><title>read_tsc (12 samples, 0.02%)</title><rect x="95.4689%" y="165" width="0.0206%" height="15" fill="rgb(216,55,40)" fg:x="55729" fg:w="12"/><text x="95.7189%" y="175.50"></text></g><g><title>switch_hrtimer_base (8 samples, 0.01%)</title><rect x="95.4894%" y="181" width="0.0137%" height="15" fill="rgb(208,196,21)" fg:x="55741" fg:w="8"/><text x="95.7394%" y="191.50"></text></g><g><title>hrtimer_start_range_ns (74 samples, 0.13%)</title><rect x="95.4226%" y="197" width="0.1268%" height="15" fill="rgb(242,117,42)" fg:x="55702" fg:w="74"/><text x="95.6726%" y="207.50"></text></g><g><title>timerqueue_add (27 samples, 0.05%)</title><rect x="95.5031%" y="181" width="0.0463%" height="15" fill="rgb(210,11,23)" fg:x="55749" fg:w="27"/><text x="95.7531%" y="191.50"></text></g><g><title>__raw_spin_lock_irqsave (14 samples, 0.02%)</title><rect x="95.5511%" y="181" width="0.0240%" height="15" fill="rgb(217,110,2)" fg:x="55777" fg:w="14"/><text x="95.8011%" y="191.50"></text></g><g><title>__remove_hrtimer (17 samples, 0.03%)</title><rect x="95.5751%" y="181" width="0.0291%" height="15" fill="rgb(229,77,54)" fg:x="55791" fg:w="17"/><text x="95.8251%" y="191.50"></text></g><g><title>timerqueue_del (13 samples, 0.02%)</title><rect x="95.5819%" y="165" width="0.0223%" height="15" fill="rgb(218,53,16)" fg:x="55795" fg:w="13"/><text x="95.8319%" y="175.50"></text></g><g><title>rb_erase (8 samples, 0.01%)</title><rect x="95.5905%" y="149" width="0.0137%" height="15" fill="rgb(215,38,13)" fg:x="55800" fg:w="8"/><text x="95.8405%" y="159.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (37 samples, 0.06%)</title><rect x="95.5494%" y="197" width="0.0634%" height="15" fill="rgb(235,42,18)" fg:x="55776" fg:w="37"/><text x="95.7994%" y="207.50"></text></g><g><title>dequeue_entities (557 samples, 0.95%)</title><rect x="94.6911%" y="229" width="0.9542%" height="15" fill="rgb(219,66,54)" fg:x="55275" fg:w="557"/><text x="94.9411%" y="239.50"></text></g><g><title>dl_server_stop (132 samples, 0.23%)</title><rect x="95.4192%" y="213" width="0.2261%" height="15" fill="rgb(222,205,4)" fg:x="55700" fg:w="132"/><text x="95.6692%" y="223.50"></text></g><g><title>task_non_contending (17 samples, 0.03%)</title><rect x="95.6162%" y="197" width="0.0291%" height="15" fill="rgb(227,213,46)" fg:x="55815" fg:w="17"/><text x="95.8662%" y="207.50"></text></g><g><title>try_to_block_task.isra.0 (567 samples, 0.97%)</title><rect x="94.6757%" y="261" width="0.9713%" height="15" fill="rgb(250,145,42)" fg:x="55266" fg:w="567"/><text x="94.9257%" y="271.50"></text></g><g><title>dequeue_task_fair (560 samples, 0.96%)</title><rect x="94.6877%" y="245" width="0.9593%" height="15" fill="rgb(219,15,2)" fg:x="55273" fg:w="560"/><text x="94.9377%" y="255.50"></text></g><g><title>native_sched_clock (24 samples, 0.04%)</title><rect x="95.6505%" y="213" width="0.0411%" height="15" fill="rgb(231,181,52)" fg:x="55835" fg:w="24"/><text x="95.9005%" y="223.50"></text></g><g><title>update_rq_clock (27 samples, 0.05%)</title><rect x="95.6470%" y="261" width="0.0463%" height="15" fill="rgb(235,1,42)" fg:x="55833" fg:w="27"/><text x="95.8970%" y="271.50"></text></g><g><title>sched_clock_cpu (26 samples, 0.04%)</title><rect x="95.6487%" y="245" width="0.0445%" height="15" fill="rgb(249,88,27)" fg:x="55834" fg:w="26"/><text x="95.8987%" y="255.50"></text></g><g><title>sched_clock (26 samples, 0.04%)</title><rect x="95.6487%" y="229" width="0.0445%" height="15" fill="rgb(235,145,16)" fg:x="55834" fg:w="26"/><text x="95.8987%" y="239.50"></text></g><g><title>arch_scale_cpu_capacity (7 samples, 0.01%)</title><rect x="95.7121%" y="245" width="0.0120%" height="15" fill="rgb(237,114,19)" fg:x="55871" fg:w="7"/><text x="95.9621%" y="255.50"></text></g><g><title>futex_do_wait (1,210 samples, 2.07%)</title><rect x="93.6787%" y="309" width="2.0728%" height="15" fill="rgb(238,51,50)" fg:x="54684" fg:w="1210"/><text x="93.9287%" y="319.50">f..</text></g><g><title>schedule (1,175 samples, 2.01%)</title><rect x="93.7387%" y="293" width="2.0129%" height="15" fill="rgb(205,194,25)" fg:x="54719" fg:w="1175"/><text x="93.9887%" y="303.50">s..</text></g><g><title>__schedule (1,142 samples, 1.96%)</title><rect x="93.7952%" y="277" width="1.9564%" height="15" fill="rgb(215,203,17)" fg:x="54752" fg:w="1142"/><text x="94.0452%" y="287.50">_..</text></g><g><title>update_rq_clock_task (34 samples, 0.06%)</title><rect x="95.6933%" y="261" width="0.0582%" height="15" fill="rgb(233,112,49)" fg:x="55860" fg:w="34"/><text x="95.9433%" y="271.50"></text></g><g><title>update_irq_load_avg (16 samples, 0.03%)</title><rect x="95.7241%" y="245" width="0.0274%" height="15" fill="rgb(241,130,26)" fg:x="55878" fg:w="16"/><text x="95.9741%" y="255.50"></text></g><g><title>futex_unqueue (36 samples, 0.06%)</title><rect x="95.7515%" y="309" width="0.0617%" height="15" fill="rgb(252,223,19)" fg:x="55894" fg:w="36"/><text x="96.0015%" y="319.50"></text></g><g><title>__futex_hash.constprop.0 (19 samples, 0.03%)</title><rect x="95.8560%" y="293" width="0.0325%" height="15" fill="rgb(211,95,25)" fg:x="55955" fg:w="19"/><text x="96.1060%" y="303.50"></text></g><g><title>__futex_queue (22 samples, 0.04%)</title><rect x="95.8886%" y="293" width="0.0377%" height="15" fill="rgb(251,182,27)" fg:x="55974" fg:w="22"/><text x="96.1386%" y="303.50"></text></g><g><title>plist_add (15 samples, 0.03%)</title><rect x="95.9006%" y="277" width="0.0257%" height="15" fill="rgb(238,24,4)" fg:x="55981" fg:w="15"/><text x="96.1506%" y="287.50"></text></g><g><title>__list_add_valid_or_report (8 samples, 0.01%)</title><rect x="95.9126%" y="261" width="0.0137%" height="15" fill="rgb(224,220,25)" fg:x="55988" fg:w="8"/><text x="96.1626%" y="271.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.01%)</title><rect x="95.9263%" y="293" width="0.0103%" height="15" fill="rgb(239,133,26)" fg:x="55996" fg:w="6"/><text x="96.1763%" y="303.50"></text></g><g><title>futex_q_lock (75 samples, 0.13%)</title><rect x="95.9417%" y="293" width="0.1285%" height="15" fill="rgb(211,94,48)" fg:x="56005" fg:w="75"/><text x="96.1917%" y="303.50"></text></g><g><title>__futex_wait (1,480 samples, 2.54%)</title><rect x="93.5896%" y="325" width="2.5354%" height="15" fill="rgb(239,87,6)" fg:x="54632" fg:w="1480"/><text x="93.8396%" y="335.50">__..</text></g><g><title>futex_wait_setup (182 samples, 0.31%)</title><rect x="95.8132%" y="309" width="0.3118%" height="15" fill="rgb(227,62,0)" fg:x="55930" fg:w="182"/><text x="96.0632%" y="319.50"></text></g><g><title>get_futex_key (32 samples, 0.05%)</title><rect x="96.0702%" y="293" width="0.0548%" height="15" fill="rgb(211,226,4)" fg:x="56080" fg:w="32"/><text x="96.3202%" y="303.50"></text></g><g><title>__x64_sys_futex (1,530 samples, 2.62%)</title><rect x="93.5057%" y="373" width="2.6210%" height="15" fill="rgb(253,38,52)" fg:x="54583" fg:w="1530"/><text x="93.7557%" y="383.50">__..</text></g><g><title>do_futex (1,525 samples, 2.61%)</title><rect x="93.5142%" y="357" width="2.6125%" height="15" fill="rgb(229,126,40)" fg:x="54588" fg:w="1525"/><text x="93.7642%" y="367.50">do..</text></g><g><title>futex_wait (1,524 samples, 2.61%)</title><rect x="93.5159%" y="341" width="2.6108%" height="15" fill="rgb(229,165,44)" fg:x="54589" fg:w="1524"/><text x="93.7659%" y="351.50">fu..</text></g><g><title>arch_exit_to_user_mode_prepare.isra.0 (38 samples, 0.07%)</title><rect x="96.1267%" y="373" width="0.0651%" height="15" fill="rgb(247,95,47)" fg:x="56113" fg:w="38"/><text x="96.3767%" y="383.50"></text></g><g><title>switch_fpu_return (22 samples, 0.04%)</title><rect x="96.1541%" y="357" width="0.0377%" height="15" fill="rgb(216,140,30)" fg:x="56129" fg:w="22"/><text x="96.4041%" y="367.50"></text></g><g><title>__put_user_8 (17 samples, 0.03%)</title><rect x="96.3031%" y="325" width="0.0291%" height="15" fill="rgb(246,214,8)" fg:x="56216" fg:w="17"/><text x="96.5531%" y="335.50"></text></g><g><title>rseq_ip_fixup (72 samples, 0.12%)</title><rect x="96.2706%" y="341" width="0.1233%" height="15" fill="rgb(227,224,15)" fg:x="56197" fg:w="72"/><text x="96.5206%" y="351.50"></text></g><g><title>rseq_get_rseq_cs.isra.0 (36 samples, 0.06%)</title><rect x="96.3323%" y="325" width="0.0617%" height="15" fill="rgb(233,175,4)" fg:x="56233" fg:w="36"/><text x="96.5823%" y="335.50"></text></g><g><title>__get_user_8 (24 samples, 0.04%)</title><rect x="96.3528%" y="309" width="0.0411%" height="15" fill="rgb(221,66,45)" fg:x="56245" fg:w="24"/><text x="96.6028%" y="319.50"></text></g><g><title>__rseq_handle_notify_resume (109 samples, 0.19%)</title><rect x="96.2637%" y="357" width="0.1867%" height="15" fill="rgb(221,178,18)" fg:x="56193" fg:w="109"/><text x="96.5137%" y="367.50"></text></g><g><title>rseq_update_cpu_node_id (33 samples, 0.06%)</title><rect x="96.3939%" y="341" width="0.0565%" height="15" fill="rgb(213,81,29)" fg:x="56269" fg:w="33"/><text x="96.6439%" y="351.50"></text></g><g><title>exit_to_user_mode_loop (156 samples, 0.27%)</title><rect x="96.1935%" y="373" width="0.2672%" height="15" fill="rgb(220,89,49)" fg:x="56152" fg:w="156"/><text x="96.4435%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,754 samples, 3.00%)</title><rect x="93.4663%" y="405" width="3.0048%" height="15" fill="rgb(227,60,33)" fg:x="54560" fg:w="1754"/><text x="93.7163%" y="415.50">ent..</text></g><g><title>do_syscall_64 (1,752 samples, 3.00%)</title><rect x="93.4697%" y="389" width="3.0013%" height="15" fill="rgb(205,113,12)" fg:x="54562" fg:w="1752"/><text x="93.7197%" y="399.50">do_..</text></g><g><title>x64_sys_call (6 samples, 0.01%)</title><rect x="96.4608%" y="373" width="0.0103%" height="15" fill="rgb(211,32,1)" fg:x="56308" fg:w="6"/><text x="96.7108%" y="383.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (10 samples, 0.02%)</title><rect x="96.4710%" y="405" width="0.0171%" height="15" fill="rgb(246,2,12)" fg:x="56314" fg:w="10"/><text x="96.7210%" y="415.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1,874 samples, 3.21%)</title><rect x="93.2950%" y="437" width="3.2103%" height="15" fill="rgb(243,37,27)" fg:x="54460" fg:w="1874"/><text x="93.5450%" y="447.50">par..</text></g><g><title>syscall (1,866 samples, 3.20%)</title><rect x="93.3087%" y="421" width="3.1966%" height="15" fill="rgb(248,211,31)" fg:x="54468" fg:w="1866"/><text x="93.5587%" y="431.50">sys..</text></g><g><title>syscall_return_via_sysret (10 samples, 0.02%)</title><rect x="96.4882%" y="405" width="0.0171%" height="15" fill="rgb(242,146,47)" fg:x="56324" fg:w="10"/><text x="96.7382%" y="415.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (11 samples, 0.02%)</title><rect x="96.5053%" y="437" width="0.0188%" height="15" fill="rgb(206,70,20)" fg:x="56334" fg:w="11"/><text x="96.7553%" y="447.50"></text></g><g><title>__sched_yield (11 samples, 0.02%)</title><rect x="96.5053%" y="421" width="0.0188%" height="15" fill="rgb(215,10,51)" fg:x="56334" fg:w="11"/><text x="96.7553%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="96.5087%" y="405" width="0.0154%" height="15" fill="rgb(243,178,53)" fg:x="56336" fg:w="9"/><text x="96.7587%" y="415.50"></text></g><g><title>do_syscall_64 (9 samples, 0.02%)</title><rect x="96.5087%" y="389" width="0.0154%" height="15" fill="rgb(233,221,20)" fg:x="56336" fg:w="9"/><text x="96.7587%" y="399.50"></text></g><g><title>__x64_sys_sched_yield (8 samples, 0.01%)</title><rect x="96.5104%" y="373" width="0.0137%" height="15" fill="rgb(218,95,35)" fg:x="56337" fg:w="8"/><text x="96.7604%" y="383.50"></text></g><g><title>schedule (6 samples, 0.01%)</title><rect x="96.5139%" y="357" width="0.0103%" height="15" fill="rgb(229,13,5)" fg:x="56339" fg:w="6"/><text x="96.7639%" y="367.50"></text></g><g><title>__schedule (6 samples, 0.01%)</title><rect x="96.5139%" y="341" width="0.0103%" height="15" fill="rgb(252,164,30)" fg:x="56339" fg:w="6"/><text x="96.7639%" y="351.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (12 samples, 0.02%)</title><rect x="96.5241%" y="437" width="0.0206%" height="15" fill="rgb(232,68,36)" fg:x="56345" fg:w="12"/><text x="96.7741%" y="447.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::return_to_pool::{{closure}} (9 samples, 0.02%)</title><rect x="96.5515%" y="437" width="0.0154%" height="15" fill="rgb(219,59,54)" fg:x="56361" fg:w="9"/><text x="96.8015%" y="447.50"></text></g><g><title>sqlx_core::pool::connection::Live&lt;DB&gt;::into_idle (18 samples, 0.03%)</title><rect x="96.5670%" y="437" width="0.0308%" height="15" fill="rgb(250,92,33)" fg:x="56370" fg:w="18"/><text x="96.8170%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (18 samples, 0.03%)</title><rect x="96.5670%" y="421" width="0.0308%" height="15" fill="rgb(229,162,54)" fg:x="56370" fg:w="18"/><text x="96.8170%" y="431.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (17 samples, 0.03%)</title><rect x="96.5687%" y="405" width="0.0291%" height="15" fill="rgb(244,114,52)" fg:x="56371" fg:w="17"/><text x="96.8187%" y="415.50"></text></g><g><title>[[vdso]] (15 samples, 0.03%)</title><rect x="96.5721%" y="389" width="0.0257%" height="15" fill="rgb(212,211,43)" fg:x="56373" fg:w="15"/><text x="96.8221%" y="399.50"></text></g><g><title>sqlx_core::pool::connection::PoolConnection&lt;DB&gt;::return_to_pool::{{closure}} (30 samples, 0.05%)</title><rect x="96.5978%" y="437" width="0.0514%" height="15" fill="rgb(226,147,8)" fg:x="56388" fg:w="30"/><text x="96.8478%" y="447.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;DB,sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::return_to_pool::{{closure}} (8 samples, 0.01%)</title><rect x="96.6355%" y="421" width="0.0137%" height="15" fill="rgb(226,23,13)" fg:x="56410" fg:w="8"/><text x="96.8855%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.01%)</title><rect x="96.6372%" y="405" width="0.0120%" height="15" fill="rgb(240,63,4)" fg:x="56411" fg:w="7"/><text x="96.8872%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.01%)</title><rect x="96.6389%" y="389" width="0.0103%" height="15" fill="rgb(221,1,32)" fg:x="56412" fg:w="6"/><text x="96.8889%" y="399.50"></text></g><g><title>cfree@GLIBC_2.2.5 (6 samples, 0.01%)</title><rect x="96.6389%" y="373" width="0.0103%" height="15" fill="rgb(242,117,10)" fg:x="56412" fg:w="6"/><text x="96.8889%" y="383.50"></text></g><g><title>sqlx_core::pool::inner::DecrementSizeGuard&lt;DB&gt;::cancel (7 samples, 0.01%)</title><rect x="96.6492%" y="437" width="0.0120%" height="15" fill="rgb(249,172,44)" fg:x="56418" fg:w="7"/><text x="96.8992%" y="447.50"></text></g><g><title>sqlx_core::pool::inner::PoolInner&lt;DB&gt;::release (18 samples, 0.03%)</title><rect x="96.6663%" y="437" width="0.0308%" height="15" fill="rgb(244,46,45)" fg:x="56428" fg:w="18"/><text x="96.9163%" y="447.50"></text></g><g><title>sqlx_core::pool::inner::is_beyond_max_lifetime::{{closure}} (12 samples, 0.02%)</title><rect x="96.6972%" y="437" width="0.0206%" height="15" fill="rgb(206,43,17)" fg:x="56446" fg:w="12"/><text x="96.9472%" y="447.50"></text></g><g><title>std::time::Instant::elapsed (8 samples, 0.01%)</title><rect x="96.7040%" y="421" width="0.0137%" height="15" fill="rgb(239,218,39)" fg:x="56450" fg:w="8"/><text x="96.9540%" y="431.50"></text></g><g><title>std::time::Instant::now (6 samples, 0.01%)</title><rect x="96.7074%" y="405" width="0.0103%" height="15" fill="rgb(208,169,54)" fg:x="56452" fg:w="6"/><text x="96.9574%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (6 samples, 0.01%)</title><rect x="96.7074%" y="389" width="0.0103%" height="15" fill="rgb(247,25,42)" fg:x="56452" fg:w="6"/><text x="96.9574%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (6 samples, 0.01%)</title><rect x="96.7074%" y="373" width="0.0103%" height="15" fill="rgb(226,23,31)" fg:x="56452" fg:w="6"/><text x="96.9574%" y="383.50"></text></g><g><title>sqlx_sqlite::connection::worker::ConnectionWorker::oneshot_cmd::{{closure}} (44 samples, 0.08%)</title><rect x="96.7194%" y="437" width="0.0754%" height="15" fill="rgb(247,16,28)" fg:x="56459" fg:w="44"/><text x="96.9694%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::oneshot::Receiver&lt;()&gt;&gt; (6 samples, 0.01%)</title><rect x="96.7845%" y="421" width="0.0103%" height="15" fill="rgb(231,147,38)" fg:x="56497" fg:w="6"/><text x="97.0345%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="96.7845%" y="405" width="0.0103%" height="15" fill="rgb(253,81,48)" fg:x="56497" fg:w="6"/><text x="97.0345%" y="415.50"></text></g><g><title>sqlx_sqlite::connection::worker::ConnectionWorker::ping::{{closure}} (28 samples, 0.05%)</title><rect x="96.7948%" y="437" width="0.0480%" height="15" fill="rgb(249,222,43)" fg:x="56503" fg:w="28"/><text x="97.0448%" y="447.50"></text></g><g><title>__ieee754_pow_fma (18 samples, 0.03%)</title><rect x="96.8582%" y="405" width="0.0308%" height="15" fill="rgb(221,3,27)" fg:x="56540" fg:w="18"/><text x="97.1082%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (23 samples, 0.04%)</title><rect x="96.8513%" y="437" width="0.0394%" height="15" fill="rgb(228,180,5)" fg:x="56536" fg:w="23"/><text x="97.1013%" y="447.50"></text></g><g><title>pow@@GLIBC_2.29 (22 samples, 0.04%)</title><rect x="96.8531%" y="421" width="0.0377%" height="15" fill="rgb(227,131,42)" fg:x="56537" fg:w="22"/><text x="97.1031%" y="431.50"></text></g><g><title>std::panic::catch_unwind (29 samples, 0.05%)</title><rect x="96.8907%" y="437" width="0.0497%" height="15" fill="rgb(212,3,39)" fg:x="56559" fg:w="29"/><text x="97.1407%" y="447.50"></text></g><g><title>std::panicking::catch_unwind (17 samples, 0.03%)</title><rect x="96.9113%" y="421" width="0.0291%" height="15" fill="rgb(226,45,5)" fg:x="56571" fg:w="17"/><text x="97.1613%" y="431.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="96.9301%" y="405" width="0.0103%" height="15" fill="rgb(215,167,45)" fg:x="56582" fg:w="6"/><text x="97.1801%" y="415.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (12 samples, 0.02%)</title><rect x="96.9404%" y="421" width="0.0206%" height="15" fill="rgb(250,218,53)" fg:x="56588" fg:w="12"/><text x="97.1904%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.02%)</title><rect x="96.9421%" y="405" width="0.0188%" height="15" fill="rgb(207,140,0)" fg:x="56589" fg:w="11"/><text x="97.1921%" y="415.50"></text></g><g><title>std::panicking::catch_unwind::do_call (15 samples, 0.03%)</title><rect x="96.9404%" y="437" width="0.0257%" height="15" fill="rgb(238,133,51)" fg:x="56588" fg:w="15"/><text x="97.1904%" y="447.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (19 samples, 0.03%)</title><rect x="96.9781%" y="437" width="0.0325%" height="15" fill="rgb(218,203,53)" fg:x="56610" fg:w="19"/><text x="97.2281%" y="447.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (8 samples, 0.01%)</title><rect x="97.0107%" y="437" width="0.0137%" height="15" fill="rgb(226,184,25)" fg:x="56629" fg:w="8"/><text x="97.2607%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (24 samples, 0.04%)</title><rect x="97.0295%" y="405" width="0.0411%" height="15" fill="rgb(231,121,21)" fg:x="56640" fg:w="24"/><text x="97.2795%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (24 samples, 0.04%)</title><rect x="97.0295%" y="389" width="0.0411%" height="15" fill="rgb(251,14,34)" fg:x="56640" fg:w="24"/><text x="97.2795%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 0.03%)</title><rect x="97.0860%" y="373" width="0.0291%" height="15" fill="rgb(249,193,11)" fg:x="56673" fg:w="17"/><text x="97.3360%" y="383.50"></text></g><g><title>__futex_hash.constprop.0 (7 samples, 0.01%)</title><rect x="97.1991%" y="293" width="0.0120%" height="15" fill="rgb(220,172,37)" fg:x="56739" fg:w="7"/><text x="97.4491%" y="303.50"></text></g><g><title>futex_wake_mark (35 samples, 0.06%)</title><rect x="97.2162%" y="293" width="0.0600%" height="15" fill="rgb(231,229,43)" fg:x="56749" fg:w="35"/><text x="97.4662%" y="303.50"></text></g><g><title>select_idle_sibling (29 samples, 0.05%)</title><rect x="97.3190%" y="229" width="0.0497%" height="15" fill="rgb(250,161,5)" fg:x="56809" fg:w="29"/><text x="97.5690%" y="239.50"></text></g><g><title>available_idle_cpu (16 samples, 0.03%)</title><rect x="97.3721%" y="213" width="0.0274%" height="15" fill="rgb(218,225,18)" fg:x="56840" fg:w="16"/><text x="97.6221%" y="223.50"></text></g><g><title>select_task_rq (59 samples, 0.10%)</title><rect x="97.3036%" y="261" width="0.1011%" height="15" fill="rgb(245,45,42)" fg:x="56800" fg:w="59"/><text x="97.5536%" y="271.50"></text></g><g><title>select_task_rq_fair (53 samples, 0.09%)</title><rect x="97.3139%" y="245" width="0.0908%" height="15" fill="rgb(211,115,1)" fg:x="56806" fg:w="53"/><text x="97.5639%" y="255.50"></text></g><g><title>wake_affine (21 samples, 0.04%)</title><rect x="97.3687%" y="229" width="0.0360%" height="15" fill="rgb(248,133,52)" fg:x="56838" fg:w="21"/><text x="97.6187%" y="239.50"></text></g><g><title>__smp_call_single_queue (124 samples, 0.21%)</title><rect x="97.4269%" y="245" width="0.2124%" height="15" fill="rgb(238,100,21)" fg:x="56872" fg:w="124"/><text x="97.6769%" y="255.50"></text></g><g><title>call_function_single_prep_ipi (113 samples, 0.19%)</title><rect x="97.4458%" y="229" width="0.1936%" height="15" fill="rgb(247,144,11)" fg:x="56883" fg:w="113"/><text x="97.6958%" y="239.50"></text></g><g><title>__x64_sys_futex (304 samples, 0.52%)</title><rect x="97.1203%" y="341" width="0.5208%" height="15" fill="rgb(206,164,16)" fg:x="56693" fg:w="304"/><text x="97.3703%" y="351.50"></text></g><g><title>do_futex (304 samples, 0.52%)</title><rect x="97.1203%" y="325" width="0.5208%" height="15" fill="rgb(222,34,3)" fg:x="56693" fg:w="304"/><text x="97.3703%" y="335.50"></text></g><g><title>futex_wake (302 samples, 0.52%)</title><rect x="97.1237%" y="309" width="0.5174%" height="15" fill="rgb(248,82,4)" fg:x="56695" fg:w="302"/><text x="97.3737%" y="319.50"></text></g><g><title>wake_up_q (207 samples, 0.35%)</title><rect x="97.2865%" y="293" width="0.3546%" height="15" fill="rgb(228,81,46)" fg:x="56790" fg:w="207"/><text x="97.5365%" y="303.50"></text></g><g><title>try_to_wake_up (206 samples, 0.35%)</title><rect x="97.2882%" y="277" width="0.3529%" height="15" fill="rgb(227,67,47)" fg:x="56791" fg:w="206"/><text x="97.5382%" y="287.50"></text></g><g><title>ttwu_queue_wakelist (137 samples, 0.23%)</title><rect x="97.4064%" y="261" width="0.2347%" height="15" fill="rgb(215,93,53)" fg:x="56860" fg:w="137"/><text x="97.6564%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (310 samples, 0.53%)</title><rect x="97.1152%" y="373" width="0.5311%" height="15" fill="rgb(248,194,39)" fg:x="56690" fg:w="310"/><text x="97.3652%" y="383.50"></text></g><g><title>do_syscall_64 (310 samples, 0.53%)</title><rect x="97.1152%" y="357" width="0.5311%" height="15" fill="rgb(215,5,19)" fg:x="56690" fg:w="310"/><text x="97.3652%" y="367.50"></text></g><g><title>std::thread::Thread::unpark (365 samples, 0.63%)</title><rect x="97.0244%" y="437" width="0.6253%" height="15" fill="rgb(226,215,51)" fg:x="56637" fg:w="365"/><text x="97.2744%" y="447.50"></text></g><g><title>std::sys::sync::thread_parking::futex::Parker::unpark (362 samples, 0.62%)</title><rect x="97.0295%" y="421" width="0.6201%" height="15" fill="rgb(225,56,26)" fg:x="56640" fg:w="362"/><text x="97.2795%" y="431.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (338 samples, 0.58%)</title><rect x="97.0706%" y="405" width="0.5790%" height="15" fill="rgb(222,75,29)" fg:x="56664" fg:w="338"/><text x="97.3206%" y="415.50"></text></g><g><title>syscall (338 samples, 0.58%)</title><rect x="97.0706%" y="389" width="0.5790%" height="15" fill="rgb(236,139,6)" fg:x="56664" fg:w="338"/><text x="97.3206%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.02%)</title><rect x="97.6959%" y="421" width="0.0154%" height="15" fill="rgb(223,137,36)" fg:x="57029" fg:w="9"/><text x="97.9459%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (7 samples, 0.01%)</title><rect x="97.7113%" y="421" width="0.0120%" height="15" fill="rgb(226,99,2)" fg:x="57038" fg:w="7"/><text x="97.9613%" y="431.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (12 samples, 0.02%)</title><rect x="97.7421%" y="405" width="0.0206%" height="15" fill="rgb(206,133,23)" fg:x="57056" fg:w="12"/><text x="97.9921%" y="415.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (10 samples, 0.02%)</title><rect x="97.7456%" y="389" width="0.0171%" height="15" fill="rgb(243,173,15)" fg:x="57058" fg:w="10"/><text x="97.9956%" y="399.50"></text></g><g><title>[[vdso]] (9 samples, 0.02%)</title><rect x="97.7473%" y="373" width="0.0154%" height="15" fill="rgb(228,69,28)" fg:x="57059" fg:w="9"/><text x="97.9973%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (70 samples, 0.12%)</title><rect x="97.6496%" y="437" width="0.1199%" height="15" fill="rgb(212,51,22)" fg:x="57002" fg:w="70"/><text x="97.8996%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (25 samples, 0.04%)</title><rect x="97.7267%" y="421" width="0.0428%" height="15" fill="rgb(227,113,0)" fg:x="57047" fg:w="25"/><text x="97.9767%" y="431.50"></text></g><g><title>syscall (22 samples, 0.04%)</title><rect x="97.7696%" y="437" width="0.0377%" height="15" fill="rgb(252,84,27)" fg:x="57072" fg:w="22"/><text x="98.0196%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.02%)</title><rect x="97.7884%" y="421" width="0.0188%" height="15" fill="rgb(223,145,39)" fg:x="57083" fg:w="11"/><text x="98.0384%" y="431.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (25 samples, 0.04%)</title><rect x="97.8072%" y="437" width="0.0428%" height="15" fill="rgb(239,219,30)" fg:x="57094" fg:w="25"/><text x="98.0572%" y="447.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.01%)</title><rect x="97.8501%" y="437" width="0.0120%" height="15" fill="rgb(224,196,39)" fg:x="57119" fg:w="7"/><text x="98.1001%" y="447.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (11 samples, 0.02%)</title><rect x="97.8689%" y="437" width="0.0188%" height="15" fill="rgb(205,35,43)" fg:x="57130" fg:w="11"/><text x="98.1189%" y="447.50"></text></g><g><title>tokio::runtime::context::budget (11 samples, 0.02%)</title><rect x="97.8878%" y="437" width="0.0188%" height="15" fill="rgb(228,201,21)" fg:x="57141" fg:w="11"/><text x="98.1378%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.02%)</title><rect x="97.8878%" y="421" width="0.0188%" height="15" fill="rgb(237,118,16)" fg:x="57141" fg:w="11"/><text x="98.1378%" y="431.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::{{closure}} (7 samples, 0.01%)</title><rect x="97.9100%" y="437" width="0.0120%" height="15" fill="rgb(241,17,19)" fg:x="57154" fg:w="7"/><text x="98.1600%" y="447.50"></text></g><g><title>std::time::Instant::elapsed (43 samples, 0.07%)</title><rect x="97.9357%" y="421" width="0.0737%" height="15" fill="rgb(214,10,25)" fg:x="57169" fg:w="43"/><text x="98.1857%" y="431.50"></text></g><g><title>std::time::Instant::now (37 samples, 0.06%)</title><rect x="97.9460%" y="405" width="0.0634%" height="15" fill="rgb(238,37,29)" fg:x="57175" fg:w="37"/><text x="98.1960%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (37 samples, 0.06%)</title><rect x="97.9460%" y="389" width="0.0634%" height="15" fill="rgb(253,83,25)" fg:x="57175" fg:w="37"/><text x="98.1960%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (36 samples, 0.06%)</title><rect x="97.9477%" y="373" width="0.0617%" height="15" fill="rgb(234,192,12)" fg:x="57176" fg:w="36"/><text x="98.1977%" y="383.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (35 samples, 0.06%)</title><rect x="97.9494%" y="357" width="0.0600%" height="15" fill="rgb(241,216,45)" fg:x="57177" fg:w="35"/><text x="98.1994%" y="367.50"></text></g><g><title>[[vdso]] (30 samples, 0.05%)</title><rect x="97.9580%" y="341" width="0.0514%" height="15" fill="rgb(242,22,33)" fg:x="57182" fg:w="30"/><text x="98.2080%" y="351.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_processing_scheduled_tasks (49 samples, 0.08%)</title><rect x="97.9272%" y="437" width="0.0839%" height="15" fill="rgb(231,105,49)" fg:x="57164" fg:w="49"/><text x="98.1772%" y="447.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::submit (8 samples, 0.01%)</title><rect x="98.0111%" y="437" width="0.0137%" height="15" fill="rgb(218,204,15)" fg:x="57213" fg:w="8"/><text x="98.2611%" y="447.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (32 samples, 0.05%)</title><rect x="98.0471%" y="405" width="0.0548%" height="15" fill="rgb(235,138,41)" fg:x="57234" fg:w="32"/><text x="98.2971%" y="415.50"></text></g><g><title>[[vdso]] (25 samples, 0.04%)</title><rect x="98.0591%" y="389" width="0.0428%" height="15" fill="rgb(246,0,9)" fg:x="57241" fg:w="25"/><text x="98.3091%" y="399.50"></text></g><g><title>tokio::runtime::metrics::batch::now (45 samples, 0.08%)</title><rect x="98.0282%" y="437" width="0.0771%" height="15" fill="rgb(210,74,4)" fg:x="57223" fg:w="45"/><text x="98.2782%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (41 samples, 0.07%)</title><rect x="98.0351%" y="421" width="0.0702%" height="15" fill="rgb(250,60,41)" fg:x="57227" fg:w="41"/><text x="98.2851%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (10 samples, 0.02%)</title><rect x="98.1139%" y="437" width="0.0171%" height="15" fill="rgb(220,115,12)" fg:x="57273" fg:w="10"/><text x="98.3639%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (8 samples, 0.01%)</title><rect x="98.1310%" y="437" width="0.0137%" height="15" fill="rgb(237,100,13)" fg:x="57283" fg:w="8"/><text x="98.3810%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (7 samples, 0.01%)</title><rect x="98.1584%" y="437" width="0.0120%" height="15" fill="rgb(213,55,26)" fg:x="57299" fg:w="7"/><text x="98.4084%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (22 samples, 0.04%)</title><rect x="98.1704%" y="437" width="0.0377%" height="15" fill="rgb(216,17,4)" fg:x="57306" fg:w="22"/><text x="98.4204%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (10 samples, 0.02%)</title><rect x="98.2081%" y="437" width="0.0171%" height="15" fill="rgb(220,153,47)" fg:x="57328" fg:w="10"/><text x="98.4581%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (6 samples, 0.01%)</title><rect x="98.2321%" y="437" width="0.0103%" height="15" fill="rgb(215,131,9)" fg:x="57342" fg:w="6"/><text x="98.4821%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (7 samples, 0.01%)</title><rect x="98.2646%" y="437" width="0.0120%" height="15" fill="rgb(233,46,42)" fg:x="57361" fg:w="7"/><text x="98.5146%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::len (13 samples, 0.02%)</title><rect x="98.2920%" y="437" width="0.0223%" height="15" fill="rgb(226,86,7)" fg:x="57377" fg:w="13"/><text x="98.5420%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (10 samples, 0.02%)</title><rect x="98.3143%" y="437" width="0.0171%" height="15" fill="rgb(239,226,21)" fg:x="57390" fg:w="10"/><text x="98.5643%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (9 samples, 0.02%)</title><rect x="98.3366%" y="437" width="0.0154%" height="15" fill="rgb(244,137,22)" fg:x="57403" fg:w="9"/><text x="98.5866%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::len (26 samples, 0.04%)</title><rect x="98.3520%" y="437" width="0.0445%" height="15" fill="rgb(211,139,35)" fg:x="57412" fg:w="26"/><text x="98.6020%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (44 samples, 0.08%)</title><rect x="98.3965%" y="437" width="0.0754%" height="15" fill="rgb(214,62,50)" fg:x="57438" fg:w="44"/><text x="98.6465%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (15 samples, 0.03%)</title><rect x="98.4736%" y="437" width="0.0257%" height="15" fill="rgb(212,113,44)" fg:x="57483" fg:w="15"/><text x="98.7236%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (6 samples, 0.01%)</title><rect x="98.5028%" y="437" width="0.0103%" height="15" fill="rgb(226,150,43)" fg:x="57500" fg:w="6"/><text x="98.7528%" y="447.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (25 samples, 0.04%)</title><rect x="98.5233%" y="405" width="0.0428%" height="15" fill="rgb(250,71,37)" fg:x="57512" fg:w="25"/><text x="98.7733%" y="415.50"></text></g><g><title>[[vdso]] (24 samples, 0.04%)</title><rect x="98.5250%" y="389" width="0.0411%" height="15" fill="rgb(219,76,19)" fg:x="57513" fg:w="24"/><text x="98.7750%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (27 samples, 0.05%)</title><rect x="98.5216%" y="421" width="0.0463%" height="15" fill="rgb(250,39,11)" fg:x="57511" fg:w="27"/><text x="98.7716%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (33 samples, 0.06%)</title><rect x="98.5130%" y="437" width="0.0565%" height="15" fill="rgb(230,64,31)" fg:x="57506" fg:w="33"/><text x="98.7630%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::unparked (8 samples, 0.01%)</title><rect x="98.5816%" y="437" width="0.0137%" height="15" fill="rgb(208,222,23)" fg:x="57546" fg:w="8"/><text x="98.8316%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::submit (7 samples, 0.01%)</title><rect x="98.5833%" y="421" width="0.0120%" height="15" fill="rgb(227,125,18)" fg:x="57547" fg:w="7"/><text x="98.8333%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (7 samples, 0.01%)</title><rect x="98.5970%" y="437" width="0.0120%" height="15" fill="rgb(234,210,9)" fg:x="57555" fg:w="7"/><text x="98.8470%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (6 samples, 0.01%)</title><rect x="98.6090%" y="437" width="0.0103%" height="15" fill="rgb(217,127,24)" fg:x="57562" fg:w="6"/><text x="98.8590%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (48 samples, 0.08%)</title><rect x="98.6227%" y="437" width="0.0822%" height="15" fill="rgb(239,141,48)" fg:x="57570" fg:w="48"/><text x="98.8727%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (14 samples, 0.02%)</title><rect x="98.6809%" y="421" width="0.0240%" height="15" fill="rgb(227,109,8)" fg:x="57604" fg:w="14"/><text x="98.9309%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (26 samples, 0.04%)</title><rect x="98.8471%" y="421" width="0.0445%" height="15" fill="rgb(235,184,23)" fg:x="57701" fg:w="26"/><text x="99.0971%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (111 samples, 0.19%)</title><rect x="98.7049%" y="437" width="0.1902%" height="15" fill="rgb(227,226,48)" fg:x="57618" fg:w="111"/><text x="98.9549%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (13 samples, 0.02%)</title><rect x="98.9447%" y="421" width="0.0223%" height="15" fill="rgb(206,150,11)" fg:x="57758" fg:w="13"/><text x="99.1947%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (43 samples, 0.07%)</title><rect x="98.8951%" y="437" width="0.0737%" height="15" fill="rgb(254,2,33)" fg:x="57729" fg:w="43"/><text x="99.1451%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (7 samples, 0.01%)</title><rect x="98.9687%" y="437" width="0.0120%" height="15" fill="rgb(243,160,20)" fg:x="57772" fg:w="7"/><text x="99.2187%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.01%)</title><rect x="99.0441%" y="405" width="0.0137%" height="15" fill="rgb(218,208,30)" fg:x="57816" fg:w="8"/><text x="99.2941%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (49 samples, 0.08%)</title><rect x="98.9841%" y="437" width="0.0839%" height="15" fill="rgb(224,120,49)" fg:x="57781" fg:w="49"/><text x="99.2341%" y="447.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (30 samples, 0.05%)</title><rect x="99.0167%" y="421" width="0.0514%" height="15" fill="rgb(246,12,2)" fg:x="57800" fg:w="30"/><text x="99.2667%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (11 samples, 0.02%)</title><rect x="99.0681%" y="437" width="0.0188%" height="15" fill="rgb(236,117,3)" fg:x="57830" fg:w="11"/><text x="99.3181%" y="447.50"></text></g><g><title>tokio::task::coop::budget (10 samples, 0.02%)</title><rect x="99.0698%" y="421" width="0.0171%" height="15" fill="rgb(216,128,52)" fg:x="57831" fg:w="10"/><text x="99.3198%" y="431.50"></text></g><g><title>tokio::task::coop::with_budget (8 samples, 0.01%)</title><rect x="99.0732%" y="405" width="0.0137%" height="15" fill="rgb(246,145,19)" fg:x="57833" fg:w="8"/><text x="99.3232%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (8 samples, 0.01%)</title><rect x="99.0886%" y="437" width="0.0137%" height="15" fill="rgb(222,11,46)" fg:x="57842" fg:w="8"/><text x="99.3386%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (8 samples, 0.01%)</title><rect x="99.2394%" y="421" width="0.0137%" height="15" fill="rgb(245,82,36)" fg:x="57930" fg:w="8"/><text x="99.4894%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (88 samples, 0.15%)</title><rect x="99.1143%" y="437" width="0.1508%" height="15" fill="rgb(250,73,51)" fg:x="57857" fg:w="88"/><text x="99.3643%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (18 samples, 0.03%)</title><rect x="99.2736%" y="437" width="0.0308%" height="15" fill="rgb(221,189,23)" fg:x="57950" fg:w="18"/><text x="99.5236%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (15 samples, 0.03%)</title><rect x="99.3045%" y="437" width="0.0257%" height="15" fill="rgb(210,33,7)" fg:x="57968" fg:w="15"/><text x="99.5545%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (14 samples, 0.02%)</title><rect x="99.3319%" y="437" width="0.0240%" height="15" fill="rgb(210,107,22)" fg:x="57984" fg:w="14"/><text x="99.5819%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (9 samples, 0.02%)</title><rect x="99.3559%" y="437" width="0.0154%" height="15" fill="rgb(222,116,37)" fg:x="57998" fg:w="9"/><text x="99.6059%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (7 samples, 0.01%)</title><rect x="99.3901%" y="437" width="0.0120%" height="15" fill="rgb(254,17,48)" fg:x="58018" fg:w="7"/><text x="99.6401%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (10 samples, 0.02%)</title><rect x="99.4021%" y="437" width="0.0171%" height="15" fill="rgb(224,36,32)" fg:x="58025" fg:w="10"/><text x="99.6521%" y="447.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (11 samples, 0.02%)</title><rect x="99.4210%" y="421" width="0.0188%" height="15" fill="rgb(232,90,46)" fg:x="58036" fg:w="11"/><text x="99.6710%" y="431.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (7 samples, 0.01%)</title><rect x="99.4278%" y="405" width="0.0120%" height="15" fill="rgb(241,66,40)" fg:x="58040" fg:w="7"/><text x="99.6778%" y="415.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (13 samples, 0.02%)</title><rect x="99.4193%" y="437" width="0.0223%" height="15" fill="rgb(249,184,29)" fg:x="58035" fg:w="13"/><text x="99.6693%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="99.4484%" y="421" width="0.0120%" height="15" fill="rgb(231,181,1)" fg:x="58052" fg:w="7"/><text x="99.6984%" y="431.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (18 samples, 0.03%)</title><rect x="99.4484%" y="437" width="0.0308%" height="15" fill="rgb(224,94,2)" fg:x="58052" fg:w="18"/><text x="99.6984%" y="447.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (11 samples, 0.02%)</title><rect x="99.4604%" y="421" width="0.0188%" height="15" fill="rgb(229,170,15)" fg:x="58059" fg:w="11"/><text x="99.7104%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="99.4638%" y="405" width="0.0154%" height="15" fill="rgb(240,127,35)" fg:x="58061" fg:w="9"/><text x="99.7138%" y="415.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (10 samples, 0.02%)</title><rect x="99.4792%" y="437" width="0.0171%" height="15" fill="rgb(248,196,34)" fg:x="58070" fg:w="10"/><text x="99.7292%" y="447.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8 samples, 0.01%)</title><rect x="99.4826%" y="421" width="0.0137%" height="15" fill="rgb(236,137,7)" fg:x="58072" fg:w="8"/><text x="99.7326%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="99.5152%" y="421" width="0.0103%" height="15" fill="rgb(235,127,16)" fg:x="58091" fg:w="6"/><text x="99.7652%" y="431.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (11 samples, 0.02%)</title><rect x="99.5152%" y="437" width="0.0188%" height="15" fill="rgb(250,192,54)" fg:x="58091" fg:w="11"/><text x="99.7652%" y="447.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (41 samples, 0.07%)</title><rect x="99.5426%" y="437" width="0.0702%" height="15" fill="rgb(218,98,20)" fg:x="58107" fg:w="41"/><text x="99.7926%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.03%)</title><rect x="99.5854%" y="421" width="0.0274%" height="15" fill="rgb(230,176,47)" fg:x="58132" fg:w="16"/><text x="99.8354%" y="431.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (9 samples, 0.02%)</title><rect x="99.6128%" y="437" width="0.0154%" height="15" fill="rgb(244,2,33)" fg:x="58148" fg:w="9"/><text x="99.8628%" y="447.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6 samples, 0.01%)</title><rect x="99.6334%" y="437" width="0.0103%" height="15" fill="rgb(231,100,17)" fg:x="58160" fg:w="6"/><text x="99.8834%" y="447.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (8 samples, 0.01%)</title><rect x="99.6437%" y="437" width="0.0137%" height="15" fill="rgb(245,23,12)" fg:x="58166" fg:w="8"/><text x="99.8937%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.01%)</title><rect x="99.6625%" y="421" width="0.0103%" height="15" fill="rgb(249,55,22)" fg:x="58177" fg:w="6"/><text x="99.9125%" y="431.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (9 samples, 0.02%)</title><rect x="99.6591%" y="437" width="0.0154%" height="15" fill="rgb(207,134,9)" fg:x="58175" fg:w="9"/><text x="99.9091%" y="447.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next::{{closure}} (44 samples, 0.08%)</title><rect x="99.6779%" y="437" width="0.0754%" height="15" fill="rgb(218,134,0)" fg:x="58186" fg:w="44"/><text x="99.9279%" y="447.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (7 samples, 0.01%)</title><rect x="99.7619%" y="437" width="0.0120%" height="15" fill="rgb(213,212,33)" fg:x="58235" fg:w="7"/><text x="100.0119%" y="447.50"></text></g><g><title>tokio::runtime::task::raw::poll (13 samples, 0.02%)</title><rect x="99.7739%" y="437" width="0.0223%" height="15" fill="rgb(252,106,18)" fg:x="58242" fg:w="13"/><text x="100.0239%" y="447.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (12 samples, 0.02%)</title><rect x="99.7756%" y="421" width="0.0206%" height="15" fill="rgb(208,126,42)" fg:x="58243" fg:w="12"/><text x="100.0256%" y="431.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (6 samples, 0.01%)</title><rect x="99.7961%" y="437" width="0.0103%" height="15" fill="rgb(246,175,29)" fg:x="58255" fg:w="6"/><text x="100.0461%" y="447.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::{{closure}} (9 samples, 0.02%)</title><rect x="99.8150%" y="437" width="0.0154%" height="15" fill="rgb(215,13,50)" fg:x="58266" fg:w="9"/><text x="100.0650%" y="447.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (14 samples, 0.02%)</title><rect x="99.8304%" y="437" width="0.0240%" height="15" fill="rgb(216,172,15)" fg:x="58275" fg:w="14"/><text x="100.0804%" y="447.50"></text></g><g><title>tokio::runtime::task::waker::waker_ref (6 samples, 0.01%)</title><rect x="99.8544%" y="437" width="0.0103%" height="15" fill="rgb(212,103,13)" fg:x="58289" fg:w="6"/><text x="100.1044%" y="447.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (17 samples, 0.03%)</title><rect x="99.8647%" y="437" width="0.0291%" height="15" fill="rgb(231,171,36)" fg:x="58295" fg:w="17"/><text x="100.1147%" y="447.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (6 samples, 0.01%)</title><rect x="99.9178%" y="437" width="0.0103%" height="15" fill="rgb(250,123,20)" fg:x="58326" fg:w="6"/><text x="100.1678%" y="447.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (13 samples, 0.02%)</title><rect x="99.9281%" y="437" width="0.0223%" height="15" fill="rgb(212,53,50)" fg:x="58332" fg:w="13"/><text x="100.1781%" y="447.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (6 samples, 0.01%)</title><rect x="99.9400%" y="421" width="0.0103%" height="15" fill="rgb(243,54,12)" fg:x="58339" fg:w="6"/><text x="100.1900%" y="431.50"></text></g><g><title>tracing_core::dispatcher::get_default (7 samples, 0.01%)</title><rect x="99.9726%" y="437" width="0.0120%" height="15" fill="rgb(234,101,34)" fg:x="58358" fg:w="7"/><text x="100.2226%" y="447.50"></text></g><g><title>all (58,374 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(254,67,22)" fg:x="0" fg:w="58374"/><text x="0.2500%" y="479.50"></text></g><g><title>tokio-runtime-w (9,931 samples, 17.01%)</title><rect x="82.9873%" y="453" width="17.0127%" height="15" fill="rgb(250,35,47)" fg:x="48443" fg:w="9931"/><text x="83.2373%" y="463.50">tokio-runtime-w</text></g></svg></svg>